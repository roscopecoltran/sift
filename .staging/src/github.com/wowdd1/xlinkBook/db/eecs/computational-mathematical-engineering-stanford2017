CME100 | Vector Calculus for Engineers | http://CME100.stanford.edu | instructors:Khayms, V. (PI); Le, H. (PI); Mani, A. (PI); Bhargava, P. (TA); Fadavi, D. (TA); Fournier-Bidoz, E. (TA); Gao, P. (TA); Genin, M. (TA); Krason, M. (TA); Sanchez, S. (TA); Storchan, V. (TA); Suresh, S. (TA); Westhoff, P. (TA); shirian, y. (TA) description:Computation and visualization using MATLAB.  Differential vector calculus:  analytic geometry in space, functions of several variables, partial derivatives, gradient, unconstrained maxima and minima, Lagrange multipliers. Introduction to linear algebra: matrix operations, systems of algebraic equations, methods of solution and applications. Integral vector calculus:  multiple integrals in Cartesian, cylindrical, and spherical coordinates, line integrals, scalar potential, surface integrals, Green¿s, divergence, and Stokes¿ theorems.  Examples and applications drawn from various engineering fields. Prerequisites: 10 units of AP credit (Calc BC with 4 or 5, or Calc AB with 5), or Math 41 and 42.
CME100A | Vector Calculus for Engineers, ACE | https://explorecourses.stanford.edu/search?q=CME100A | instructors:Khayms, V. (PI); Le, H. (PI); Mani, A. (PI); Bhargava, P. (TA); Fadavi, D. (TA); Fournier-Bidoz, E. (TA); Gao, P. (TA); Genin, M. (TA); Krason, M. (TA); Sanchez, S. (TA); Storchan, V. (TA); Suresh, S. (TA); Westhoff, P. (TA); shirian, y. (TA) description:Students attend CME100/ENGR154 lectures with additional recitation sessions; two to four hours per week, emphasizing engineering mathematical applications and collaboration methods. Enrollment by department permission only. Prerequisite: must be enrolled in the regular CME100-01 or 02. Application at: https://engineering.stanford.edu/students/programs/engineering-diversity-programs/additional-calculus-engineers
CME102 | Ordinary Differential Equations for Engineers | http://CME102.stanford.edu | instructors:Darve, E. (PI); Le, H. (PI); Baalbaki, W. (TA); Martinez, J. (TA); Moon, T. (TA); Najmabadi, C. (TA) description:Analytical and numerical methods for solving ordinary differential equations arising in engineering applications: Solution of initial and boundary value problems, series solutions, Laplace transforms, and nonlinear equations; numerical methods for solving ordinary differential equations, accuracy of numerical methods, linear stability theory, finite differences. Introduction to MATLAB programming as a basic tool kit for computations. Problems from various engineering fields. Prerequisite: 10 units of AP credit (Calc BC with 4 or 5, or Calc AB with 5), or Math 41 and 42. Recommended: CME100.
CME102A | Ordinary Differential Equations for Engineers, ACE | https://explorecourses.stanford.edu/search?q=CME102A | instructors:Le, H. (PI); Baalbaki, W. (TA); Darve, E. (TA); Martinez, J. (TA); Moon, T. (TA); Najmabadi, C. (TA) description:Students attend CME102/ENGR155A lectures with additional recitation sessions; two to four hours per week, emphasizing engineering mathematical applications and collaboration methods. Prerequisite: students must be enrolled in the regular section (CME102) prior to submitting application at:nhttps://engineering.stanford.edu/students/programs/engineering-diversity-programs/additional-calculus-engineers
CME103 | Introduction to Matrix Methods | http://CME103.stanford.edu | instructors:Boyd, S. (PI); Angeris, G. (TA); Busseti, E. (TA); Fan, L. (TA); Hwang, J. (TA); Leung, K. (TA); Mu, R. (TA); Nishimura, M. (TA); Park, D. (TA); Pathak, R. (TA); Prasad, V. (TA); Tea-mangkornpan, P. (TA) description:Introduction to applied linear algebra with emphasis on applications. Vectors, norm, and angle; linear independence and orthonormal sets; applications to document analysis. Clustering and the k-means algorithm.  Matrices, left and right inverses, QR factorization. Least-squares and model fitting, regularization and cross-validation.  Constrained and nonlinear least-squares.  Applications include time-series prediction, tomography, optimal control, and portfolio optimization.  Prerequisites:MATH 51 or CME 100, and basic knowledge of computing (CS 106A is more than enough, and can be taken concurrently). EE103/CME103 and Math 104 cover complementary topics in applied linear algebra. The focus of EE103 is on a few linear algebra concepts, and many applications; the focus of Math 104 is on algorithms and concepts.
CME104 | Linear Algebra and Partial Differential Equations for Engineers | http://CME104.stanford.edu | instructors:Khayms, V. (PI) description:Linear algebra: matrix operations, systems of algebraic equations, Gaussian elimination, undetermined and overdetermined systems, coupled systems of ordinary differential equations, eigensystem analysis, normal modes. Fourier series with applications, partial differential equations arising in science and engineering, analytical solutions of partial differential equations. Numerical methods for solution of partial differential equations: iterative techniques, stability and convergence, time advancement, implicit methods, von Neumann stability analysis. Examples and applications from various engineering fields. Prerequisite: CME 102/ENGR 155A.
CME104A | Linear Algebra and Partial Differential Equations for Engineers, ACE | https://explorecourses.stanford.edu/search?q=CME104A | instructors:Khayms, V. (PI); Gao, P. (TA); Hegde, V. (TA); Katanforoosh, K. (TA); shirian, y. (TA) description:Students attend CME104/ENGR155B lectures with additional recitation sessions; two to four hours per week, emphasizing engineering mathematical applications and collaboration methods. Prerequisite: students must be enrolled in the regular section (CME102) prior to submitting application at: https://engineering.stanford.edu/students/programs/engineering-diversity-programs/additional-calculus-engineers
CME106 | Introduction to Probability and Statistics for Engineers | http://CME106.stanford.edu | instructors:Khayms, V. (PI) description:Probability: random variables, independence, and conditional probability; discrete and continuous distributions, moments, distributions of several random variables. Topics in mathematical statistics: random sampling, point estimation, confidence intervals, hypothesis testing, non-parametric tests, regression and correlation analyses; applications in engineering, industrial manufacturing, medicine, biology, and other fields. Prerequisite: CME 100/ENGR154 or MATH 51 or 52.
CME108 | Introduction to Scientific Computing | http://CME108.stanford.edu | instructors:Orozco Bohorquez, C. (PI); Ying, L. (PI) description:Introduction to Scientific Computing Numerical computation for mathematical, computational, physical sciences and engineering: error analysis, floating-point arithmetic, nonlinear equations, numerical solution of systems of algebraic equations, banded matrices, least squares, unconstrained optimization, polynomial interpolation, numerical differentiation and integration, numerical solution of ordinary differential equations, truncation error, numerical stability for time dependent problems and stiffness. Implementation of numerical methods in MATLAB programming assignments. Prerequisites: MATH 51, 52, 53; prior programming experience (MATLAB or other language at level of CS 106A or higher). Graduate students should take it for 3 units and undergraduate students should take it for 4 units.
CME151 | Introduction to Data Visualization | https://explorecourses.stanford.edu/search?q=CME151 | instructors:Deriso, D. (PI) description:Bring your data to life with beautiful and interactive visualizations. This course is designed to provide practical experience on combining data science and graphic design to effectively communicate knowledge buried inside complex data. Each lecture will explore a different set of free industry-standard tools, for example d3.js, three.js, ggplots2, and processing; enabling students to think critically about how to architect their own interactive visualization for data exploration, web, presentations, and publications. Geared towards scientists and engineers, and with a particular emphasis on web, this course assumes an advanced background in programming methodology in multiple languages (particularly R and Javascript). Assignments are short and focus on visual experimentation with interesting data sets or the students' own data. Topics: data, visualization, web. Prerequisites: some experience with general programming is required to understand the lectures and assignments.
CME192 | Introduction to MATLAB | https://explorecourses.stanford.edu/search?q=CME192 | instructors:Craig, A. (PI) description:This short course runs for the first eight weeks of the quarter and is offered each quarter during the academic year.  It is highly recommended for students with no prior programming experience who are expected to use MATLAB in math, science, or engineering courses.  It will consist of interactive lectures and application-based assignments.nThe goal of the short course is to make students fluent in MATLAB and to provide familiarity with its wide array of features.  The course covers an introduction of basic programming concepts, data structures, and control/flow; and an introduction to scientific computing in MATLAB, scripts, functions, visualization, simulation, efficient algorithm implementation, toolboxes, and more.
CME193 | Introduction to Scientific Python | https://explorecourses.stanford.edu/search?q=CME193 | instructors:Jennings, B. (PI); Skochdopole, N. (PI) description:This short course runs for the first four weeks of the quarter. It is recommended for students who are familiar with programming at least at the level of CS106A and want to translate their programming knowledge to Python with the goal of becoming proficient in the scientific computing and data science stack. Lectures will be interactive with a focus on real world applications of scientific computing. Technologies covered include Numpy, SciPy, Pandas, Scikit-learn, and others. Topics will be chosen from Linear Algebra, Optimization, Machine Learning, and Data Science. Prior knowledge of programming will be assumed, and some familiarity with Python is helpful, but not mandatory.
CME195 | Introduction to R | https://explorecourses.stanford.edu/search?q=CME195 | instructors:Michael, H. (PI); Nguyen, L. (PI) description:This short course runs for the first four weeks of the quarter and is offered in fall and spring.  It is recommended for students who want to use R in statistics, science, or engineering courses and for students who want to learn the basics of R programming. The goal of the short course is to familiarize students with R's tools for scientific computing. Lectures will be interactive with a focus on learning by example, and assignments will be application-driven. No prior programming experience is needed. Topics covered include basic data structures, File I/O, graphs, control structures, etc, and some useful packages in R.
CME200 | Linear Algebra with Application to Engineering Computations | https://explorecourses.stanford.edu/search?q=CME200 | instructors:Iaccarino, G. (PI); Camelo Gomez, S. (TA); Keramati, R. (TA); Krishnan, S. (TA); Navalpakkam Srinivasan Acharya, S. (TA); Zanette, A. (TA) description:Computer based solution of systems of algebraic equations obtained from engineering problems and eigen-system analysis, Gaussian elimination, effect of round-off error, operation counts, banded matrices arising from discretization of differential equations, ill-conditioned matrices, matrix theory, least square solution of unsolvable systems, solution of non-linear algebraic equations, eigenvalues and eigenvectors, similar matrices, unitary and Hermitian matrices, positive definiteness, Cayley-Hamilton theory and function of a matrix and iterative methods. Prerequisite: familiarity with computer programming, and MATH51.
CME204 | Partial Differential Equations in Engineering | https://explorecourses.stanford.edu/search?q=CME204 | instructors:Lele, S. (PI); Wong, M. (TA) description:Geometric interpretation of partial differential equation (PDE) characteristics; solution of first order PDEs and classification of second-order PDEs; self-similarity; separation of variables as applied to parabolic, hyperbolic, and elliptic PDEs; special functions; eigenfunction expansions; the method of characteristics. If time permits, Fourier integrals and transforms, Laplace transforms. Prerequisite: CME 200/ME 300A, equivalent, or consent of instructor.
CME206 | Introduction to Numerical Methods for Engineering | http://CME206.stanford.edu | instructors:Marsden, A. (PI) description:Numerical methods from a user's point of view. Lagrange interpolation, splines. Integration: trapezoid, Romberg, Gauss, adaptive quadrature; numerical solution of ordinary differential equations: explicit and implicit methods, multistep methods, Runge-Kutta and predictor-corrector methods, boundary value problems, eigenvalue problems; systems of differential equations, stiffness. Emphasis is on analysis of numerical methods for accuracy, stability, and convergence. Introduction to numerical solutions of partial differential equations; Von Neumann stability analysis; alternating direction implicit methods and nonlinear equations. Prerequisites: CME 200/ME 300A, CME 204/ME 300B.
CME207 | Numerical Methods in Engineering and Applied Sciences | https://explorecourses.stanford.edu/search?q=CME207 | instructors:Gerritsen, M. (PI); Suckale, J. (PI); Leibovich, M. (TA) description:Scientific computing and numerical analysis for physical sciences and engineering. Advanced version of CME206 that, apart from CME206 material, includes nonlinear PDEs, multidimensional interpolation and integration and an extended discussion of stability for initial boundary value problems. Recommended for students who have some prior numerical analysis experience. Topics include: 1D and multi-D interpolation, numerical integration in 1D and multi-D including adaptive quadrature, numerical solutions of ordinary differential equations (ODEs) including stability, numerical solutions of 1D and multi-D linear and nonlinear partial differential equations (PDEs) including concepts of stability and accuracy. Prerequisites: linear algebra, introductory numerical analysis (CME 108 or equivalent).
CME20Q | Computational Modeling for Future Leaders | https://explorecourses.stanford.edu/search?q=CME20Q | instructors:Minion, M. (PI) description:Preference to sophomores. How can we harness and exploit the power of computational modeling? What responsibilities are there in developing and using computer models? In this course we will analyze fundamental issues inherent to computational modeling such as uncertainty, predictability, error, and resolution.  We will furthermore examine the social context of computational modeling including the public perception of computational models, how computer modeling impacts politics and policy, and how politics and policy, in turn, influence computer modeling.
CME211 | Software Development for Scientists and Engineers | http://CME211.stanford.edu | instructors:Henderson, N. (PI); Chen, Y. (TA); Orozco Bohorquez, C. (TA); Santucci, A. (TA); Shoemaker, A. (TA); Watkins, J. (TA) description:Basic usage of the Python and C/C++ programming languages are introduced and used to solve representative computational problems from various science and engineering disciplines. Software design principles including time and space complexity analysis, data structures, object-oriented design, decomposition, encapsulation, and modularity are emphasized. Usage of campus wide Linux compute resources: login, file system navigation, editing files, compiling and linking, file transfer, etc. Versioning and revision control, software build utilities, and the LaTeX typesetting software are introduced and used to help complete programming assignments. Prerequisite: introductory programming course equivalent to CS 106A or instructor consent.
CME212 | Advanced Software Development for Scientists and Engineers | http://CME212.stanford.edu | instructors:Cecka, C. (PI); Henderson, N. (PI) description:Advanced topics in software development, debugging, and performance optimization are covered. The capabilities and usage of common libraries and frameworks such as BLAS, LAPACK, FFT, PETSc, and MKL/ACML are reviewed. Computer representation of integer and floating point numbers, and interoperability between C/C++ and Fortran is described. More advanced software engineering topics including: representing data in files, signals, unit and regression testing, and build automation. The use of debugging tools including static analysis, gdb, and Valgrind are introduced. An introduction to computer architecture covering processors, memory hierarchy, storage, and networking provides a foundation for understanding software performance. Profiles generated using gprof and perf are used to help guide the performance optimization process. Computational problems from various science and engineering disciplines will be used in assignments. Prerequisites: CME 200 / ME 300A and CME 211.  The CME 211 requirement may be satisfied by passing a placement test administered by ICME.
CME213 | Introduction to parallel computing using MPI, openMP, and CUDA | http://CME213.stanford.edu | instructors:Darve, E. (PI) description:This class will give  hands on experience with programming multicore processors, graphics processing units (GPU), and parallel computers. Focus will be on the message passing interface (MPI, parallel clusters) and the compute unified device architecture (CUDA, GPU). Topics will include: network topologies, modeling communication times, collective communication operations, parallel efficiency, MPI, dense linear algebra using MPI. Symmetric multiprocessing (SMP), pthreads, openMP. CUDA, combining MPI and CUDA, dense linear algebra using CUDA, sort, reduce and scan using CUDA. Pre-requisites include: C programming language and numerical algorithms (solution of differential equations, linear algebra, Fourier transforms).
CME214 | Software Design in Modern Fortran for Scientists and Engineers | https://explorecourses.stanford.edu/search?q=CME214 | instructors:Rouson, D. (PI) description:This course introduces software design and development in modern Fortran. Course covers the functional, object-oriented-, and parallel programming features introduced in the Fortran 95, 2003, and 2008 standards, respectively, in the context of numerical approximations to ordinary and partial differential equations; introduces object-oriented design and design schematics based on the Unified Modeling Language (UML) structure, behavior, and interaction diagrams; cover the basic use of several open-source tools for software building, testing, documentation generation, and revision control. Recommended: Familiarity with programming in Fortran 90, basic numerical analysis and linear algebra, or instructor approval
CME215A | Advanced Computational Fluid Dynamics | https://explorecourses.stanford.edu/search?q=CME215A | instructors:Jameson, A. (PI) description:High resolution schemes for capturing shock waves and contact discontinuities; upwinding and artificial diffusion; LED and TVD concepts; alternative flow splittings; numerical shock structure. Discretization of Euler and Navier Stokes equations on unstructured meshes; the relationship between finite volume and finite element methods. Time discretization; explicit and implicit schemes; acceleration of steady state calculations; residual averaging; math grid preconditioning. Automatic design; inverse problems and aerodynamic shape optimization via adjoint methods. Pre- or corequisite: 214B or equivalent.
CME238 | Artificial Intelligence in Financial Technology | https://explorecourses.stanford.edu/search?q=CME238 | instructors:Giesecke, K. (PI); Jain, K. (PI); Sadhwani, A. (TA) description:Survey the current Financial Technology landscape through the lens of Artificial Intelligence applications, with emphasis in 4 areas: Payments, Blockchain and Cryptocurrencies, Robo-Advisory, and Marketplace Lending. Students work in groups of 4 to develop an original financial technology project, research paper or product prototype within a chosen area. Final project posters to be presented to the class and posted online. Top posters to be selected and presented at the Stanford Financial Technology conference in January. Classes will alternate between industry speakers, lectures and scheduled group meetings with teaching team. Advanced undergraduates, graduate students, and students from other Schools are welcome to enroll. Prerequisites: Basic programming skills, knowledge of design process, introductory statistics. No formal finance experience required. Enrollment is capped at 32.
CME242 | Mathematical and Computational Finance Seminar | https://explorecourses.stanford.edu/search?q=CME242 | instructors:Jain, K. (PI) description:
CME243 | Risk Analytics and Management in Finance and Insurance | https://explorecourses.stanford.edu/search?q=CME243 | instructors:Tsang, K. (PI) description:Market risk and credit risk, credit markets. Back testing, stress testing and Monte Carlo methods. Logistic regression, generalized linear models and generalized mixed models. Loan prepayment and default as competing risks.  Survival and hazard functions, correlated default intensities, frailty and contagion.  Risk surveillance, early warning and adaptive control methodologies. Banking and bank regulation, asset and liability management. Prerequisite: STATS 240 or equivalent.
CME244 | Project Course in Mathematical and Computational Finance | https://explorecourses.stanford.edu/search?q=CME244 | instructors:Jain, K. (PI); Horel, E. (TA) description:For graduate students in the MCF track; students will work individually or in groups on research projects.
CME245 | Topics in Mathematical and Computational Finance | https://explorecourses.stanford.edu/search?q=CME245 | instructors:Jain, K. (PI); Sircar, K. (PI) description:Description: Current topics for enrolled students in the MCF program: This course is an introduction to computational, statistical, and optimizations methods and their application to financial markets. Class will consist of lectures and real-time problem solving. Topics: Python & R programming, interest rates, Black-Scholes model, financial time series, capital asset pricing model (CAPM), options, optimization methods, and machine learning algorithms. Appropriate for anyone with a technical and solid applied math background interested in honing skills in quantitative finance. Prerequisite: basic statistics and exposure to programming.Can be repeated up to three times.
CME249A | Statistical Arbitrage | https://explorecourses.stanford.edu/search?q=CME249A | instructors:Jain, K. (PI) description:Course will cover trading strategies that are bottom up, market neutral, with trading driven by statistical or econometric models and strategies such as pair trading and index arbitrage.  Models may focus on tendency of short term returns to revert, leads/lags among correlated instruments, volume momentum, or behavioral effects.  nTopics include: (a) a taxonomy of market participants and what motivates trading, (b) methods of exploring relationships between instruments, (c) portfolio construction across a large number of instruments, (d) risks inherent in statistical arbitrage (e) nonstationarity of relationships due to changes in market regulations, fluctuations in market volatility and other factors and (f) frictions such as costs of trading and constraints.  Students will team to analyze the provided data sets which cover distinct dynamic market regimes.
CME250 | Introduction to Machine Learning | http://CME250.stanford.edu | instructors:Maher, G. (PI) description:A Short course presenting the principles behind when, why, and how to apply modern machine learning algorithms. We will discuss a framework for reasoning about when to apply various machine learning techniques, emphasizing questions of over-fitting/under-fitting, regularization, interpretability, supervised/unsupervised methods, and handling of missing data. The principles behind various algorithms--the why and how of using them--will be discussed, while some mathematical detail underlying the algorithms--including proofs--will not be discussed. Unsupervised machine learning algorithms presented will include k-means clustering, principal component analysis (PCA), and independent component analysis (ICA). Supervised machine learning algorithms presented will include support vector machines (SVM), classification and regression trees (CART), boosting, bagging, and random forests. Imputation, the lasso, and cross-validation concepts will also be covered. The R programming language will be used for examples, though students need not have prior exposure to R. Prerequisite: undergraduate-level linear algebra and statistics; basic programming experience (R/Matlab/Python).
CME252A | Applications of Optimization in Telecom Networks | https://explorecourses.stanford.edu/search?q=CME252A | instructors:Gous, A. (PI) description:Introduction to traffic planning and engineering on the Internet. Overview of Internet architecture; applications of linear and nonlinear optimization to traffic matrix estimation; capacity planning and routing optimization and experimentation with algorithms in Julia. Requirements: some optimization and technical computing experience would help, but open to anyone interested in the topic  talk to instructor if unsure.
CME253 | Introduction to GPU Computing and CUDA | https://explorecourses.stanford.edu/search?q=CME253 | instructors:Bernauer, J. (PI) description:Covers the fundamentals of accelerating applications with GPUs (Graphics Processing Units); GPU programming with CUDA and OpenACC, debugging, thrust/CUB, profiling, optimization, debugging, and other CUDA tools. Libraries to easily accelerate compute code will be presented and deployment on larger systems will be addressed, including multi-GPU environments. Several practical examples will be detailed, including deep learning. Pre-requiste: knowledge of C/C++ at the level of CME211 or CS106b.
CME263 | Introduction to Linear Dynamical Systems | https://explorecourses.stanford.edu/search?q=CME263 | instructors:Nasiri Mahalati, R. (PI); Hemmati, S. (TA); Momeni, A. (TA); Shah, K. (TA); Sharafat, A. (TA); Zhou, Z. (TA) videourl:https://itunes.apple.com/us/course/introduction-to-linear-dynamical/id495052533 description:Applied linear algebra and linear dynamical systems with applications to circuits, signal processing, communications, and control systems. Topics: least-squares approximations of over-determined equations, and least-norm solutions of underdetermined equations. Symmetric matrices, matrix norm, and singular-value decomposition. Eigenvalues, left and right eigenvectors, with dynamical interpretation. Matrix exponential, stability, and asymptotic behavior. Multi-input/multi-output systems, impulse and step matrices; convolution and transfer-matrix descriptions. Control, reachability, and state transfer; observability and least-squares state estimation. Prerequisites: linear algebra and matrices as in MATH104; differential equations and Laplace transforms as in EE102B.
CME279 | Computational Biology: Structure and Organization of Biomolecules and Cells | http://CME279.stanford.edu | instructors:Dror, R. (PI); El-Gabalawy, O. (GP); El-Gabalawy, O. (TA); Ma, A. (GP); Ma, A. (TA) description:Computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules and cells.  These computational methods play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course topics include protein structure prediction, protein design, drug screening, molecular simulation, cellular-level simulation, image analysis for microscopy, and methods for solving structures from crystallography and electron microscopy data.  Prerequisites: elementary programming background (CS 106A or equivalent) and an introductory course in biology or biochemistry.
CME285 | Computational Modeling in the Cardiovascular System | https://explorecourses.stanford.edu/search?q=CME285 | instructors:Marsden, A. (PI) description:This course introduces computational modeling methods for cardiovascular blood flow and physiology.  Topics in this course include analytical and computational methods for solutions of flow in deformable vessels, one-dimensional equations of blood flow, cardiovascular anatomy, lumped parameter models, vascular trees, scaling laws, biomechanics of the circulatory system, and 3D patient specific modeling with finite elements; course will provide an overview of the diagnosis and treatment of adult and congenital cardiovascular diseases and review recent research in the literature in a journal club format.  Students will use SimVascular software to do clinically-oriented projects in patient specific blood flow simulations.
CME291 | Master's Research | https://explorecourses.stanford.edu/search?q=CME291 | instructors:Aiken, A. (PI); Alonso, J. (PI); Bambos, N. (PI); Biondi, B. (PI); Boneh, D. (PI); Bosagh Zadeh, R. (PI); Boyd, S. (PI); Butte, A. (PI); Candes, E. (PI); Carlsson, G. (PI); Constantinou, C. (PI); Darve, E. (PI); Davis, R. (PI); Diaconis, P. (PI); Donoho, D. (PI); Farhat, C. (PI); Fedkiw, R. (PI); Feinstein, J. (PI); Fringer, O. (PI); Fruchter, R. (PI); Gerritsen, M. (PI); Giesecke, K. (PI); Glynn, P. (PI); Goel, A. (PI); Guibas, L. (PI); Hanrahan, P. (PI); Harris, J. (PI); Jain, K. (PI); Jameson, A. (PI); Johari, R. (PI); Kahn, S. (PI); Kamvar, S. (PI); Khayms, V. (PI); Koltun, V. (PI); Langley, P. (PI); Lele, S. (PI); Leskovec, J. (PI); Levinson, D. (PI); Lew, A. (PI); Liu, T. (PI); Manning, C. (PI); McFarland, D. (PI); Mignot, E. (PI); Moin, P. (PI); Murray, W. (PI); Napel, S. (PI); Ng, A. (PI); Papanicolaou, G. (PI); Pelger, M. (PI); Rajaratnam, B. (PI); Re, C. (PI); Reed, E. (PI); Saberi, A. (PI); Saunders, M. (PI); Schwartzman, A. (PI); Shaqfeh, E. (PI); Suckale, J. (PI); Taylor, C. (PI); Wall, D. (PI); Wara, M. (PI); Wechsler, R. (PI); Wong, W. (PI); Ye, Y. (PI); Zenios, S. (PI); Zou, J. (PI) description:Students require faculty sponsor. (Staff)
CME292 | Advanced MATLAB for Scientific Computing | https://explorecourses.stanford.edu/search?q=CME292 | instructors:Maddix, D. (PI) description:Short course running first four weeks of the quarter (8 lectures) with interactive lectures and application based assignment.  Students will be introduced to advanced MATLAB features, syntaxes, and toolboxes not traditionally found in introductory courses.  Material will be reinforced with in-class examples, demos, and homework assignment involving topics from scientific computing. MATLAB topics will be drawn from: advanced graphics (2D/3D plotting, graphics handles, publication quality graphics, animation), MATLAB tools (debugger, profiler), code optimization (vectorization, memory management), object-oriented programming, compiled MATLAB (MEX files and MATLAB coder), interfacing with external programs, toolboxes (optimization, parallel computing, symbolic math, PDEs).  Scientific computing topics will include: numerical linear algebra, numerical optimization, ODEs, and PDEs.
CME298 | Basic Probability and Stochastic Processes with Engineering Applications | https://explorecourses.stanford.edu/search?q=CME298 | instructors:Gu, Y. (PI) description:Calculus of random variables and their distributions with applications. Review of limit theorems of probability and their application to statistical estimation and basic Monte Carlo methods. Introduction to Markov chains, random walks, Brownian motion and basic stochastic differential equations with emphasis on applications from economics, physics and engineering, such as  filtering and control. Prerequisites: exposure to basic probability.
CME300 | First Year Seminar Series | https://explorecourses.stanford.edu/search?q=CME300 | instructors:Gerritsen, M. (PI) description:Required for first-year ICME Ph.D. students; recommended for first-year ICME M.S. students. Presentations about research at Stanford by faculty and researchers from Engineering, H&S, and organizations external to Stanford. May be repeated for credit.
CME302 | Numerical Linear Algebra | https://explorecourses.stanford.edu/search?q=CME302 | instructors:Darve, E. (PI); Chen, L. (TA); Estrin, R. (TA); Wang, R. (TA) description:Solution of linear systems, accuracy, stability, LU, Cholesky, QR, least squares problems, singular value decomposition, eigenvalue computation, iterative methods, Krylov subspace, Lanczos and Arnoldi processes, conjugate gradient, GMRES, direct methods for sparse matrices. Prerequisites: CME 108, MATH 114, MATH 104.
CME303 | Partial Differential Equations of Applied Mathematics | https://explorecourses.stanford.edu/search?q=CME303 | instructors:Ryzhik, L. (PI); Liu, F. (TA) description:First-order partial differential equations; method of characteristics; weak solutions; elliptic, parabolic, and hyperbolic equations; Fourier transform; Fourier series; and eigenvalue problems. Prerequisite: Basic coursework in multivariable calculus and ordinary differential equations, and some prior experience with a proof-based treatment of the material as in Math 171 or Math 61CM (formerly Math 51H).
CME305 | Discrete Mathematics and Algorithms | http://CME305.stanford.edu | instructors:Bosagh Zadeh, R. (PI) description:Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.
CME306 | Numerical Solution of Partial Differential Equations | http://CME306.stanford.edu | instructors:Ying, L. (PI) description:Hyperbolic partial differential equations: stability, convergence and qualitative properties; nonlinear hyperbolic equations and systems; combined solution methods from elliptic, parabolic, and hyperbolic problems. Examples include: Burger's equation, Euler equations for compressible flow, Navier-Stokes equations for incompressible flow. Prerequisites: MATH 220A or CME 302.
CME307 | Optimization | https://explorecourses.stanford.edu/search?q=CME307 | instructors:Ye, Y. (PI); Camelo Gomez, S. (GP); Zanette, A. (GP); Zhang, J. (GP) description:Applications, theories, and algorithms for finite-dimensional linear and nonlinear optimization problems with continuous variables. Elements of convex analysis, first- and second-order optimality conditions, sensitivity and duality. Algorithms for unconstrained optimization, and linearly and nonlinearly constrained problems. Modern applications in communication, game theory, auction, and economics. Prerequisites: MATH 113, 115, or equivalent.
CME308 | Stochastic Methods in Engineering | http://CME308.stanford.edu | instructors:Glynn, P. (PI) description:The basic limit theorems of probability theory and their application to maximum likelihood estimation. Basic Monte Carlo methods and importance sampling.  Markov chains and processes, random walks, basic ergodic theory and its application to parameter estimation. Discrete time stochastic control and Bayesian filtering. Diffusion approximations, Brownian motion and an introduction to stochastic differential equations. Examples and problems from various applied areas. Prerequisites: exposure to probability and background in analysis.
CME309 | Randomized Algorithms and Probabilistic Analysis | https://explorecourses.stanford.edu/search?q=CME309 | instructors:Valiant, G. (PI); Bastani, O. (TA); Voisin, M. (TA); Zhang, H. (TA) description:Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.
CME322 | Spectral Methods in Computational Physics | https://explorecourses.stanford.edu/search?q=CME322 | instructors:Moin, P. (PI); Bae, J. (TA) description:Data analysis, spectra and correlations, sampling theorem, nonperiodic data, and windowing; spectral methods for numerical solution of partial differential equations; accuracy and computational cost; fast Fourier transform, Galerkin, collocation, and Tau methods; spectral and pseudospectral methods based on Fourier series and eigenfunctions of singular Sturm-Liouville problems; Chebyshev, Legendre, and Laguerre representations; convergence of eigenfunction expansions; discontinuities and Gibbs phenomenon; aliasing errors and control; efficient implementation of spectral methods; spectral methods for complicated domains; time differencing and numerical stability.
CME323 | Distributed Algorithms and Optimization | http://CME323.stanford.edu | instructors:Bosagh Zadeh, R. (PI) description:The emergence of large distributed clusters of commodity machines has brought with it a slew of new algorithms and tools. Many fields such as Machine Learning and Optimization have adapted their algorithms to handle such clusters. Topics include distributed algorithms for: Optimization, Numerical Linear Algebra, Machine Learning, Graph analysis, Streaming algorithms, and other problems that are challenging to scale on a commodity cluster. The class will focus on analyzing parallel programs, with some implementation using Apache Spark.
CME330 | Applied Mathematics in the Chemical and Biological Sciences | https://explorecourses.stanford.edu/search?q=CME330 | instructors:Spakowitz, A. (PI); Asundi, A. (TA); Murch, W. (TA) description:Mathematical solution methods via applied problems including chemical reaction sequences, mass and heat transfer in chemical reactors, quantum mechanics, fluid mechanics of reacting systems, and chromatography. Topics include generalized vector space theory, linear operator theory with eigenvalue methods, phase plane methods, perturbation theory (regular and singular), solution of parabolic and elliptic partial differential equations, and transform methods (Laplace and Fourier). Prerequisites: CME 102/ENGR 155A and CME 104/ENGR 155B, or equivalents.
CME338 | Large-Scale Numerical Optimization | https://explorecourses.stanford.edu/search?q=CME338 | instructors:Saunders, M. (PI) description:The main algorithms and software for constrained optimization emphasizing the sparse-matrix methods needed for their implementation. Iterative methods for linear equations and least squares. The simplex method. Basis factorization and updates. Interior methods. The reduced-gradient method, augmented Lagrangian methods, and SQP methods. Prerequisites: Basic numerical linear algebra, including LU, QR, and SVD factorizations, and an interest in MATLAB, sparse-matrix methods, and gradient-based algorithms for constrained optimization. Recommended: MS&E 310, 311, 312, 314, or 315; CME 108, 200,  302, 304, 334, or 335.
CME342 | Parallel Methods in Numerical Analysis | https://explorecourses.stanford.edu/search?q=CME342 | instructors:Alonso, J. (PI) description:Emphasis is on techniques for obtaining maximum parallelism in numerical algorithms, especially those occurring when solving matrix problems, partial differential equations, and the subsequent mapping onto the computer. Implementation issues on parallel computers. Topics: parallel architecture, programming models (MPI, GPU Computing with CUDA ¿ quick review), matrix computations, FFT, fast multiple methods, domain decomposition, graph partitioning, discrete algorithms. Prerequisites: 302 or 200 (ME 300A), 213 or equivalent, or consent of instructor. Recommended: differential equations and knowledge of a high-level programming language such as C or C++ (F90/95 also allowable).
CME345 | Model Reduction | https://explorecourses.stanford.edu/search?q=CME345 | instructors:Farhat, C. (PI) description:Model reduction is an indispensable tool for computational-based design and optimization, statistical analysis, embedded computing, and real-time optimal control. This course presents the basic mathematical theory for projection-based model reduction. Topics include: notions of linear dynamical systems and projection; projection-based model reduction; error analysis; proper orthogonal decomposition; Hankel operator and balancing of a linear dynamical system; balanced truncation method: modal truncation and other reduction methods for linear oscillators; model reduction via moment matching methods based on Krylov subspaces; introduction to model reduction of parametric systems and notions of nonlinear model reduction. Course material is complemented by a balanced set of theoretical, algorithmic and Matlab computer programming assignments. Prerequisites: CME 200 or equivalent, CME 263 or equivalent and basic numerical methods for ODEs.
CME364A | Convex Optimization I | http://CME364A.stanford.edu | instructors:Boyd, S. (PI) videourl:https://itunes.apple.com/us/course/convex-optimization-i/id495052530 description:Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability.
CME371 | Computational Biology in Four Dimensions | https://explorecourses.stanford.edu/search?q=CME371 | instructors:Dror, R. (PI); El-Gabalawy, O. (GP); Ma, A. (GP); Ujihara, G. (GP) description:Cutting-edge research on computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules, cells, and everything in between.  These techniques, which draw on approaches ranging from physics-based simulation to machine learning, play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course is devoted primarily to reading, presentation, discussion, and critique of papers describing important recent research developments.  Prerequisite: CS 106A or equivalent, and an introductory course in biology or biochemistry. Recommended: some experience in mathematical modeling (does not need to be a formal course).
CME390 | Curricular Practical Training | https://explorecourses.stanford.edu/search?q=CME390 | instructors:Iaccarino, G. (PI); Jain, K. (PI); Murray, W. (PI) description:Educational opportunities in high technology research and development labs in applied mathematics. Qualified ICME students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. May be repeated three times for credit.
CME399 | Special Research Topics in Computational and Mathematical Engineering | https://explorecourses.stanford.edu/search?q=CME399 | instructors:Boyd, S. (PI); Candes, E. (PI); Carlsson, G. (PI); Darve, E. (PI); Gerritsen, M. (PI); Hastie, T. (PI); Kamvar, S. (PI); Levi, O. (PI) description:Graduate-level research work not related to report, thesis, or dissertation. May be repeated for credit.
CME400 | Ph.D. Research | https://explorecourses.stanford.edu/search?q=CME400 | instructors:Alonso, J. (PI); Athey, S. (PI); Bambos, N. (PI); Beroza, G. (PI); Biondi, B. (PI); Boahen, K. (PI); Boneh, D. (PI); Bosagh Zadeh, R. (PI); Boyd, S. (PI); Bustamante, C. (PI); Candes, E. (PI); Carlsson, G. (PI); Charikar, M. (PI); Darve, E. (PI); Delp, S. (PI); Diaconis, P. (PI); Donoho, D. (PI); Dror, R. (PI); Farhat, C. (PI); Fedkiw, R. (PI); Fringer, O. (PI); Genesereth, M. (PI); Gerritsen, M. (PI); Giesecke, K. (PI); Glynn, P. (PI); Goel, A. (PI); Guibas, L. (PI); Hanrahan, P. (PI); Hastie, T. (PI); Holmes, S. (PI); Hong, H. (PI); Iaccarino, G. (PI); James, D. (PI); Jameson, A. (PI); Johari, R. (PI); Kamvar, S. (PI); Khatib, O. (PI); Khayms, V. (PI); Kitanidis, P. (PI); Kosovichev, A. (PI); Kumar, S. (PI); Lai, T. (PI); Langley, P. (PI); Lee, P. (PI); Lele, S. (PI); Leskovec, J. (PI); Levinson, D. (PI); Levitt, M. (PI); Lew, A. (PI); Linder, C. (PI); Liu, T. (PI); Marsden, A. (PI); Moerner, W. (PI); Moin, P. (PI); Montanari, A. (PI); Motwani, R. (PI); Murray, W. (PI); Ng, A. (PI); Pande, V. (PI); Papanicolaou, G. (PI); Pitsch, H. (PI); Plevritis, S. (PI); Poulson, J. (PI); Rajagopal, R. (PI); Rajaratnam, B. (PI); Re, C. (PI); Reed, E. (PI); Roughgarden, T. (PI); Ryzhik, L. (PI); Saberi, A. (PI); Salisbury, J. (PI); Saunders, M. (PI); Shaqfeh, E. (PI); Suckale, J. (PI); Taylor, C. (PI); Tchelepi, H. (PI); Tibshirani, R. (PI); Wein, L. (PI); Weissman, T. (PI); Wong, W. (PI); Xing, L. (PI); Ye, Y. (PI); Ying, L. (PI) description:
CME444 | Computational Consulting | https://explorecourses.stanford.edu/search?q=CME444 | instructors: description:Advice by graduate students under supervision of ICME faculty. Weekly briefings with faculty adviser and associated faculty to discuss ongoing consultancy projects and evaluate solutions. May be repeated for credit.
CME500 | Departmental Seminar | https://explorecourses.stanford.edu/search?q=CME500 | instructors:Gerritsen, M. (PI) description:Weekly research lectures by doctoral students, experts from academia, national laboratories, and industry. May be repeated for credit.  In autumn 2016 this seminar will primarily feature current graduate students talking about their research.  In winter and spring 2016-17, this seminar will feature a mix of graduate students and other researchers.
CME510 | Linear Algebra and Optimization Seminar | https://explorecourses.stanford.edu/search?q=CME510 | instructors:Saunders, M. (PI) description:Recent developments in numerical linear algebra and numerical optimization. Guest speakers from other institutions and local industry. Goal is to bring together scientists from different theoretical and application fields to solve complex scientific computing problems. May be repeated for credit.
CME801 | TGR Project | https://explorecourses.stanford.edu/search?q=CME801 | instructors:Alonso, J. (PI); Bambos, N. (PI); Boneh, D. (PI); Boyd, S. (PI); Carlsson, G. (PI); Darve, E. (PI); Diaconis, P. (PI); Donoho, D. (PI); Farhat, C. (PI); Fedkiw, R. (PI); Fringer, O. (PI); Gerritsen, M. (PI); Glynn, P. (PI); Goel, A. (PI); Guibas, L. (PI); Hanrahan, P. (PI); Iaccarino, G. (PI); Jameson, A. (PI); Johari, R. (PI); Kamvar, S. (PI); Khayms, V. (PI); Kosovichev, A. (PI); Kumar, S. (PI); Langley, P. (PI); Lele, S. (PI); Lew, A. (PI); Moin, P. (PI); Motwani, R. (PI); Murray, W. (PI); Papanicolaou, G. (PI); Saberi, A. (PI); Saunders, M. (PI); Shaqfeh, E. (PI); Taylor, C. (PI); Wein, L. (PI); Wong, W. (PI); Xing, L. (PI); Ye, Y. (PI) description:
CME802 | TGR Dissertation | https://explorecourses.stanford.edu/search?q=CME802 | instructors:Alonso, J. (PI); Andrews, J. (PI); Athey, S. (PI); Bambos, N. (PI); Beroza, G. (PI); Biondi, B. (PI); Boneh, D. (PI); Boyd, S. (PI); Candes, E. (PI); Carlsson, G. (PI); Darve, E. (PI); Diaconis, P. (PI); Donoho, D. (PI); Farhat, C. (PI); Fedkiw, R. (PI); Fringer, O. (PI); Gerritsen, M. (PI); Giesecke, K. (PI); Glynn, P. (PI); Goel, A. (PI); Guibas, L. (PI); Hanrahan, P. (PI); Hong, H. (PI); Iaccarino, G. (PI); Jameson, A. (PI); Johari, R. (PI); Kamvar, S. (PI); Khatib, O. (PI); Khayms, V. (PI); Kitanidis, P. (PI); Kosovichev, A. (PI); Kumar, S. (PI); Lai, T. (PI); Langley, P. (PI); Lele, S. (PI); Leskovec, J. (PI); Levitt, M. (PI); Lew, A. (PI); Liu, T. (PI); Marsden, A. (PI); Moerner, W. (PI); Moin, P. (PI); Motwani, R. (PI); Murray, W. (PI); Papanicolaou, G. (PI); Pinsky, P. (PI); Pitsch, H. (PI); Rajaratnam, B. (PI); Re, C. (PI); Reed, E. (PI); Roughgarden, T. (PI); Saberi, A. (PI); Salisbury, J. (PI); Saunders, M. (PI); Shaqfeh, E. (PI); Taylor, C. (PI); Taylor, J. (PI); Tchelepi, H. (PI); Wein, L. (PI); Wong, W. (PI); Xing, L. (PI); Ye, Y. (PI); Ying, L. (PI) description:
