# After changing this file, check it on: https://lint.travis-ci.org/
language: python
sudo: required

# We need to explicitely set all combination of the test matrix because Travis
# macOS images do not support Python. See:
# https://docs.travis-ci.com/user/multi-os/#Python-example-(unsupported-languages)
matrix:
  include:

    # We're not directly using the Python distribution provided by Travis, but
    # this variable will be fed to Conda to install the right version.
    - python: "2.7"
      os: linux
      dist: trusty
      env: PYTHON_DIST="2.7"
    - python: "3.4"
      os: linux
      dist: trusty
      env: PYTHON_DIST="3.4"
    - python: "3.5"
      os: linux
      dist: trusty
      env: PYTHON_DIST="3.5"
    - python: "3.6"
      os: linux
      dist: trusty
      env: PYTHON_DIST="3.6"

    - python: "2.7"
      os: linux
      dist: precise
      env: PYTHON_DIST="2.7"
    - python: "3.4"
      os: linux
      dist: precise
      env: PYTHON_DIST="3.4"
    - python: "3.5"
      os: linux
      dist: precise
      env: PYTHON_DIST="3.5"
    - python: "3.6"
      os: linux
      dist: precise
      env: PYTHON_DIST="3.6"

    # Xcode to macOS version matrix is available at:
    # https://docs.travis-ci.com/user/osx-ci-environment/#OS-X-Version

    # xcode6.4 is Mac OS X 10.10.
    - language: generic
      os: osx
      osx_image: xcode6.4
      env: PYTHON_DIST="2.7"
    - language: generic
      os: osx
      osx_image: xcode6.4
      env: PYTHON_DIST="3.4"
    - language: generic
      os: osx
      osx_image: xcode6.4
      env: PYTHON_DIST="3.5"
    - language: generic
      os: osx
      osx_image: xcode6.4
      env: PYTHON_DIST="3.6"

    # xcode8 is Mac OS X 10.11.
    - language: generic
      os: osx
      osx_image: xcode8
      env: PYTHON_DIST="2.7"
    - language: generic
      os: osx
      osx_image: xcode8
      env: PYTHON_DIST="3.4"
    - language: generic
      os: osx
      osx_image: xcode8
      env: PYTHON_DIST="3.5"
    - language: generic
      os: osx
      osx_image: xcode8
      env: PYTHON_DIST="3.6"

    # xcode8.2 is macOS 10.12.
    - language: generic
      os: osx
      osx_image: xcode8.2
      env: PYTHON_DIST="2.7"
    - language: generic
      os: osx
      osx_image: xcode8.2
      env: PYTHON_DIST="3.4"
    - language: generic
      os: osx
      osx_image: xcode8.2
      env: PYTHON_DIST="3.5"
    - language: generic
      os: osx
      osx_image: xcode8.2
      env: PYTHON_DIST="3.6"

# Update the system and setup a fresh Anaconda ecosystem.
before_install:
  # Show environment variables for debugging.
  - env
  # Check default Python version installed.
  - python --version
  # Explicitly download the Miniconda dedicated to the Python version we
  # target, to ensure stability in case the default change in the future. Also
  # speed things up a little bit by only installing the minimal requirements.
  - if [[ "$PYTHON_DIST" == "2.7" ]]; then
      MINICONDA_DIST="Miniconda2-latest";
    else
      MINICONDA_DIST="Miniconda3-latest";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      MINICONDA_DIST="$MINICONDA_DIST-MacOSX-x86_64.sh";
    else
      MINICONDA_DIST="$MINICONDA_DIST-Linux-x86_64.sh";
    fi
  - wget https://repo.continuum.io/miniconda/$MINICONDA_DIST -O ./miniconda.sh
  - bash ./miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update --all
  # Useful for debugging any issues with Conda.
  - conda info --all

install:
  # Create an Anaconda virtual env in a particular Python version.
  - conda create --name test_env python=$PYTHON_DIST
  - source activate test_env
  # Check we installed the right Python version.
  - python --version

before_script:
  - pip install codecov
  # Default Travis images came with an outdated Homebrew requiring
  # unconventional upgrade to work properly. This only concerns xcode6.4 and
  # xcode8 images.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$_system_version" != "10.12" ]]; then
      brew reinstall cloog; brew link --overwrite cloog018;
    fi
  # Install latest pips.
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pip2 install --upgrade pip;
      pip3 install --upgrade pip;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip install --upgrade pip;
    fi
  # Travis CI Linux instances needs some modules to be reinstalled to fix
  # SNIMissingWarning and InsecurePlatformWarning errors. See:
  # https://helloflu.wordpress.com/2015/12/29/python-insecure-ssl-issue/
  # https://github.com/pypa/pip/issues/4098
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pip install --upgrade requests[security];
      sudo apt install -y libffi-dev libssl-dev;
      pip install --upgrade ndg-httpsclient;
    fi
  # Install latest npm.
  - npm install -g npm
  # Install latest gem.
  - gem update --system
  # Install latest apm.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install Caskroom/cask/atom;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository -y ppa:webupd8team/atom;
      if [[ "$_system_version" == "12.04" ]]; then
        sudo apt-get update;
        sudo apt-get install -y atom;
      else
        sudo apt update;
        sudo apt install -y atom;
      fi;
    fi
  # Install latest brew and cask.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew tap caskroom/cask;
      brew update;
    fi
  # Install latest mas.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget -O - "https://github.com/mas-cli/mas/releases/download/v1.3.1/mas-cli.zip " | tar -xz --directory /usr/local/bin -f -;
    fi

script:
  # Launch unittests in destructive mode.
  - export DESTRUCTIVE_TESTS=true
  - pip install -e .[tests]
  - coverage run ./setup.py test
  - coverage report -m
  # Check coding style.
  - pycodestyle
  # Test that building packages works.
  - pip install -e .[develop]
  - ./setup.py sdist bdist_egg bdist_wheel
  # Validates package metadata.
  - ./setup.py check -m -r -s

after_script:
  - codecov
