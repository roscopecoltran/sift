CS15050 | Study Abroad | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15050&SEMESTER=S15 | instructors:Cortina, Thomas description:Students who are interested in studying abroad should first contact the Office of International Education. More information on Study Abroad is available on OIE's Study Abroad page and at the CS Undergraduate Office.
CS15075 | Computer Science Co-Op | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15075&SEMESTER=M15 | instructors:Cortina, Thomas description:Students who are interested in a Co-Op experience with an external employer typically do so in their Junior year. A Co-Op is distinguished from a summer internship in that it encompasses a summer and a contiguous semester, either Spring-Summer or Summer-Fall. A list of companies who are interested in hiring Co-Op students is available from the SCS Career Consultant at the Career Center. More information on the Computer Science Co-Op program is available at the CS Undergraduate Office.
CS15090 | Computer Science Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15090&SEMESTER=M15 | instructors:Cortina, Thomas description:This course is for international students who are interested in working for Curricular Practical Training (CPT). Such students interested in CPT must first be authorized by the Office of International Education before being able to enroll in the Practicum course. More information on CPT is available on OIE's Foreign Student Employment page and at the CS Undergraduate Office.
CS15104 | Introduction to Computing for Creative Practice | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15104&SEMESTER=F14 | instructors:Dannenberg, Roger description:An introduction to fundamental computing principles and programming techniques for creative cultural practices, with special consideration to applications in music, design and the visual arts. Intended for students with little to no prior programming experience, the course develops skills and understanding of text-based programming in a procedural style, including idioms of sequencing, selection, iteration, and recursion. Topics include data organization (arrays, files, trees), interfaces and abstraction (modular software design, using sensor data and software libraries), basic algorithms (searching and sorting), and computational principles (randomness, concurrency, complexity). Intended for students following an IDEATE concentration or minor who have not taken 15-110 or 15-112.
CS15110 | Principles of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15110&SEMESTER=S15 | instructors:Fossati, Davide description:A course in fundamental computing principles for students with minimal or no  computing background. Programming constructs: sequencing, selection,  iteration, and recursion. Data organization: arrays and lists. Use of  abstraction in computing: data representation, computer organization,  computer networks, functional decomposition, and application programming  interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems  based on complexity, non-computable functions, and using heuristics to  find reasonable solutions to complex problems. Social, ethical and legal  issues associated with the development of new computational artifacts will  also be discussed.
CS15112 | Fundamentals of Programming and Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15112&SEMESTER=M15 | description:A technical introduction to the fundamentals of programming with an emphasis  on producing clear, robust, and reasonably efficient code using top-down  design, informal analysis, and effective testing and debugging. Starting  from first principles, we will cover a large subset of the Python  programming language, including its standard libraries and programming  paradigms.  We will also target numerous deployment scenarios, including  standalone programs, shell scripts, and web-based applications.  This course assumes no prior programming experience. Even so, it is a  fast-paced and rigorous preparation for 15-122.  Students seeking a more  gentle introduction to computer science should consider first taking 15-110.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.
CS15121 | Introduction to Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15121&SEMESTER=S15 | instructors:Carrasquel, Jacobo prereq:15112 description:A continuation of the process of program design and analysis for  students with some prior programming experience (functions, loops, and  arrays, not necessarily in Java). The course reinforces object-oriented  programming techniques in Java and covers data aggregates, data  structures (e.g., linked lists, stacks, queues, trees, and graphs), and  an introduction to the analysis of algorithms that operate on those data  structures.  Pre-req: 15-112 or placement
CS15122 | Principles of Imperative Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15122&SEMESTER=M15 | instructors:Adamchik, Victor TBA prereq:15112 description:For students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs.  Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms.  Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210.  NOTE: students must achieve a C or better in order to use  this course to satisfy the pre-requisite for any subsequent Computer  Science course.
CS15128 | Freshman Immigration Course | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15128&SEMESTER=F14 | instructors:Carrasquel, Jacobo description:The Freshman Immigration Course is taken by first-semester Computer Science majors on the Pittsburgh campus. The course is designed to acquaint incoming majors with computer science at CMU. Talks range from historical perspectives in the field to descriptions of the cutting edge research being conducted in the School of Computer Science. Enrollment is limited to SCS Freshmen ONLY.
CS15129 | Freshman Immigration Course II | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15129&SEMESTER=F14 | instructors:Harras, Khaled description:This course is ONLY offered at Carnegie Mellon in Qatar.    Students and instructors will solve different problems each week by searching the Web and other likely places for answers. The problems will be submitted by other faculty who will grade the quality of the answers. Students will learn strategies and techniques for finding information on the Web more efficiently; learn when to start with a search engine, a subject-oriented directory, or other tools; explore and practice using advanced search syntax for major search engines; experience specialized search engines for images, sound, multimedia, newsgroups, and discussion lists as well as subject-specific search engines; discover valuable resources to help keep you up-to-date in this fast-changing environment.
CS15131 | Great Practical Ideas for Computer Scientists | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15131&SEMESTER=F14 | instructors:Carrasquel, Jacobo description:THIS COURSE IS OPEN TO CS FRESHMAN ONLY. Throughout your education as a Computer Scientist at Carnegie Mellon, you will take courses on programming, theoretical ideas, logic, systems, etc. As you progress, you will be expected to pick up the so-called "tools of the trade." This course is intended to help you learn what you need to know in a friendly, low-stress, high-support way. We will discuss UNIX, LaTeX, debugging and many other essential tools. Laptop required. (Laptops will be available for those without their own laptops.)
CS15150 | Principles of Functional Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15150&SEMESTER=S15 | instructors:Erdmann, Michael prereq:(21127 or 15151) and (15112) description:An introduction to programming based on a "functional" model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.
CS15199 | Special Topics: Discovering Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15199&SEMESTER=F14 | instructors:Cervesato, Iliano description:This course is ONLY offered at Carnegie Mellon in Qatar.  This course has the purpose of introducing first-year Computer Science students to elements of formal logic as well as to the historical context in which this discipline developed. As all subsequent courses in the CS curriculum rely on students having mastered basic logical notions and skills, it will test and enhance your preparation, thereby putting you in a better position to succeed in the program. It will also help you understand and appreciate how CS came about since Computer Science grew out of logic. The specific knowledge and skills you will learn in is course include: an enhanced ability to research topics, give presentations and write technical prose, some elementary logic, some historical depth into Computer Science, mathematics and logic itself. This course is open to Computer Science freshmen only.
CS15210 | Parallel and Sequential Data Structures and Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15210&SEMESTER=S15 | instructors:Oflazer, Kemal prereq:15122 and 15150 description:Teaches students about how to design, analyze, and program algorithms and data structures.  The course emphasizes parallel algorithms and analysis, and how sequential algorithms can be considered a special case.  The course goes into more theoretical content on algorithm analysis than 15-122 and 15-150 while still including a significant programming component and covering a variety of practical applications such as problems in data analysis, graphics, text processing, and the computational sciences.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer  Science course.
CS15213 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15213&SEMESTER=M15 | instructors:Kesden, Gregory prereq:15122 description:15-213/18-213This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE FOR GRADUATE STUDENTS: This course is not open to graduate students beginning Spring 2015. Graduate students must register for 15-513 instead.
CS15214 | Principles of Software Construction: Objects, Design, and Concurrency | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15214&SEMESTER=S15 | instructors:Sans, Thierry prereq:(15121 or 15122) and (21127 or 15151) description:Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, program structures, and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object oriented programming, (3) static and dynamic analysis for programs, and (4) concurrent and distributed software. Student assignments involve engagement with complex software such as distributed massively multi-player game systems and frameworks for graphical user interaction.
CS15221 | Technical Communication for Computer Scientists | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15221&SEMESTER=M15 | instructors:Keating, Thomas prereq:76101 description:The course is designed for sophomore computer science majors to improve their  abilities in practical, professional communications (both written and oral).  It aims to help students compose clear, concise technical writings and oral  presentations for multi-level audiences.  Assignments include technical  definitions, descriptions, instructions, process explanations, abstracts,  memos, and research reports.  Assignments may incorporate recent computer  science research at Carnegie Mellon, projects in related technical courses,  and professional case studies.  Sophomores will likely find the course more useful if they have either had an internship or faculty-supervised research, including SURG projects prior to enrollment.
CS15251 | Great Theoretical Ideas in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15251&SEMESTER=S15 | instructors:O'Donnell, Ryan Ada, Anil prereq:(15112) and (21127 or 15151) description:This course is about how to use theoretical ideas to formulate and solve problems in computer science. It integrates mathematical material with general problem solving techniques and computer science applications. Examples are drawn from algorithms, complexity theory, game theory, probability theory, graph theory, automata theory, algebra, cryptography, and combinatorics. Assignments involve both mathematical proofs and programming.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.
CS15291 | Special Topic: Applied Computational Intelligence Lab | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15291&SEMESTER=F14 | instructors:Black, Alan Gershman, Anatole prereq:21127 and 15122 description:What would an "intelligent" picture on the wall do? What if it could see and hear you? What should it say if it could talk? What if your pantry, wardrobe or medicine cabinet could sense, think and act? What should they do and say? What should your cell phone be saying to you? These are not whimsical or theoretical questions...they inevitably arise as ordinary everyday objects around us acquire the ability to sense changes in their environment, think about their implications, and act in pursuit of their goals. These objects are connected to the web and become conduits for services, erasing the distinction between products and services. The ability to invent and build smart products/services is becoming a key skill in the new technology-driven services economy.    The focus of the course will be on building "ordinary" objects that can sense, think and act in the real world and on exploring the implications of these capabilities. Students will select their own project and by the end of the semester will create a working prototype that will be exhibited in a public place. Prizes will be offered for the most creative projects. In the course of their projects, students will learn how to use state-of-the-art tools for:    Object detection using video cameras, microphones and other sensors  Movement and gesture detection  Speech recognition and generation    Reasoning and planning:  While the course organizers have many ideas for specific projects, students will be encouraged to design their own projects. Students are expected to work in small groups on their own time and receive faculty advice as needed. There will be weekly meetings of the whole class.
CS15292 | Special Topic: History of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15292&SEMESTER=S15 | instructors:Cortina, Thomas prereq:(76101) and (15110 or 15112 or 15122 or 15150) description:This course traces the history of computational devices, pioneers and principles from the early ages through the present. Topics include early computational devices, mechanical computation in the 19th century, events that led to electronic computing advances in the 20th century, the advent of personal computing and the Internet, and the social, legal and ethical impact of modern computational artifacts. This course also includes a history of programming languages, operating systems, processors and computing platforms. Students should have an introductory exposure to programming prior to taking this course.
CS15294 | Special Topic: Rapid Prototyping Technologies | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15294&SEMESTER=S15 | instructors:Touretzky, David prereq:15104 or 15112 description:This mini-course introduces students to rapid prototyping technologies with a focus on laser cutting and 3D printing.  The course has three components: 1) A survey of rapid prototyping and additive manufacturing technologies, the maker and open source movements, and societal impacts of these technologies; 2) An introduction to the computer science behind these technologies: CAD tools, file formats, slicing algorithms; 3) Hands-on experience with SolidWorks, laser cutting, and 3D printing, culminating in student projects (e.g. artistic creations, functional objects, replicas of famous calculating machines, etc.). Please note that there will be a usage/materials fee for this course.
CS15295 | Competition Programming and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15295&SEMESTER=S15 | instructors:Sleator, Daniel prereq:15122 description:Each year, Carnegie Mellon fields two teams for participation in the ACM-ICPC Regional Programming Contest. During many recent years, one of those teams has earned the right to represent Carnegie Mellon at the ACM-ICPC World Finals.  This course is a vehicle for those who consistently and rigorously train in preparation for the contests to earn course credit for their effort and achievement.  Preparation involves the study of algorithms, the practice of programming and debugging, the development of test sets, and the growth of team, communication, and problem solving skills.  Neither the course grade nor the number of units earned are dependent on ranking in any contest.  Students are not required to earn course credit to participate in practices or to compete in ACM-ICPC events.
CS15296 | Special Topic: Images of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15296&SEMESTER=S15 | instructors:Frieze, Carol description:In this research and action based course we will explore computing from a cultural perspective. We will reflect on some issues often taken for granted e.g. are our attitudes to computing generalizable or culturally specific? How are computing and its workforce perceived and represented in US culture and in cultures from around the world? In particular we will be examining how images of the field might affect public attitudes, access to resources and understanding of computer science. Representations of the field take on particular significance in light of recent US government projections: between now and 2018, among all occupations in all fields of science and engineering, computer science occupations will account for nearly 60% of all job growth [Computing Community Consortium, 2010].   This course is aimed primarily at students who are interested in exploring some of the broad issues of computer science and its cultural context. Students will gain experience in teamwork, teaching and presenting. We will use academic papers, web sites, group discussion/debate and popular media. Findings from our investigations will inspire the action component in which student teams develop and implement a public/outreach presentation aimed at re-presenting the exciting field of computer science with broad appeal in mind.
CS15302 | Special Topic: Innovating for Underserved Communities: Field Research Basics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15302&SEMESTER=S15 | instructors:Dias, Mary prereq:76101 description:The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by one of the underserved community partners of the TechBridgeWorld research group at Carnegie Mellon University. This year, the course will focus on innovating technology tools for visually impaired people related to smart cities of the future. Promising outcomes of this course will be further developed by the TechBridgeWorld research group and tested with visually impaired users with the permission of students involved with producing these outcomes.
CS15303 | Special Topic: Seminar on Innovating for Underserved Communities | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15303&SEMESTER=S15 | instructors:Dias, Mary prereq:76101 description:The ultimate goal of this course is to familiarize students with ongoing work in the area of technology innovations for underserved communites. This seminar course will review several key publications and presentations on this topic and teach students the necessary skills to analyze and critique this work in useful ways.   Class sessions will be dedicated to discussing reading/viewing assignments and each class discussion will be led by students.  Assignments will involve analyzing, writing, and presenting critiques of specific projects.
CS15312 | Foundations of Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15312&SEMESTER=S15 | instructors:Cervesato, Iliano prereq:(15210 and 15251) or (15212) description:This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.
CS15313 | Foundations of Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15313&SEMESTER=F14 | instructors:Legoues, Claire Kastner, Christian prereq:15214 description:Students gain exposure to the fundamentals of modern software  engineering.  This includes both core CS technical knowledge and  the means by which this knowledge can be applied in the practical  engineering of complex software.  Topics related to software  artifacts include design models, patterns, coding, static and  dynamic analysis, testing and inspection, measurement, and  software architecture and frameworks.  Topics related to software  process include modeling, requirements engineering, process models  and evaluation, team development, and supply chain issues  including outsourcing and open source.  This course has a strong  technical focus, and will include both written and programming  assignments.  Students will get experience with modern software  engineering tools.
CS15314 | Special Topic: Programming Language Semantics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15314&SEMESTER=S15 | instructors:Brookes, Stephen prereq:15150 and 15251 description:This course is designed for advanced undergraduates with interests in the mathematical and logical foundations of programming languages. The course introduces the foundational concepts and fundamental techniques of the most prominent and successful approaches to programming language semantics that have been developed. Broadly speaking, semantics is concerned with the provision of mathematical meanings to programs, at an appropriate level of abstraction, to allow formalization of program behavior and facilitate proofs of correctness. Our aim is to demonstrate the utility of a scientific approach to programming and languages. We focus on the most important and most general frameworks for semantic description: denotational and operational semantics. These frameworks are widely applicable and offer complementary approaches to language definition, with various advantages. We also discuss formal specifications, and logics of program correctness. We make extensive use of mathematical and structural induction, and computational induction. We use semantics to describe program behavior, guide the development of correct programs, specify and prove the correctness of a compiler, validate program logics, and derive laws of program equivalence. We discuss imperative and functional languages, sequential and parallel, high-level and low-level, as time permits.
CS15317 | Constructive Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15317&SEMESTER=F14 | instructors:Crary, Karl prereq:15150 description:This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes.
CS15319 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15319&SEMESTER=S15 | instructors:Sakr, Majd prereq:15213 description:This on-line course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. The course will introduce this domain and cover the topics of data centers, resource management, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on existing approaches for resource management including resource abstraction, sharing and virtualization technologies.    Students will learn about different cloud storage concepts including data distribution, durability, consistency and redundancy. HDFS, PVFS, HBase, Cassandra and S3 will be presented as examples of underlying distributed file systems. Students will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with a public cloud service (such as Amazon Web Services), use it to rent and provision compute resources and then program and deploy applications that run on these resources. Students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm.
CS15322 | Introduction to Computer Music | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15322&SEMESTER=S15 | instructors:Dannenberg, Roger Stiles, Jesse prereq:15112 description:Computers are used to synthesize sound, process signals, and  compose music. Personal computers have replaced studios full of sound  recording and processing equipment, completing a revolution that began with  recording and electronics. In this course, students will learn the  fundamentals of digital audio, basic sound synthesis algorithms, and  techniques for digital audio effects and processing. Students will apply  their knowledge in programming assignments using a very high-level  programming language for sound synthesis and composition. In a final  project, students will demonstrate their mastery of tools and techniques  through music composition or by the implementation of a significant  sound-processing technique.
CS15348 | Embedded Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15348&SEMESTER=S15 | instructors:Razak, Saquib prereq:15123 description:This course is ONLY offered at Carnegie Mellon in Qatar.    This course covers the broad range of foundational skills that apply across all embedded computer system application areas, from thermostats to self-driving vehicles. The emphasis is at the layer where hardware meets software. Topics include microcontroller hardware, assembly language, embedded C programming, analog I/O, timers, code optimization, interrupts, and concurrency. Real world engineering practices, constraints, and example applications are integrated throughout the course. Weekly hands-on hardware and software experiences with an industry-strength automotive embedded controller are coordinated with the lecture content to reinforce core skills.
CS15349 | Introduction to Computer and Network Security | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15349&SEMESTER=F14 | instructors:Sans, Thierry Cervesato, Iliano Harras, Khaled prereq:15122 description:This course is ONLY offered at Carnegie Mellon in Qatar.    This course is meant to offer Computer Science undergraduate students in  their junior or senior year a broad overview of the field of computer  security. Students will learn the basic concepts in computer security  including software vulnerability analysis and defense, networking and  wireless security, applied cryptography, as well as ethical, legal,  social and economic facets of security. Students will also learn the  fundamental methodology for how to design and analyze security critical  systems.
CS15351 | Algorithms and Advanced Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15351&SEMESTER=F14 | instructors:Kingsford, Carleton prereq:15121 or 15122 description:The objective of this course is to study algorithms for general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course may have a few programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead.THIS COURSE IS NOT OPEN TO COMPUTER SCIENCE MAJORS OR MINORS.
CS15354 | Computational Discrete Mathematics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15354&SEMESTER=F14 | instructors:Sutner, Klaus prereq:15251 or 21228 description:This course is about the computational aspects of some of the standard  concepts of discrete mathematics (relations, functions, logic, graphs,  algebra, automata), with emphasis on efficient algorithms.  We begin  with a brief introduction to computability and computational complexity. Other topics include: iteration, orbits and fixed points, order and equivalence relations, propositional logic and satisfiability testing, finite fields and shift register sequences, finite state machines, and cellular automata.    Computational support for some of the material is available in the form of a Mathematica package.
CS15355 | Modern Computer Algebra | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15355&SEMESTER=S15 | instructors:Adamchik, Victor prereq:15251 description:The goal of this course is to investigate the relationship between algebra  and computation. The course is designed to expose students to algorithms  used for symbolic computation, as well as to the concepts from modern  algebra which are applied to the development of these algorithms. This  course provides a hands-on introduction to many of the most important ideas  used in symbolic mathematical computation, which involves solving system of  polynomial equations (via Groebner bases), analytic integration, and solving  linear difference equations. Throughout the course the computer algebra system Mathematica will be used for computation.
CS15359 | Probability and Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15359&SEMESTER=S15 | instructors:Harchol-Balter, Mor prereq:15251 and 21259 and 21241 description:Probability theory has become indispensable in computer science.  In  areas such as artificial intelligence and computer science theory,  probabilistic methods and ideas based on randomization are central.  In other areas such as networks and systems, probability is becoming  an increasingly useful framework for handling uncertainty and modeling  the patterns of data that occur in complex systems.  This course gives  an introduction to probability as it is used in computer science  theory and practice, drawing on applications and current research  developments as motivation and context. Topics include combinatorial  probability and random graphs, heavy tail distributions, concentration  inequalities, various randomized algorithms, sampling random variables  and computer simulation, and Markov chains and their many  applications, from Web search engines to models of network protocols.  The course will assume familiarity with 3-D calculus and linear  algebra.
CS15365 | Experimental Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15365&SEMESTER=S15 | instructors:Hodgins, Jessica Duesing, James prereq:15213 description:This class will explore animation from the student's perspective with a sense of investigation toward both form and content. Topics in the class will include non-linear narrative, visual music, puppet and non-traditional materials, manipulation of motion and performance capture data, immersive environments.
CS15381 | Artificial Intelligence: Representation and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15381&SEMESTER=F14 | instructors:Procaccia, Ariel Brunskill, Emma prereq:15122 or 15211 description:This course is about the theory and practice of Artificial Intelligence. We will study modern techniques for computers to represent task-relevant information and make intelligent (i.e. satisficing or optimal) decisions towards the achievement of goals. The search and problem solving methods are applicable throughout a large range of industrial, civil, medical, financial, robotic, and information systems.  We will investigate questions about AI systems such as: how to represent knowledge, how to effectively generate appropriate sequences of actions and how to search among alternatives to find optimal or near-optimal solutions.  We will also explore how to deal with uncertainty in the world, how to learn from experience, and how to learn decision rules from data.  We expect that by the end of the course students will have a thorough understanding of the algorithmic foundations of AI, how probability and AI are closely interrelated, and how automated agents learn.  We also expect students to acquire a strong appreciation of the big-picture aspects of developing fully autonomous intelligent agents.  Other lectures will introduce additional aspects of AI, including natural language processing, web-based search engines, industrial applications, autonomous robotics, and economic/game-theoretic decision making.
CS15383 | Introduction to Text Processing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15383&SEMESTER=F14 | instructors:Oflazer, Kemal prereq:15121 or 15122 description:Text processing is a mini-course about text basic techniques of processing human language in text format.  The course has theoretical and hands-on components. In the theoretical component, the course will discuss challenges in processing human languages, and review the  basics of statistics and probability theory and their application to language problems.  In the hands-on part, students will learn about Python programming and use it to process large volumes of text using various  techniques. The processing will range from simple steps such as tokenization and part-of-speech tagging to full-fledged  applications such as  statistical machine translation,  search and document/topic classification.  The course is suited for junior and senior students in CS and IS.
CS15386 | Neural Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15386&SEMESTER=S15 | instructors:Lee, Tai-Sing prereq:21122 and 15112 description:Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.
CS15387 | Computational Perception | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15387&SEMESTER=F14 | instructors:Lee, Tai-Sing prereq:21122 and 21241 and 15112 description:In this course, we will first cover the biological and psychological foundational knowledge of biological perceptual systems, and then apply computational thinking to investigate the principles and mechanisms underlying natural perception. The course will focus on vision this year, but will also touch upon other sensory modalities. You will learn how to reason scientifically and computationally about problems and issues in perception, how to extract the essential computational properties of those abstract ideas, and finally how to convert these into explicit mathematical models and computational algorithms. Topics include perceptual representation and inference, perceptual organization, perceptual constancy, object recognition, learning and scene analysis. Prerequisites: First year college calculus, some basic knowledge of linear algebra and probability and some programming experience are desirable.
CS15390 | Entrepreneurship for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15390&SEMESTER=F14 | instructors:Courtright, William description:This course is designed to develop skills related to entrepreneurship and innovation for non-business undergraduate and graduate students in the School of Computer Science.  The course assumes no background courses in business and is appropriate for those who are interested in bringing innovations to market either through new companies or existing companies.   The course provides an overview of entrepreneurship and innovation, develops an entrepreneurial frame of mind, and provides a framework for learning the rudiments of how to generate ideas.  Students come up with or are presented with potential ideas and learn how to develop these ideas into opportunities, and to explore their potential for becoming viable businesses.  They learn how to do market research, to develop go-to-market strategies, value propositions and to differentiate their products or services from potential competitors.  The focus is on understanding and developing strategies for approaching the key elements of the entrepreneurial process...opportunity, resources and team. The course consists of a balance of lectures, case studies and encounters with entrepreneurs, investors and business professionals.  The students are exposed to financial and intellectual property issues, and encounter a real world perspective on entrepreneurship, innovation and leadership.  The output of the course is a mini-business plan or venture opportunity screening document that can be developed into a business plan in a subsequent course entitled New Venture Creation or through independent study.
CS15410 | Operating System Design and Implementation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15410&SEMESTER=S15 | instructors:Eckhardt, David prereq:15213 description:Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems. The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and "team programming" skills (source control, modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.  Students, especially graduate students, who have not satisfied the prerequisite at Carnegie Mellon are strongly cautioned - to enter the class you must be able to write a storage allocator in C, use a debugger, understand 2's-complement arithmetic, and translate between C and x86 assembly language.  The instructor may require you to complete a skills assessment exercise before the first week of the semester in order to remain registered in the class.  Auditing:  this course is usually full, and we generally receive many more requests to audit than we can accept.  If you wish to audit, please have your advisor contact us before the semester begins to discuss your educational goals.
CS15411 | Compiler Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15411&SEMESTER=F14 | instructors:Pfenning, Frank prereq:15213 description:This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.
CS15412 | Operating System Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15412&SEMESTER=F14 | instructors:Eckhardt, David prereq:15410 description:The goal of this class is for students to acquire hands-on experience with operating-system code as it is developed and deployed in the real world.  Groups of two to four students will select, build, install, and become familiar with an open-source operating system project; propose a significant extension or upgrade to that project; and develop a production-quality implementation meeting the coding standards of that project.  Unless infeasible, the results will be submitted to the project for inclusion in the code base.  Variations on this theme are possible at the discretion of the instructor.  For example, it may be possible to work within the context of a non-operating-system software infrastructure project (window system, web server, or embedded network device kernel) or to extend a 15-410 student kernel.  In some situations students may work alone.  Group membership and unit count (9 units versus 12) will be decided by the third week of the semester.  Contributing to a real-world project will involve engaging in some mixture of messy, potentially open-ended activities such as: learning a revision control system, writing a short design document, creating and updating a simple project plan, participating in an informal code review, synthesizing scattered information about hardware and software, classifying and/or reading large amounts of code written by various people over a long period of time, etc.
CS15413 | Software Engineering Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15413&SEMESTER=S15 | instructors:Garrod, Charles Rosso-Llopart, Manuel description:In this course, students will carry out a semester-long softwaredevelopment project for a real client.  This course will be part ofthe Facebook Open Academy Project, providing students an opportunityto work with each other and students from other universities to makesubstantial contributions to external open source projects.  Allstudents registered for this course must participate in a kick-offmeeting January 30th - February 1st, 2015 in Menlo Park, CA, withflight and hotel expenses to be paid by Facebook. At the kickoffmeeting you will meet other members of your project team and your opensource project mentor, who will provide project-specific guidance forthe remainder of the semester.  Students must sign up for the courseand notify the instructors of their interest by November 21, 2014.A few lectures at the beginning of the course will introduce theprocess, tools, and documents to be used in the course, all of whichwill be specified by the instructors. Throughout the project, groupswill be mentored through weekly team meetings with faculty. Studentswill make regular presentations, and will be evaluated on the codedelivered, software engineering process, client satisfaction, andtheir contribution to the team. Students will leave the course with afirsthand understanding of the software engineering realities thatdrive SE practices. They will have concrete experience with thesepractices, and will have engaged in active reflection on thisexperience. They will have teamwork, process, and product skills tosupport immediate competency in a software engineering organization,along with a deeper understanding that prepares them to evaluate thenew processes and techniques they will encounter in the workplace.
CS15415 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15415&SEMESTER=S15 | instructors:Hammoud, Mohammad prereq:(15210) or (15211 and 15213) description:This course covers the fundamental topics for Database Management  Systems: Database System Architectural Principles (ACID properties; data abstraction; external, conceptual, and internal schemata; data  independence; data definition and data manipulation languages), Data  models (entity-relationship and relational data models; data  structures, integrity constraints, and operations for each data  model; relational query languages: SQL, algebra, calculus), Theory of  database design (functional dependencies; normal forms; dependency  preservation; information loss), Query Optimization (equivalence of  expressions, algebraic manipulation; optimization of selections and  joins), Storage Strategies (indices, B-trees, hashing), Query Processing (execution of sort, join, and aggregation operators), and Transaction Processing (recovery and concurrency control).
CS15418 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15418&SEMESTER=S15 | instructors:Fatahalian, Kayvon prereq:15213 description:The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.
CS15421 | Information Security and Privacy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15421&SEMESTER=F14 | instructors:Sadeh, Norman Bauer, Ljudevit prereq:15122 or 15211 description:The objective of this course is to introduce students to the technologies of Web Commerce, Security and Privacy as well as to related business, policy and usability issues. Content: Over the past 15 years, the Web has become an integral part of our daily life, whether at home or at work. This course provides students with an overview of the technologies and practices associated with Web Security, Privacy and Commerce. In the process, students will learn what it takes to design and develop successful web applications and services, reconciling security, privacy, usability and business considerations. The course is organized around two parts: Part I - Web Security & Privacy Technologies The big picture, gentle introduction to cryptography, digital signatures, key management, authentication, Internet security protocols, certificates & PKI, decentralized trust management, privacy enhancing technologies, electronic payments. Part II - Web Commerce The big picture, Internet marketing & personalization, search engines, B2B and electronic markets, P2P, Web 2.0, Mobile Commerce, social networking. Format: Lectures (including guest lectures), discussions, student presentations, and class projects.  Prerequisites: 15122 or 15211
CS15423 | Special Topic: Digital Signal Processing for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15423&SEMESTER=S15 | instructors:Ramakrishnan, Bhiksha prereq:(15112 or 15122) and (21325 or 36625 or 36217 or 36225 or 15359) description:Digital signals comprise a large fraction of the data analyzed by computer scientists. Sound, e.g. speech and music, images, radar and many other signal types that were conventionally considered to be the domain of the Electrical engineer are now also in the domain of computer scientists, who must analyze them, make inferences, and develop machine learning techinques to analyze, classify and reconstruct such data. In this course we will cover the basics of Digital Signal Processing. We will concentrate on the basic mathematical formulations, rather than in-depth implementation details. We will cover the breadth of topics, beginning with the basics of signals and their representations, the theory of sampling, important transform representations, key processing techniques, and spectral estimation.
CS15424 | Foundations of Cyber-Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15424&SEMESTER=F14 | instructors:Platzer, Andre prereq:(15122) and (21122) and (15251 or 21241 or 18202) description:Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.  Students in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.
CS15437 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15437&SEMESTER=S15 | instructors:Eppinger, Jeff prereq:15214 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
CS15440 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15440&SEMESTER=M15 | instructors:Kesden, Gregory prereq:15213 description:The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.
CS15441 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15441&SEMESTER=S15 | instructors:Harras, Khaled prereq:15213 description:The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.
CS15451 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15451&SEMESTER=S15 | instructors:Sleator, Daniel Adamchik, Victor prereq:15251 and 15210 and 21241 description:This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.
CS15453 | Formal Languages, Automata, and Computability | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15453&SEMESTER=S15 | instructors:Rudich, Steven prereq:21228 or 15251 description:An introduction to the fundamental ideas and models underlying computing: finite automata, regular sets, pushdown automata, context-free grammars, Turing machines, undecidability, and complexity theory.
CS15454 | Special Topic: Computational Automata Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15454&SEMESTER=S15 | instructors:Sutner, Klaus prereq:15354 or 15453 description:Large parts of automata theory are algorithmic in nature.  In this course we will take a close look at some of the more advanced  algorithms such as Hopcroft's minimization, Safra's determinization  and Pin's D-class decomposition.  Whenwever appropriate, we will  consider ordinary word automata, omega-automata and zeta-automata.  As  an application we study the analysis (model checking) of automatic  structures in algebra and discrete dynamics.
CS15455 | Undergraduate Complexity Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15455&SEMESTER=F14 | instructors:Blum, Manuel Blum, Lenore prereq:15251 description:Complexity theory is the study of how much of a resource (such as time, space, parallelism, or randomness) is required to perform some of the computations that interest us the most. In a standard algorithms course, one concentrates on giving resource efficient methods to solve interesting problems. In this course, we concentrate on techniques that prove or suggest that there are no efficient methods to solve many important problems.  We will develop the theory of various complexity classes, such as P, NP, co-NP, PH, #P, PSPACE, NC, AC, L, NL, UP, RP, BPP, IP, and PCP. We will study techniques to classify problems according to our available taxonomy. By developing a subtle pattern of reductions between classes we will suggest an (as yet unproven!) picture of how by using limited amounts of various resources, we limit our computational power.
CS15457 | Special Topics in Theory: Advanced Algorithms: Advanced Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15457&SEMESTER=S15 | instructors:Gupta, Anupam prereq:15451 description:Selected advanced topics in algorithms and computational theory. Topics vary from semester to semester.
CS15462 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15462&SEMESTER=S15 | instructors:Pollard, Nancy prereq:(21259 and 15213 and 21240) or (15213 and 21241 and 21259) or (18213 and 18202) description:This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.
CS15463 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15463&SEMESTER=F14 | instructors:Kitani, Kris prereq:(15213) and (21241 or 18202) description:Computational Photography is an emerging new field created by the  convergence of computer graphics, computer vision and  photography. Its role is to overcome the limitations of the  traditional camera by using computational techniques to produce a  richer, more vivid, perhaps more perceptually meaningful  representation of our visual world.    The aim of this advanced undergraduate course is to study ways in  which samples from the real world (images and video) can be used to  generate compelling computer graphics imagery. We will learn how to  acquire, represent, and render scenes from digitized photographs.  Several popular image-based algorithms will be presented, with an  emphasis on using these techniques to build practical systems. This  hands-on emphasis will be reflected in the programming assignments, in  which students will have the opportunity to acquire their own images  of indoor and outdoor scenes and develop the image analysis and  synthesis tools needed to render and view the scenes on the computer.
CS15464 | Technical Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15464&SEMESTER=S15 | instructors:Pollard, Nancy prereq:15462 description:This course introduces techniques for computer animation such as keyframing, procedural methods, motion capture, and simulation. The course also includes a brief overview of story-boarding, scene composition, lighting and sound track generation. The second half of the course will explore current research topics in computer animation such as dynamic simulation of flexible and rigid objects,automatically generated control systems, and evolution of behaviors. The course should be appropriate for graduate students in all areas and for advanced undergraduates.
CS15466 | Computer Game Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15466&SEMESTER=F14 | instructors:Likhachev, Maxim prereq:15462 description:The goal of the course is two-fold. The first goal is to teach students some of the higher-level techniques that are necessary to implement interesting computer games. In particular, a large emphasis will be on game AI. The class will also cover such topics as game networking, scheduling of tasks in computationally intensive games, and game design. The class will also briefly cover few selected topics such as collision detection and physically-based animation that are good to know even if one is developing games using a game engine. The second goal of the class is to get students familiar with programming games on various platforms using state-of-the-art game engines. To this end, the course will have a heavy programming focus. It will have a number of projects requiring students to apply the learned material to develop games using Unity 3D game engine. The students will develop games that run on a standalone PC, games that run on an Android platform and games that work in a multi-user mode.  In addition to learning the material and learning how to use game engines, the projects will provide students with portfolios of games they have developed. Such a portfolio is important in getting a job in game industry.    Prerequisite is 15-462 or contact the instructor for permission.
CS15491 | Special Topic: CMRoboBits: Creating Intelligent Robots | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15491&SEMESTER=F14 | instructors:Veloso, Maria Manuela prereq:15122 description:Creating intelligent robots can be viewed as the integration of many  pieces - "bits" - "RoboBits". This course will teach students such  "RoboBits" for creating both single and groups of intelligent  robots, with perception, cognition, and action. Students in the  course work with real functional mobile robots, equipped with RGB  and RGB+D cameras, different types of actuation, namely wheeled and  legged robots, and computation onboard. Students learn effective  vision processing algorithms for object recognition, motion modeling  and planning, robot localization and planning algorithms, and  multi-robot communication for shared sensing and teamwork.  We will  further study cognitive architectures, learning, and human-robot  interaction. 15-491 is a PROJECT-BASED course, which runs in the  CORAL research lab in GHC 3201. The course has three major projects  with specific tasks that incrementally lead to the research and  development of complete intelligent robots. The projects are  decomposed in weekly tasks. The class meets twice a week, and the  students have access to the lab for further work as needed.  Evaluation is based on class participation, weekly progress, and  project reports, presentations, and outcomes.
CS15494 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15494&SEMESTER=S15 | instructors:Touretzky, David prereq:15213 description:Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.
CS15498 | Special Topic: Forensic Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15498&SEMESTER=S15 | instructors:Kesden, Gregory prereq:15213 description:This class covers the fundamentals of information forensics: analyzing   storage devices and system, network systems, mobile devices and   conventional computers, appliances such as copiers and faxes, and game   systems. It includes necesary coverage of the technical details of the   systems to be analyzed as well as the tools and techniques used to   analyze them. The class covers threats to the integrity of information,   spoilage, and assessing the fidelity of apparent discoveries. Students   will learn proper forensic techniques and protocols, as well as how to   document findings and opinions in reports and how to offer live testimony.    Students will also learn to consider the impact of information and its   security on society and the impact of the availability of information on   privacy. Students will serve as a resource for local and federal public   defenders and investigators assisting indigent clients working on real,   live cases that affect real defendants and real communities. In this   capacity students will be advancing the cause of justice by helping to   uncover the facts surrounding the case.    The course will also include presentations from federal and state   prosecutors, defenders, and investigators about the criminal justice   system, information forensics in the real world, law and technology, and   the future of technology, the law, justice, security, and privacy.
CS15513 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15513&SEMESTER=M15 | instructors:Kesden, Gregory description:This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE: This course is not open to undergraduate students. This course is intended for Master's students only and is taught in a self-study mode with video lectures.This course is variable units. The course materials and expectationsare the same, regardless of the number of units selected. Those with astrong background in computer science and software development takingthe course as a refresher may sign-up for 6 units. Those who will bestudying the material and/or doing projects of this type for the firsttime should sign up for 12-units. The unit flexibility is completelyto facilitate proper workload planning and scheduling for the student-- it does not affect the course expectations.
CS15591 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15591&SEMESTER=M15 | instructors:Cortina, Thomas description:To be determined
CS15592 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15592&SEMESTER=S15 | instructors:Cortina, Thomas description:to be determined
CS15593 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15593&SEMESTER=S15 | instructors:Cortina, Thomas description:To be determined
CS15594 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15594&SEMESTER=S15 | instructors:Cortina, Thomas description:to be determined
CS15599 | SCS Honors Undergraduate Research Thesis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15599&SEMESTER=S15 | instructors:Sutner, Klaus Cortina, Thomas description:Available only to students registered in the CS Senior Research Thesis Program.
CS15602 | Special Topic :Innovating for Underserved Communities: Field Research Basics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15602&SEMESTER=S15 | instructors:Dias, Mary description:The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by one of the underserved community partners of the TechBridgeWorld research group at Carnegie Mellon University. This year, the course will focus on innovating technology tools for visually impaired people related to smart cities of the future. Promising outcomes of this course will be further developed by the TechBridgeWorld research group and tested with visually impaired users with the permission of students involved with producing these outcomes.
CS15603 | Special Topics: Seminar on Innovating for Underserved Communities | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15603&SEMESTER=S15 | instructors:Dias, Mary description:The ultimate goal of this course is to familiarize students with ongoing work in the area of technology innovations for underserved communities. This seminar course will review several key publications and presentations on this topic and teach students the necessary skills to analyze and critique this work in useful ways. Class sessions will be dedicated to discussing reading/viewing assignments and each class discussion will be led by students. Assignments will involve analyzing, writing, and presenting critiques of specific projects.
CS15604 | Immigration Course | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15604&SEMESTER=F14 | instructors:Kesden, Gregory Crary, Karl description:This is a discussion course with enrollment limited to MS in CS  students during their first semester in the program. Students explore  the scope of graduate education in computer science, the tools and  techniques for success, and the resources available to MS in CS  students. Students also explore life after graduation, including  careers in academia, industry, and other organizations, and plan an  academic program that supports their individual goals.
CS15605 | Operating System Design and Implementaion | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15605&SEMESTER=S15 | instructors:Eckhardt, David description:Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.  The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware  simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and "team programming" skills (source control,  modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.    Students, especially graduate students, who have not satisfied the prerequisite at  Carnegie Mellon are strongly cautioned - to enter the class you must be able  to write a storage allocator in C, use a debugger, understand 2's-complement  arithmetic, and translate between C and x86 assembly language.  The  instructor may require you to complete a skills assessment exercise before  the first week of the semester in order to remain registered in the class.    Auditing:  this course is usually full, and we generally receive  many more requests to audit than we can accept.  If you wish to  audit, please have your advisor contact us before the semester  begins to discuss your educational goals.
CS15611 | Compiler Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15611&SEMESTER=F14 | instructors:Pfenning, Frank description:This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.      Prerequisites:  15213 or 15312
CS15612 | Operating System Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15612&SEMESTER=F14 | instructors:Eckhardt, David prereq:15410 or 15412 or 18347 description:The goal of this class is for students to acquire hands-on experience  with operating-system code as it is developed and deployed in the  real world.  Groups of two to four students will select, build,  install, and become familiar with an open-source operating system  project; propose a significant extension or upgrade to that project;  and develop a production-quality implementation meeting the coding  standards of that project.  Unless infeasible, the results will be  submitted to the project for inclusion in the code base.    Variations on this theme are possible at the discretion of the  instructor.  For example, it may be possible to work within the  context of a non-operating-system software infrastructure project  (window system, web server, or embedded network device kernel) or  to extend a 15-410 student kernel.  In some situations students  may work alone.  Group membership and unit count (9 units versus  12) will be decided by the third week of the semester.    Contributing to a real-world project will involve engaging  in some mixture of messy, potentially open-ended activities  such as: learning a revision control system, writing a  short design document, creating and updating a simple project  plan, participating in an informal code review, synthesizing  scattered information about hardware and software, classifying  and/or reading large amounts of code written by various people  over a long period of time, etc.
CS15615 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15615&SEMESTER=S15 | instructors:Faloutsos, Christos Pavlo, Andy description:This course covers the fundamental topics for Database Management   Systems: Database System Architectural Principles (ACID properties; data  abstraction; external, conceptual, and internal schemata; data   independence; data definition and data manipulation languages), Data   models (entity-relationship and relational data models; data   structures, integrity constraints, and operations for each data   model; relational query languages: SQL, algebra, calculus), Theory of   database design (functional dependencies; normal forms; dependency   preservation; information loss), Query Optimization (equivalence of   expressions, algebraic manipulation; optimization of selections and   joins), Storage Strategies (indices, B-trees, hashing), Query Processing  (execution of sort, join, and aggregation operators), and  Transaction Processing (recovery and concurrency control).
CS15618 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15618&SEMESTER=S15 | instructors:Fatahalian, Kayvon description:The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.
CS15619 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15619&SEMESTER=S15 | instructors:Sakr, Majd description:This on-line course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. The course will introduce this domain and cover the topics of data centers, resource management, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on existing approaches for resource management including resource abstraction, sharing and virtualization technologies. Students will learn about different cloud storage concepts including data distribution, durability, consistency and redundancy. HDFS, PVFS, HBase, Cassandra and S3 will be presented as examples of underlying distributed file systems. Students will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with a public cloud service (such as Amazon Web Services), use it to rent and provision compute resources and then program and deploy applications that run on these resources. Students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm.
CS15623 | Special Topic: Digital Signal Processing for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15623&SEMESTER=S15 | instructors:Ramakrishnan, Bhiksha description:Digital signals comprise a large fraction of the data analyzed by computer scientists. Sound, e.g. speech and music, images, radar and many other signal types that were conventionally considered to be the domain of the Electrical engineer are now also in the domain of computer scientists, who must analyze them, make inferences, and develop machine learning techinques to analyze, classify and reconstruct such data. In this course we will cover the basics of Digital Signal Processing. We will concentrate on the basic mathematical formulations, rather than in-depth implementation details. We will cover the breadth of topics, beginning with the basics of signals and their representations, the theory of sampling, important transform representations, key processing techniques, and spectral estimation.
CS15624 | ST: Foundations of Cyber-Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15624&SEMESTER=F14 | instructors:Platzer, Andre description:Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.  Students in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.
CS15637 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15637&SEMESTER=S15 | instructors:Eppinger, Jeff prereq:15214 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
CS15640 | Distributed Systems: Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15640&SEMESTER=M15 | instructors:Kesden, Gregory description:The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.
CS15641 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15641&SEMESTER=F14 | instructors:Steenkiste, Peter Zhang, Hui description:The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.
CS15648 | Studio in Big Data Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15648&SEMESTER=S15 | instructors:Gibson, Garth Sakr, Majd description:Advancing the state of the art in large scale systems is challenging for many reasons including algorithm efficiency, weak consistency, failure tolerance, etc. However, as observed repeatedly among the Googles, Facebooks and Yahoo!'s, all the rest of these hardly matter if the developer is not experienced with large systems, if the logistics of large scale systems are not easily mastered, and if the large collection of core systems is unfamiliar. Without good hands on experience with the current systems and their tools, theoretical knowledge leads to theoretical success, and too often little more. This course is a project course intended primarily for the Big Data Systems track of the Very Large Informations Systems program. Others need instructor approval to register.
CS15649 | Seminar Data Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15649&SEMESTER=S15 | instructors:Gibson, Garth Sakr, Majd description:This three unit seminar is intended primarily for the Big Data Systems track of the Very Large Informations Systems program.  The content of the seminar will be the integration of the material in the courses and projects on this program; how everything fits into the computing world today, and whatever else is missing from the rest of the program.  Most meetings will be informal discussions with the program leadership, some guest speakers, and some little reading. Students not registered in the Big Data Systems track of the Very Large Informations Systems program need instructor approval to register for this seminar.  Co-requisite: 15-648
CS15650 | Algorithms and Advanced Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15650&SEMESTER=F14 | instructors:Kingsford, Carleton description:The objective of this course is to study general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course will have several programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead.
CS15651 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15651&SEMESTER=S15 | instructors:Sleator, Daniel Adamchik, Victor description:This course is intended for SCS graduate students. ECE graduate students should register for either 15-351 or 15-451. All other graduate students should register for 15-650."   This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.
CS15652 | Foundation Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15652&SEMESTER=S15 | instructors:Crary, Karl description:This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.
CS15657 | Constructive Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15657&SEMESTER=F14 | instructors:Crary, Karl description:This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes. This course counts as a Fundamentals course in the Computer Science major.
CS15659 | Probability and Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15659&SEMESTER=S15 | instructors:Harchol-Balter, Mor description:Probability theory has become indispensable in computer science.  In areas such as artificial intelligence and computer science theory, probabilistic methods and ideas based on randomization are central. In other areas such as networks and systems, probability is becoming an increasingly useful framework for handling uncertainty and modeling the patterns of data that occur in complex systems.  This course gives an introduction to probability as it is used in computer science theory and practice, drawing on applications and current research developments as motivation and context. Topics include combinatorial probability and random graphs, heavy tail distributions, concentration inequalities, various randomized algorithms, sampling random variables and computer simulation, and Markov chains and their many applications, from Web search engines to models of network protocols. The course will assume familiarity with 3-D calculus and linear algebra.
CS15661 | Interaction and Expression using the Pausch Bridge LightingThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15661&SEMESTER=S15 | instructors:Limauro, Cynthia Shimizu, Evan description:Working in cross-disciplinary teams, students will explore light as art, interactive design and programming using a Pharos lighting control system. Students will explore the use of light and interaction using the actual controls within the Randy Pausch Memorial Bridge. Student teams will develop final projects that will be exhibited on the actual Randy Pausch Memorial Bridge.
CS15662 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15662&SEMESTER=S15 | instructors:Pollard, Nancy description:This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.
CS15663 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15663&SEMESTER=F14 | instructors:Kitani, Kris description:Computational Photography is an emerging new field created by the  convergence of computer graphics, computer vision and  photography. Its role is to overcome the limitations of the  traditional camera by using computational techniques to produce a  richer, more vivid, perhaps more perceptually meaningful  representation of our visual world.    The aim of this advanced undergraduate course is to study ways in  which samples from the real world (images and video) can be used to  generate compelling computer graphics imagery. We will learn how to  acquire, represent, and render scenes from digitized photographs.  Several popular image-based algorithms will be presented, with an  emphasis on using these techniques to build practical systems. This  hands-on emphasis will be reflected in the programming assignments, in  which students will have the opportunity to acquire their own images  of indoor and outdoor scenes and develop the image analysis and  synthesis tools needed to render and view the scenes on the computer.
CS15664 | Technical Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15664&SEMESTER=S15 | instructors:Pollard, Nancy description:None
CS15666 | Computer Game Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15666&SEMESTER=F14 | instructors:Likhachev, Maxim description:The goal of the course is two-fold. The first goal is to teach students   some of the higher-level techniques that are necessary to implement   interesting computer games. In particular, a large emphasis will be on   game AI. The class will also cover such topics as game networking,   scheduling of tasks in computationally intensive games, and game design.   The class will also briefly cover few selected topics such as collision   detection and physically-based animation that are good to know even if one   is developing games using a game engine. The second goal of the class is   to get students familiar with programming games on various platforms using   state-of-the-art game engines. To this end, the course will have a heavy   programming focus. It will have a number of projects requiring students to   apply the learned material to develop games using Unity 3D game engine.   The students will develop games that run on a standalone PC, games that   run on an Android platform and games that work in a multi-user mode.  In addition to learning the material and learning how to use game engines,   the projects will provide students with portfolios of games they have   developed. Such a portfolio is important in getting a job in game   industry.    PREREQUISITE: 15-462, or contact the instructor for permission
CS15669 | Masters Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15669&SEMESTER=S15 | instructors:Crary, Karl Kesden, Gregory description:None
CS15686 | Neural Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15686&SEMESTER=S15 | instructors:Lee, Tai-Sing prereq:15112 and 21122 description:Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.
CS15689 | Independent Study in the Computer Sciences | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15689&SEMESTER=S15 | instructors:Crary, Karl Kesden, Gregory description:This course is for Master's student who plan to do an Independent Study in the Master of Science program within the Computer Science Department - SECTION A or enrolled in the ISR Master of Computational Data Science program SECTION B.  You will placed on the waitlist until your advisor gives you permission to proceed.
CS15691 | Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15691&SEMESTER=M15 | description:To be determined
CS15694 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15694&SEMESTER=S15 | instructors:Touretzky, David prereq:15214 description:Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.
CS15697 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15697&SEMESTER=M15 | description:None
CS15698 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15698&SEMESTER=M15 | description:None
CS15712 | Advanced Operating Systems and Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15712&SEMESTER=F14 | instructors:Andersen, David description:15-712 is a graduate course in operating systems. The goals are:    To understand the state of the art in operating systems and distributed systems, and how and why we got there.    To understand how to engage in systems research.    To investigate novel ideas in systems through a semester-long research project.    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html this link for the most recent schedule updates.  CLASS WILL BEGIN THE WEEK OF SEPTEMBER 7th.
CS15719 | Advanced Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15719&SEMESTER=F14 | instructors:Gibson, Garth Sakr, Majd description:to be determined
CS15740 | Computer Architecture | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15740&SEMESTER=F14 | instructors:Goldstein, Seth description:CLASS WILL BEGIN THE WEEK OF SEPTEMBER 7th. Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html this link for the most recent schedule updates.
CS15744 | Computer Networks: Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15744&SEMESTER=S15 | instructors:Seshan, Srinivasan description:This course assumes a basic familiarity with networking concepts. The course will consist of a reading/lecture/discussion component and a project component. The class will cover approximately 50 research papers on various aspects of computer networking. These papers will introduce students to the basic design principles on which today's networks are based. In addition, these papers will cover recent proposals to improve network performance, functionality and scalability. Specific topics that will be covered include: LAN/WAN technologies, congestion/flow control, traffic analysis, routing, internet working, multicast, security, and quality of service.  Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.
CS15745 | Optimizing Compilers for Modern Architectures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15745&SEMESTER=S15 | instructors:Mowry, Todd description:Theoretical and practical aspects of building optimizing compilers that effectively exploit modern architectures. The course will begin with the fundamentals of compiler optimization, and will build upon these fundamentals to address issues in state-of-the-art commercial and research machines. Topics include: intermediate representations, basic blocks and flow graphs, data flow analysis, partial evaluation and redundancy elimination, loop optimizations, register allocation, instruction scheduling, interprocedural analysis, memory hierarchy optimizations, extracting parallelism, and dynamic optimizations. Students will implement significant optimizations within the framework of a modern research compiler.  Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.
CS15746 | Storage Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15746&SEMESTER=S15 | instructors:Ganger, Gregory Gibson, Garth description:Storage systems are among the most fascinating and the most important parts of computer systems. They often dominate the performance of a system, and their components' inner workings require amazing feats of engineering. At the same time, storage systems hold the crown jewels of most organizations: their information (from source code to Microsoft's software to the sales databases of every e-commerce site). Within the field of computer systems and computer engineering, there is no area whose demand for bright people and better solutions is more robust.   This course will cover the design, implementation, and use of storage systems, from the characteristics and operation of individual storage devices to the OS, database, and networking approaches involved in tying them together and making them useful. Along the way, we will examine several case studies of real systems, demands placed on storage systems by important applications, and impacts of trends and emerging technologies on future storage systems.   For those familiar with 18-316 (Intro. to Data Storage Systems Technology) and 18-517 (Data Storage Systems Design Project): one should consider these courses as distinct and complementary, with neither being a pre-requisite to the other. 18-316 and 18-517 focus on the low-level technologies (magnetics, materials, applied physics, etc.) whereas 746 focuses on storage's incorporation and role in computer systems.   Pre-requisite of 15-213, 15-513, or 18-213 - Grade of B- or better.Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15750 | Graduate Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15750&SEMESTER=S15 | instructors:Blum, Manuel description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.htm for the most recent schedule updates.
CS15780 | Graduate Artificial Intelligence | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15780&SEMESTER=S15 | instructors:Veloso, Maria Manuela Brunskill, Emma description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.
CS15781 | Machine Learning | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15781&SEMESTER=F14 | instructors:Singh, Aarti Gordon, Geoffrey description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.
CS15801 | CS PhD Alternative Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15801&SEMESTER=S15 | description:None
CS15802 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15802&SEMESTER=S15 | prereq:(15781 or 10601) and (36705 or 36725) description:Please refer to this link for the most recent schedule updates.
CS15803 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15803&SEMESTER=F14 | description:None
CS15804 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15804&SEMESTER=F14 | description:None
CS15812 | Programming Language Semantics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15812&SEMESTER=S15 | instructors:Platzer, Andre description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules15.html this link for the most recent schedule updates.
CS15814 | Types and Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15814&SEMESTER=F14 | instructors:Harper, Robert description:CLASSES WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 7TH    This is an introductory course on the foundations of programming languages. The central organizing principle of language design is the identification of language features with types. The theory of programming languages, therefore, reduces to the theory of types. Type theory is a comprehensive foundational theory of computation. Type theory has its orgins in proof theory (the theory of human reason) and is closely related to category theory (the general theory of mathematical structures). The tripartite relationship between type theory, proof theory, and category theory is fundamental to the study of programming languages. We will place special emphasis on the propositions-as-types correspondence, in which programs of a type are identified with proofs of the corresponding proposition. (Similar correspondences hold between type theory and category theory (types are objects, programs are maps) and between category theory and proof theory (propositions are objects, proofs are maps), but we shall not consider these in this course.)   Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15815 | Interactive Theorem Proving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15815&SEMESTER=S15 | instructors:Clarke, Edmund Avigad, Jeremy description:Please refer tohttps://www.cs.cmu.edu/~csd-grad/courseschedules15.html for the most recent schedule updates.
CS15819 | Advanced Topics in Programming Languages:This Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15819&SEMESTER=S15 | instructors:Crary, Karl description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef14.html this link for the most recent schedule updates.
CS15821 | Mobile and Pervasive Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15821&SEMESTER=F14 | instructors:Siewiorek, Daniel Satyanarayanan, Mahadev description:This is a course exploring research issues in the emerging fields of mobile computing and its close relative, pervasive computing. Many traditional areas of computer science and computer engineering are impacted by the constraints and demands of mobile and pervasive computing. Examples include network protocols, power management, user interfaces, file access, usability and security. This will be an "advanced" course in the truest sense --- most, if not all, the topics discussed will be ones where there is little consensus in the research community on the best approaches. The course will also offer significant "hand-on" experience in this area.   Each student will have to present and lead the discussion on a number of papers. Students will work in groups of three under the guidance of a mentor on a hands-on project. Each student will also be required to write one of two documents based on an idea in mobile and pervasive computing: (a) a research proposal (similar in spirit to an NSF proposal) or (b) a short business plan for a commercial opportunity. Grading will be based on the quality of the presentations, the project, the proposal or business plan, and brief in-class quizzes on the readings.     Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15 .html for the most recent schedule updates.
CS15826 | Multimedia Databases and Datamining | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15826&SEMESTER=F14 | instructors:Faloutsos, Christos description:Please refer to href="http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.  CLASS WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 9TH.    DESCRIPTION    The course covers advanced algorithms for learning, analysis, data management and visualization of large datasets. Topics include indexing for text and DNA databases, searching medical and multimedia databases by content, fundamental signal processing methods, compression, fractals in databases, data mining, privacy and security issues, rule discovery, data visualization, graph mining, stream mining.
CS15855 | An Introduction to Computational Complexity Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15855&SEMESTER=F14 | instructors:Rudich, Steven description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.  Class will not begin until the week of September 7th.
CS15857 | Performance Modeling: Analytical Performance Modeling of Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15857&SEMESTER=F14 | instructors:Harchol-Balter, Mor description:Classes will not begin until the week of September 7th. Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.  In designing computer systems one is usually constrained by certain performance requirements and limitations. For example, one might need to guarantee a response time SLA or certain throughput requirement, while at the same time staying within a power budget or cost budget. On the other hand, one often has many choices: One fast disk, or two slow ones? More memory, or a faster processor? A fair scheduler or one that minimizes mean response time? For multi-server systems, one can choose from a wide array of load balancing policies, a wide array of migration policies, capacity provisioning schemes, power management policies ... The possibilities are endless. The best choices are often counter-intuitive. Ideally, one would like to have answers to these questions before investing the time and money to build a system. This class will introduce students to analytic stochastic modeling with the aim of answering the above questions.    Students should have a strong background in probability before embarking on this class.   If you are worried about your probability background, please work through all the examples and exercises in Chpt 3 of the class textbook.
CS15859 | Special Topics in Theory:: Advanced Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15859&SEMESTER=S15 | instructors:Gupta, Anupam description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.Class will not begin until the week of September 7th.
CS15862 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15862&SEMESTER=F14 | instructors:Kitani, Kris description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15869 | Special Topics in Graphics:: Computational Aspects of Fabrication | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15869&SEMESTER=S15 | instructors:Coros, Stelian description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules15.html this link for the most recent schedule updates.
CS15887 | Planning, Execution, and Learning: Planning, Execution, and Learning | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15887&SEMESTER=F14 | instructors:Veloso, Maria Manuela Simmons, Reid description:Please refer to this link for the most recent schedule updates.  Summary:Planning is ubiquitous in everyday life -- from planning how to make dinner to planning how to graduate from University with the least amount of work. Researchers in AI have studied planning problems for many years, and many techniques exist for automating planning processes.    This course will explore both classical and modern approaches to planning. Issues to be discussed include: how to represent actions and world state, how to search for plans efficiently, how to deal with uncertainty in actions and the world state, how to find "good" or "optimal" plans,how to represent time, and how to dynamically combine planning and execution.    Specific planning techniques to be covered include: means-ends analysis, linear and non-linear planning, partial-order planning, graph-based planning, heuristic planning, BBD-based planning, hierarchical planning, temporal planning, conditional and conformant planning, probabilistic planning and learning using Markov models (MDPs and POMDPs), integration of planning, perception and execution, execution monitoring and replanning, path planning, multi-agent planning, and scheduling.    There are no explicit prerequisites, but a basic knowledge of AI is assumed.
CS15891 | V-Unit in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15891&SEMESTER=S15 | instructors:Dias, Mary Veloso, Maria Manuela description:href="http://www.cs.cmu.edu/~vunit/intro.html    DESCRIPTION:  Please refer to href="http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.
CS15896 | Algorithms, Games, and Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15896&SEMESTER=S15 | instructors:Procaccia, Ariel description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.   Algorithms, Games, and Networks is a new interdisciplinary course that covers selected theoretical topics at the interface of computer science and economics.  The course's topics include: solution concepts in game theory, such as Nash equilibrium and correlated equilibrium, their computation, and connections to learning theory; the price of anarchy in routing and congestion games; computational social choice: voting rules as maximum likelihood estimators, the axiomatic approach to ranking systems and crowdsourcing, manipulation of elections and ways to circumvent it; algorithmic mechanism design, focusing on truthful approximation algorithms; market design, with an emphasis on optimization and incentives in kidney exchange; diffusion of technologies and influence maximization in social networks; and procedures for fair division, such as cake cutting algorithms.  Book: The course book is Algorithmic Game Theory, which is freely available online.  Prerequisites: The course is mainly intended for graduate students in computer science. We also welcome undergraduates and students in other relevant fields (e.g., mathematics, economics, business), but note that mathematical maturity is required, and basic knowledge in computational complexity and probability theory is assumed.
CS15990 | Computer Science Colloquium | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15990&SEMESTER=S15 | description:None
CS15996 | Immigration Course in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15996&SEMESTER=F14 | description:None
CS15997 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15997&SEMESTER=M15 | description:None
CS15998 | Practicum in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15998&SEMESTER=M15 | description:None
