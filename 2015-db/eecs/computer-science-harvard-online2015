CSCI3 | Introduction to Web Programming Using JavaScript | http://canvas.harvard.edu/courses/1847 | instructors:Larry Bouthillier http://www.extension.harvard.edu/about-us/faculty-directory/larry-bouthillier description:This course provides an introduction to web development by way of the essential language and runtime environment that powers modern web interfaces. Through a series of examples and projects, students learn basic programming concepts while building an understanding of the power and complexities of Javascript, which can perplex even experienced web developers. The course provides a solid foundation in computer programming in Javascript: syntax and data structures, conditionals, objects, scope and closures, AJAX, the DOM, and event handling. Students gain an understanding of the popular libraries that power rich web applications such as jQuery, Ext JS, and others. Upon completion, students are prepared to use Javascript libraries in their projects, write their own or extend existing JavaScript libraries, and build rich web applications using these powerful tools. No computer programming experience is required, though exposure to basic HTML and CSS is helpful. (4 credits) 
CSCI8 | Web GIS: Principles and Applications | http://isites.harvard.edu/course/ext-24031/2015/spring | instructors:Pinde Fu http://www.extension.harvard.edu/about-us/faculty-directory/pinde-fu description:Web GIS has revealed the immense value and applicability of GIS to e-government, e-business, e-science, and daily life. This course provides students with a comprehensive overview of web GIS; teaches students how to use state of the art web GIS skills including ArcGIS Online Cloud platform, ArcGIS for Server, web services, ArcGIS Online web app templates, ArcGIS for smart phones, ArcGIS Viewer for JavaScript, ArcGIS API for JavaScript APIs, HTML5, and 3D web services; and inspires students with web GIS application case studies. Access to ArcGIS Online and the Harvard ArcGIS server is provided. Students need to have ArcGIS Desktop installed. Registered students can download ArcGIS Desktop and request a free license from the Harvard Center for Geographic Analysis.  (4 credits) 
CSCI10a | Introduction to Computer Science Using Java I | http://www.fas.harvard.edu/~cscie10 | instructors:Henry H. Leitner http://www.extension.harvard.edu/about-us/faculty-directory/henry-h-leitner description:Intended for students with no previous programming background, this course introduces problem-solving methods and algorithm development using the high-level programming language Java. Students learn how to design, code, debug, and document programs using modern engineering techniques in the Unix environment. Related topics include programming using iterative constructs, the basic aspects of arrays and recursion, string manipulation, parameter passing, information hiding and encapsulation using classes, and the functional decomposition of methods to enable object-oriented design. Some applications are chosen for their relevance to more advanced coursework in computer science while others involve nonscientific and business-related areas. The recorded lectures are from the 2013 course. (4 credits) 
CSCI10b | Introduction to Computer Science Using Java II | http://www.extension.harvard.edu/courses/introduction-computer-science-using-java-ii | instructors:Henry H. Leitner http://www.extension.harvard.edu/about-us/faculty-directory/henry-h-leitner description:This is the second course in object-oriented programming methods using Java. It begins with the implementation of abstract data types using classes, objects, and overloaded methods. Other topics include strings, multidimensional arrays, vectors, and linked lists; streams and file I/O; recursion; exception handling; threads and event-driven programming; and graphical user interface design using the Swing classes. The course also introduces the RISC machine architecture and aspects of compilers and operating systems. Programming exercises are conducted in both Unix and PC-based environments. (4 credits) 
CSCI12 | Fundamentals of Website Development | http://cscie12.dce.harvard.edu/syllabus | instructors:David P. Heitmeyer http://www.extension.harvard.edu/about-us/faculty-directory/david-p-heitmeyer description:This course provides a comprehensive overview of website development. Students explore the prevailing vocabulary, tools, and standards used in the field and learn how the various facets—including HTML5, XHTML, CSS, JavaScript, Ajax, multimedia, scripting languages, HTTP, clients, servers, and databases—function together in today's web environment. The course provides a solid web development foundation, focusing on content and client-side (browser) components (HTML5, XHTML, CSS, JavaScript, multimedia), with an overview of the server-side technologies. In addition, software and services that are easily incorporated into a website (for example, maps, checkout, blogs, content management) are surveyed and discussed. Students produce an interactive website on the topic of their choice for the final project and leave the course prepared for more advanced and focused web development studies. (4 credits) 
CSCI15 | Dynamic Web Applications | http://isites.harvard.edu/course/ext-14291/2014/fall | instructors:Susan Buck http://www.extension.harvard.edu/about-us/faculty-directory/susan-buck description:This course is the next step for students who have experience with HTML/CSS and are looking to take their web programming skills to the next level with server-side web development. Websites can be relatively static mediums: a simple portfolio or a site for a local coffee shop are two examples of basic sites with hard-coded content. This format works well for presenting the same information for every visitor to the site. Web applications, however, take websites to the next level. Think about your experience with online banks, tools like Google Docs, and online stores like Amazon. These are all robust applications operating with databases and offering a personalized experience to each individual user. Over the course of the semester we cover the skills necessary to evolve simple static websites into dynamic, database-driven web applications. The following technologies are covered: object-oriented PHP using the expressive MVC framework, Laraval, basic server setup and management, version control with Git, dependency management, testing, and other modern web development practices. (4 credits) 
CSCI17 | Medical Informatics | http://isites.harvard.edu/course/ext-24035/2015/spring | instructors:Oleg Pianykh http://www.extension.harvard.edu/about-us/faculty-directory/oleg-pianykh description:This course covers the most important parts of the field of medical informatics: history, underlying concepts and standards, digital data and networks in medicine, medical image analysis and CAD, confidentiality and security, developing clinical applications and software, teleradiology and medical clouds, building digital hospital workflow, and the science and art of medical imaging. (4 credits) 
CSCI18 | Web Development Using XML | http://cscie18.dce.harvard.edu/syllabus | instructors:David P. Heitmeyer http://www.extension.harvard.edu/about-us/faculty-directory/david-p-heitmeyer description:Students learn key XML technologies (XML, XPath, XSL, XML Schema, RNG, DTD, XQuery, DOM) as well as specific markup languages relevant to website development (XHTML, XHTMI Mobile Profile, RSS, RDF, XSL-FO, SVG, DocBook, OOXML, OpenDocument, XForms). In addition, the course covers topics such as XML and databases (native XML databases and RDBMS), XML programming APIs (DOM and SAX), Apache Cocoon (an open source XML publishing framework), eXist (an open source native XML database), and the role of XML in Web 2.0 to deliver data and functionality through Ajax and web services (SOAP and REST). Using these technologies, students develop dynamic, data-driven websites that are capable of delivering content in a variety of media formats (screen, text, print, graphics) to a variety of devices (desktop, handheld, mobile) for a variety of audiences. (4 credits) 
CSCI20 | Discrete Mathematics for Computer Science | http://canvas.harvard.edu/courses/1765 | instructors:Deborah Abel http://www.extension.harvard.edu/about-us/faculty-directory/deborah-abel description:This course covers widely applicable mathematical tools for computer science, including topics from logic, set theory, combinatorics, number theory, probability theory, and graph theory. It includes practice in reasoning formally and proving theorems. Students meet twice a week via web conference to solve problems collaboratively. They also watch recorded lectures from the Harvard School of Engineering and Applied Sciences course Computer Science 20. (4 credits) 
CSCI22 | Data Structures | http://sites.fas.harvard.edu/~cscie22/ | instructors:David G. Sullivan http://www.extension.harvard.edu/about-us/faculty-directory/david-g-sullivan description:This course is a survey of fundamental data structures for information processing, including lists, stacks, queues, trees, and graphs. It explores the implementation of these data structures (both array-based and linked representations) and examines classic algorithms that use these structures for tasks such as sorting, searching, and text compression. The Java programming language is used to demonstrate the topics discussed; and key notions of object-oriented programming, including encapsulation and abstract data types, are emphasized. (4 credits) 
CSCI24 | Numerical Analysis | http://isites.harvard.edu/course/ext-14469/2014/fall | instructors:Jeff Parker http://www.extension.harvard.edu/about-us/faculty-directory/jeff-parker description:When we use a calculator to compute cos(x), we are asking the machine to approximate a value. In this course, we investigate the algorithms used to compute such values. As in many other areas of computer science, we seek to find a result of desired accuracy with a minimum of effort. The course covers root finding, solving systems of linear equations, interpolation, least squares, numerical integration and differentiation, and solving systems of differential equations. Students may have learned some techniques in calculus to approximate an area with a Riemann integral or to approximate a function with a Taylor Series. We review these techniques, and study variants that converge much faster, and are thus better suited for calculators and computers. Class work involves experimenting with different algorithms. Programming is done in MATLAB, an interactive system for exploring mathematical problems. (4 credits) 
CSCI26 | Introduction to C, Unix/Linux Programming, and Web Interfaces | http://people.fas.harvard.edu/~lib113/ | instructors:Bruce Molay http://www.extension.harvard.edu/about-us/faculty-directory/bruce-molay description:Designed for students with some programming experience, this course provides a rigorous introduction to writing and using software tools in the Unix and GNU/Linux programming environments to build command-line and web-based programs. The course teaches students how to write C programs and Unix shell scripts, and how to create web interfaces to those programs. Topics include text processing, memory management, files and pipes, and processes and protocols. Students write programs to analyze data and generate reports, use shell scripts to combine tools into applications, and use HTML, CGI, and Ajax to provide web access to those applications and data. (4 credits) 
CSCI28 | Unix/Linux Systems Programming | http://sites.harvard.edu/~lib215/ | instructors:Bruce Molay http://www.extension.harvard.edu/about-us/faculty-directory/bruce-molay description:As an introduction to the fundamental structure and services of the Unix and Linux operating systems, this course combines theory with programming at the system call level. Topics include files and directories, device control, terminal handling, processes and threads, signals, pipes, and sockets. Examples and exercises include directory management utilities, a shell, and a web server. (4 credits) 
CSCI33 | Programming Microsoft .NET | http://isites.harvard.edu/course/ext-14310/2014/fall | instructors:David S. Platt http://www.extension.harvard.edu/about-us/faculty-directory/david-s-platt description:The first half of this course covers the .NET framework in some detail. Covered topics include the type system, exceptions, garbage collection, threading, and reflection. The second half surveys the additional functionality built on top of the .NET framework. Topics include WCF, WPF, Azure, Windows Phone, and others to be selected based on class interest and availability of guest speakers. Extensive programming homework required. (4 credits) 
CSCI34 | User Experience Engineering | http://isites.harvard.edu/course/ext-14557/2014/fall | instructors:David S. Platt http://www.extension.harvard.edu/about-us/faculty-directory/david-s-platt description:Success in today's software marketplace requires an excellent user experience (UX). That's why all developers, architects, and managers today need to understand the basic principles of UX, even if it's not their primary job. In this course, we take an in-depth look at the foundations of an excellent UX in a platform-agnostic manner. We learn to ask and then answer the vital questions that everyone involved in software needs to consider when making every design decision; we learn to start with the user, not the toolkit. Who are our users and how do we represent them? What problems are these particular users trying to solve, and what would they consider the characteristics of a good solution? How should the user interaction flow, and how can we represent that with stories? How can we prototype and test different designs? How can we create programs to learn what users really do, instead of what they can remember doing or are willing to admit to doing? How can we measure how well we've succeeded? Rather than getting into the implementation of such elements, we focus on how one decides what to implement, and why, in order to make the user happier and more productive. For example, the web and other channels contain an enormous amount of information about how to program a color gradient or an animation. There is almost zero discussion anywhere about when to use a color gradient or animation and when not to, or why you should use them in this situation but not in that one. This course aims to correct that imbalance. Useful design tools, such as the Balsamiq mock-up editor, are discussed as they bear on specific covered topics. Tools aimed primarily at user experience implementation, such as Microsoft Expression Blend, are not covered.  (4 credits) 
CSCI40 | Communication Protocols and Internet Architectures | http://canvas.harvard.edu/courses/1016 | instructors:Leonard Evenchik http://www.extension.harvard.edu/about-us/faculty-directory/leonard-evenchik description:Networks are now too large, complex, and diverse to be built on an ad hoc basis. This course provides a structured approach to the design, analysis, and implementation of networks and protocols. We study various protocols, including TCP/IP, WWW/HTTP, e-mail/SMTP, multimedia protocols for voice and video, and the IEEE 802 LAN protocol suite. In each case, the protocol's functions and the underlying reference model are discussed. LAN architecture and design, internetworking using switches and routers, and the design and analysis of both private networks and the Internet are presented. The course discusses new areas of work, including network quality of service, voice and video on the Internet, policy-based networks, and broadband/gigabit networks. (4 credits) 
CSCI45a | The Cyber World: Hardware, Software, Networks, Security, and Management | http://wiki.harvard.edu/confluence/display/csci45/CSCI-E45a+-+Understanding+and+Securing+the+Cyber+Infrastructure | instructors:Benoit Gaucherin http://www.extension.harvard.edu/about-us/faculty-directory/benoit-gaucherin description:Today we all live and work in a participatory cyberspace. Computers, the data networks that interconnect them, and the services available over the networks make up this cyberspace. As cyberspace invades almost all areas of modern day living, playing and working, it is becoming more important that people understand its technical and political underpinnings and operations, as well as its capabilities, threats, and weaknesses. This is a companion course to CSCI E-45b. The goal of this pair of courses is to give students the tools they need to understand, use, and manage the technologies involved, as well as the ability to appreciate the legal, social, and political dynamics of this ever expanding universe and the interplay between the cyber and physical worlds. The pair of courses covers the essential elements of computing and the history, structure, operation, and governance of the Internet. This course focuses on the fundamental workings of the digital world. From individual computing devices to the broader Internet, students learn how each piece in this gigantic puzzle comes together to create the digital infrastructure that is the cyberspace of today and tomorrow. In addition, we explore the fundamental concepts, technologies, and issues associated with managing and securing cyberspace. (4 credits) 
CSCI45b | The Cyber World: Governance, Threats, Conflict, Privacy, Identity, and Commerce | http://wiki.harvard.edu/confluence/display/csci45/Spring+Syllabus | instructors:Benoit Gaucherin http://www.extension.harvard.edu/about-us/faculty-directory/benoit-gaucherin description:Today we all live and work in a participatory cyberspace. Computers, the data networks that interconnect them, and the services available over the networks make up this cyberspace. As cyberspace invades almost all areas of modern day living, playing and working, it is becoming more important that people understand its technical and political underpinnings and operations, as well as its capabilities, threats, and weaknesses. This is a companion course to CSCI E-45a. The goal of this pair of courses is to give students the tools they need to understand, use, and manage the technologies involved, as well as the ability to appreciate the legal, social, and political dynamics of this ever expanding universe and the interplay between the cyber and physical worlds. The pair of courses covers the essential elements of computing and the history, structure, operation, and governance of the Internet. This course explores the technical and legal aspects of the interactions and tensions between security, usability, privacy, and surveillance in a post NSA-revelation world. We also look at the technical and legal underpinnings that affect the use of cyberspace for businesses. Finally, we explore the rapidly changing dangers of cyberspace from viruses to state-sponsored cyber-conflict. (4 credits) 
CSCI50 | Intensive Introduction to Computer Science | http://cs50.harvard.edu/ | instructors:David J. Malan http://www.extension.harvard.edu/about-us/faculty-directory/david-j-malan description:This course is an introduction to the intellectual enterprises of computer science and the art of programming. It teaches students how to think algorithmically and solve problems efficiently. Topics include abstraction, algorithms, data structures, encapsulation, resource management, security, software engineering, and web development. Languages include C, PHP, and JavaScript plus SQL, CSS, and HTML. Problem sets are inspired by real-world domains of biology, cryptography, finance, forensics, and gaming. Students can count two of the following three courses—CSCI E-10a, CSCI E-10b, and CSCI E-50—toward a degree. They cannot count all three toward a degree. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 50. (4 credits) 
CSCI51 | Abstraction and Design in Computation | http://www.extension.harvard.edu/courses/abstraction-design-computation | instructors:John Gregory Morrisett http://www.extension.harvard.edu/about-us/faculty-directory/john-gregory-morrisett description:This course covers abstraction and design in computation. Topics include functional and object-oriented styles of programming, software engineering in the small, and models of computation. The goal is to understand how to design large programs to make them readable, maintainable, efficient, and elegant. Exercises are conducted in OCaml. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 51. (4 credits) 
CSCI54 | Concurrent Programming in Scala | http://www.extension.harvard.edu/courses/concurrent-programming-scala | instructors:Morgan Creighton http://www.extension.harvard.edu/about-us/faculty-directory/morgan-creighton description:With the end of Moore's Law on the horizon and a consequent fundamental turn toward concurrency in software engineering, a broad variety of concurrency paradigms have become increasingly popular. In addition, the functional style of programming, which provides inherent support for concurrency, has gone mainstream in recent years. The goal of this course is to provide hands-on experience in developing concurrent programs by using the Scala programming language and its rich ecosystem of libraries and frameworks. The course exposes students to a wide array of topics, from fundamentals of functional programming and Scala to various approaches to dealing with concurrency and its constructs. We focus on actors, agents, futures and promises, and functional reactive programming. We also cover in detail the JVM memory model, threads, sychronization, and monitors. Along the way, we analyze trade-offs of each technique. (4 credits) 
CSCI55 | Java for Distributed Computing | http://courses.dce.harvard.edu/~cscie55/syllabus.html | instructors:Charles M. Sawyer, Jr. http://www.extension.harvard.edu/about-us/faculty-directory/charles-m-sawyer-jr description:This course comprises a rigorous study of the core Java programming language followed by an inquiry into Java-based distributed computing. The first part covers classes and inheritance, abstract classes, interfaces, exceptions, threads, packages, events, reflection, and Javadoc. Major features of Java introduced with Java6 are presented, including enums, for-each collection iteration, and annotation. These common tools for Java development are discussed: JUnit, log4j, and Ant. The second half of the course is devoted to distributed computing, using Remote Method Invocation (RMI) to make remote procedure calls on Java objects on other systems. Google Web Toolkit is briefly surveyed. (4 credits) 
CSCI56 | Web Application Development with Groovy and Grails | http://isites.harvard.edu/course/ext-14325/2014/fall | instructors:Burt Beckwith http://www.extension.harvard.edu/about-us/faculty-directory/burt-beckwith description:This course provides a comprehensive overview of using the Groovy language and the Grails framework to rapidly create real-world web applications. Students learn front-end technologies (MVC, Ajax, REST), persistence with GORM using Hibernate and NoSQL datastores, convention-over-configuration, and application and plugin development best practices. Topics include artifacts, internationalization, building and deploying, testing, integration, security, and performance. Groovy topics including dynamic and static typing, closures, DSLs, and the meta-object protocol. (4 credits) 
CSCI58 | Bioinformatics Algorithms | http://canvas.harvard.edu/courses/1180 | instructors:Jeff Parker http://www.extension.harvard.edu/about-us/faculty-directory/jeff-parker description:Living things encode their genetic code in DNA, and use this information to regulate life processes. Bioinformatics is the study of living organisms viewed as information processors. We study algorithms for problems such as gene finding, sequence alignment, motif finding, construction of phylogenetic trees, and structure prediction. While students can find implementations of many of these algorithms, a study of the algorithms leads to a better understanding of the assumptions and limitations of existing algorithms, and gives students the background to evaluate new ones. We explore some important biological problems, discuss mathematical models, and look at computer algorithms to solve these problems. Most of the interesting problems are intractable, so we look at heuristics. (4 credits) 
CSCI60 | Developing Web-Based Database Applications | http://courses.dce.harvard.edu/~cscie60 | instructors:Maria R. Garcia Altobello http://www.extension.harvard.edu/about-us/faculty-directory/maria-r-garcia-altobello description:Web-based applications offer the advantages of workstation productivity and ease of use together with the power and sophistication of relational database servers. This course provides the concepts and skills necessary to design and develop web-based database applications. Students build a working database application using Oracle and a client application using ColdFusion to serve the information needs of an enterprise. Through hands-on projects, students build, populate, query, and write transactions for a relational database using SQL, and develop a client application to access their database using ColdFusion. As a final project, students build a prototype client-server application. (4 credits) 
CSCI61 | Systems Programming and Machine Organization | http://cs61.seas.harvard.edu/wiki/2014/Syllabus | instructors:Eddie Kohler http://www.extension.harvard.edu/about-us/faculty-directory/eddie-kohler description:This course covers the fundamentals of computer systems programming, machine organization, and performance tuning. It provides a solid background in systems programming and a deep understanding of low-level machine organization and design. The course centers on C/C++ programming, with some assembly language. Topics include (but may not be limited to) program optimization, memory hierarchy, caching, virtual memory, dynamic memory management, concurrency, threads, and networking. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 61. (4 credits) 
CSCI63 | Big Data Analytics | http://isites.harvard.edu/course/ext-24038/2015/spring | instructors:Zoran B. Djordjevic http://www.extension.harvard.edu/about-us/faculty-directory/zoran-b-djordjevic description:The recent explosion of social media and the computerization of every aspect of economic activity resulted in the creation of big data: mountains of mostly unstructured data in the form of web logs, videos, speech recordings, photographs, e-mails, and tweets. In a parallel development, computers kept getting ever more powerful and storage ever cheaper. Today, we have the ability to reliably and cheaply store huge volumes of data, efficiently analyze them, and extract business and socially relevant information. This course brings together several key information technologies used in manipulating, storing, and analyzing big data. We look at the basic tools for statistical analysis, R, and key methods used in machine learning. We review MapReduce techniques for parallel processing and Hadoop, an open source framework that allow us to cheaply and efficiently implement MapReduce on Internet scale problems. We touch on related tools that provide SQL-like access to unstructured data: Pig and Hive. We analyze so-called NoSQL storage solutions exemplified by HBase for their critical features: speed of reads and writes, data consistency, and ability to scale to extreme volumes. We examine memory resident databases and streaming technologies which allow analysis of data in real time. We work with the public cloud as unlimited resource for big data analytics. Students gain the ability to design highly scalable systems that can accept, store, and analyze large volumes of unstructured data in batch mode and/or real time. Acquired techniques could be profitably used in a variety of fields. (4 credits) 
CSCI64 | Mobile and Cloud Computing | http://isites.harvard.edu/course/ext-24228/2015/spring | instructors:Joseph Ficara http://www.extension.harvard.edu/about-us/faculty-directory/joseph-ficara description:Mobile computing has become ubiquitous with over a billion devices in use every day. Although these devices are quite powerful on their own, their real power comes from their ability to connect people, entertain, and drive e-commerce by leveraging the enormous computing infrastructure and computing services in the cloud. Cloud computing itself has become a very attractive option for startups and well-established business such Pintrest, Netflix, Box, Blue Cross, SAP, and Pfizer due to minimal initial investment, low costs, and automatic elastic compute/storage capabilities. The combination of these key technologies provide a canvas to create solutions with almost limitless power, innovation, and potential. This course covers the essentials necessary to leverage these key technologies in a pragmatic way so the power, innovation, and potential can be fully realized. In this course, we cover the key services and application programming interfaces (APIs) offered by Microsoft Azure to build highly scalable, low cost cloud computing services that bring the power of the cloud to mobile applications. The course covers caching, storage, big data via (HDInsite) Hadoop, SQL database, notification hubs, mobile services, cloud services, load balancing, schedule, multi-factor authentication, and websites. Using these services, and others, students learn how to build highly scalable, fine-grained multi-tenant, secure representational state transfer (REST) services in the cloud. Throughout the course, students learn how to build highly responsive and engaging mobile applications that take full advantage of these services on the Android, iOS, and Windows platforms.  (4 credits) 
CSCI66 | Database Systems | http://sites.harvard.edu/~cscie66/ | instructors:David G. Sullivan http://www.extension.harvard.edu/about-us/faculty-directory/david-g-sullivan description:This course covers the fundamental concepts of database systems. Topics include data models (ER, relational, and others); query languages (relational algebra, SQL, and others); implementation techniques of database management systems (index structures, concurrency control, recovery, and query processing); management of semistructured and complex data; distributed and noSQL databases. (4 credits) 
CSCI67 | Oracle Database Administration | http://www.extension.harvard.edu/courses/oracle-database-administration | instructors:Patrick McGowan http://www.extension.harvard.edu/about-us/faculty-directory/patrick-mcgowan description:Students study the internal structure and organization of an Oracle database environment. The course presents a structured approach to planning, building, tuning, and monitoring an Oracle 12c database. Students create an Oracle database, tablespaces, user accounts, views, indices, and other objects necessary to support an application. We also examine some of the issues involved when running a large number of databases within an environment and with running large databases.  (4 credits) 
CSCI90 | Cloud Computing | http://isites.harvard.edu/course/ext-14300/2014/fall | instructors:Zoran B. Djordjevic http://www.extension.harvard.edu/about-us/faculty-directory/zoran-b-djordjevic description:Cloud computing has entered the mainstream of information technology, providing infinite or at least highly elastic scalability in delivery of enterprise applications and software as a service (SaaS). Amazon Elastic Cloud, Microsoft Azure, Google App Engine, and a few other offerings give both mature software vendors and start-ups the option to deploy their applications to a system of infinite computational power with practically no capital investment and with modest operating costs proportional to the actual use. The course examines the most important APIs used in the Amazon and Microsoft Clouds. We learn how to use RESTful Web services, and Cloud-based messaging and workflow services to construct new applications. We learn to migrate existing applications into the Cloud, by navigating through phases such as creation of a private Cloud; attaching, in a secure fashion, the private Cloud to the public Cloud; and provisioning and maintaining resources in the public Cloud. We deal with non-trivial issues like load balancing, caching, distributed transactions, identity and authorization management, and data encryption. We introduce Hadoop and BigData services in the Cloud. (4 credits) 
CSCI93 | Computer Architecture | http://sites.fas.harvard.edu/~cscie287/fall2014/ | instructors:James L. Frankel http://www.extension.harvard.edu/about-us/faculty-directory/james-l-frankel description:This course is a study of the fundamental concepts in the design and organization of modern computer systems. Topics include computer organization, instruction-set design, processor design, memory system design, timing issues, interrupts, microcoding, and various performance-enhancing parallel techniques such as prefetching, pipelining, branch prediction, superscalar execution, and massive-parallel processing. We also study existing architectures using CISC, RISC, vector, data parallel, and VLIW designs. An extensive lab project encompassing the design and implementation of a new instruction set and CPU using an FPGA is required of all students. (4 credits) 
CSCI95 | Compiler Design and Implementation | http://sites.fas.harvard.edu/~libe295/spring2015/ | instructors:James L. Frankel http://www.extension.harvard.edu/about-us/faculty-directory/james-l-frankel description:This course is a study of the theory and practice required for the design and implementation of interpreters and compilers for programming languages. Coursework ranges from the abstract, such as categorization of grammars and languages, to the concrete, such as specific algorithms used in compilers and practical performance issues. Topics include lexical analysis, parsing, symbol table generation, type checking, error detection, code generation, optimization, and run-time support. Techniques for top-down and bottom-up parsing both with and without the use of automated tools are studied. Local and global optimization are covered. An extensive programming project is required of all students. (4 credits) 
CSCI97 | Software Design: Principles, Models, and Patterns | http://isites.harvard.edu/course/ext-14306/2014/fall | instructors:Eric Gieseke http://www.extension.harvard.edu/about-us/faculty-directory/eric-gieseke description:This course approaches object-oriented software design from three perspectives: the software engineering principles that enable development of quality software, the modeling of software components using the Unified Modeling Language (UML), and the application of design patterns as a means of reusing design models that are accepted best practices. These patterns include both the original software patterns as well as more recent modularization patterns for software construction. There is at least one significant modeling exercise and a set of programming assignments that require the application of design principles and good programming technique. Students are expected to write a detailed description of the design for each of their programs, incorporating UML models as appropriate. Students implement their programs in the Java programming language. In addition, there is at least one significant assignment that requires designing and documenting a software subsystem without prior implementation. (4 credits) 
CSCI98 | Managed Environments for the Execution of Programs | http://isites.harvard.edu/course/ext-14531/2014/fall | instructors:Philip McGachey http://www.extension.harvard.edu/about-us/faculty-directory/philip-mcgachey description:The majority of modern programming languages assume some degree of runtime support to allow for a simplified abstraction, which leads in turn to increased developer productivity and a more robust end product. For example, automatic memory management removes the need for developers to manually track and release memory, eliminating entire classes of bugs and simplifying the interfaces between components. This course examines the technologies that make up a modern runtime environment, such as interpretation, JIT and selective compilation, memory management and garbage collection, and native interface design. Students develop components of a virtual machine, and learn about the design trade-offs required to build a high performance runtime environment. (4 credits) 
CSCI99 | Software Engineering | http://isites.harvard.edu/course/ext-24047/2015/spring | instructors:Peter Vaughan Henstock http://www.extension.harvard.edu/about-us/faculty-directory/peter-vaughan-henstock description:This course examines how current software engineering methods approach structuring and managing software projects, from requirements gathering to production release. Formal methods in software engineering have a long history, from the older waterfall method to the current agile methods. Students collaborate in small teams to define an architectural model and a project plan, and then implement a system while practicing techniques in software engineering. They prepare a presentation for the ALM in IT faculty committee based on the course project. Programming assignments are done in Java and other languages. (4 credits) 
CSCI109 | Data Science | http://cs109.github.io/2014/ | instructors:Verena S. Kaynig-Fittkau http://www.extension.harvard.edu/about-us/faculty-directory/verena-s-kaynig-fittkau description:This course examines learning from data in order to gain useful predictions and insights. It introduces methods for five key facets of an investigation: data wrangling, cleaning, and sampling to get a suitable data set; data management to be able to access big data quickly and reliably; exploratory data analysis to generate hypotheses and intuition; prediction based on statistical methods such as regression and classification; and communication of results through visualization, stories, and interpretable summaries. The recorded lectures are from the Harvard School of Engineering and Applied and Sciences course Computer Science 109.  (4 credits) 
CSCI121 | Introduction to the Theory of Computation | http://canvas.harvard.edu/courses/611/ | instructors:Harry R. Lewis http://www.extension.harvard.edu/about-us/faculty-directory/harry-r-lewis description:This course is an introduction to the theory of computation, teaching how to reason precisely about computation and prove mathematical theorems about its capabilities and limitations. Topics include finite automata, Turing machines, formal languages, computability, uncomputability, computational complexity, and the P vs. NP question. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 121. (4 credits) 
CSCI124 | Data Structures and Algorithms | http://sites.fas.harvard.edu/~cs124/ | instructors:Jelani Nelson http://www.extension.harvard.edu/about-us/faculty-directory/jelani-nelson description:Design and analysis of efficient algorithms and data structures. Algorithm design methods, graph algorithms, approximation algorithms, and randomized algorithms are covered. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 124. (4 credits) 
CSCI152 | Programming Languages | http://www.seas.harvard.edu/courses/cs152/2015sp/ | instructors:Stephen Chong http://www.extension.harvard.edu/about-us/faculty-directory/stephen-chong description:This course is an introduction to the theory, design, and implementation of programming languages. Topics covered in this course include formal semantics of programming languages (operational, axiomatic, denotational, and translational), type systems, higher-order functions and lambda calculus, lazy evaluations, continuations, dynamic types, monads, objects, modules, concurrency, and communication. The recorded lectures are from the School of Engineering and Applied Sciences course Computer Science 152.  (4 credits) 
CSCI171 | Visualization | http://www.cs171.org/2015/ | instructors:Alexander Lex http://www.extension.harvard.edu/about-us/faculty-directory/alexander-lex description:The amount and complexity of information produced in science, engineering, business, and everyday human activity is increasing at staggering rates. The goal of this course is to expose students to visual representation methods and techniques that facilitate the understanding of complex data. Good visualizations not only present a visual interpretation of data, but improve comprehension, communication, and decision making. The course covers how the human visual system processes and perceives images, good design practices for visualization, how to use existing tools to make visualizations, collecting data from web sites, and programming interactive web-based visualizations using JavaScript and D3. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 171. (4 credits) 
CSCI186 | Economics and Computation | http://beta.blogs.harvard.edu/k108875/extension-syllabus/ | instructors:David C. Parkes http://www.extension.harvard.edu/about-us/faculty-directory/david-c-parkes description:This course covers the interplay between economic thinking and computational thinking as it relates to electronic commerce, social networks, collective intelligence, and networked systems. Topics covered include game theory, peer production, reputation and recommender systems, prediction markets, crowd sourcing, network influence and dynamics, auctions and mechanisms, privacy and security, matching and allocation problems, computational social choice, and behavioral game theory. Emphasis is on core methodologies, with students engaged in theoretical, computational, and empirical exercises. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 186. (4 credits) 
CSCI207 | Systems Development for Computational Science | http://isites.harvard.edu/course/ext-14549/2014/fall | instructors:Thouis Ray Jones http://www.extension.harvard.edu/about-us/faculty-directory/thouis-ray-jones description:This is an applications course highlighting the use of computers in solving scientific problems. Students learn the fundamentals of developing scientific software systems including abstract thinking, algorithmic development, and assessment of computational approaches. They use a series of open source tools and libraries for data analysis, modeling, and visualization of real scientific problems. The recorded lectures are from the Harvard School of Engineering and Applied Sciences course Computer Science 207. (4 credits) 
