pldi-bp-1 | Flick: A Flexible, Optimizing IDL Compiler | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-1 Flick: A Flexible, Optimizing IDL Compiler | description:1997  133 citation ratings:1 author:Eric Eide, Kevin Frei, Bryan Ford, Jay Lepreau, Gary Lindstrom
pldi-bp-2 | Automatic verification of pointer programs using monadic second-order logic | http://doi.acm.org/10.1145/258915.258936 | description:1997  113 citation ratings:2 author:J. Jenson, M. Jorgensen, N. Klarkund, M. Schwartzback
pldi-bp-3 | Dynamic Feedback: An Effective Technique for Adaptive Computing | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-3 Dynamic Feedback: An Effective Technique for Adaptive Computing | description:1997  100 citation ratings:3 author:Pedro C. Diniz, Martin C. Rinard
pldi-bp-4 | TIL: A Type-Directed Optimizing Compiler for ML | http://doi.acm.org/10.1145/231379.231414 | description:1996  404 citation ratings:1 author:David Tarditi, J. Gregory Morrisett, Perry Cheng, Christopher A. Stone, Robert Harper, Peter Lee
pldi-bp-5 | GUM: A Portable Parallel Implementation of Haskell | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-5 GUM: A Portable Parallel Implementation of Haskell | description:1996  239 citation ratings:2 author:Philip W. Trinder, Kevin Hammond, James S. Mattson Jr., A. S. Partridge, Simon L. Peyton Jones
pldi-bp-6 | VCODE: a Retargetable, Extensible, Very Fast Dynamic Code Generation System | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-6 VCODE: a Retargetable, Extensible, Very Fast Dynamic Code Generation System | description:1996  203 citation ratings:3 author:Dawson R. Engler
pldi-bp-7 | Whole program paths | http://doi.acm.org/10.1145/301618.301678 | description:1999 best paper 281 citation ratings:1 author:James R. Larus
pldi-bp-8 | Compressing Java Class Files | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-8 Compressing Java Class Files | description:1999  120 citation ratings:2 author:William Pugh
pldi-bp-9 | Load-Reuse Analysis: Design and Evaluation | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-9 Load-Reuse Analysis: Design and Evaluation | description:1999  62 citation ratings:3 author:Rastislav Bodík, Rajiv Gupta, Mary Lou Soffa
pldi-bp-10 | Eliminating array bounds checks through dependent types | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-10 Eliminating array bounds checks through dependent types | description:1998  250 citation ratings:1 author:H. Xi, F. Pfenning
pldi-bp-11 | Units: Cool Modules for HOT Languages | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-11 Units: Cool Modules for HOT Languages | description:1998  242 citation ratings:2 author:Matthew Flatt, Matthias Felleisen
pldi-bp-12 | Thin Locks: Featherweight Synchronization for Java | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-12 Thin Locks: Featherweight Synchronization for Java | description:1998  236 citation ratings:3 author:David F. Bacon, Ravi B. Konuru, Chet Murthy, Mauricio J. Serrano
pldi-bp-13 | ESP: Path-Sensitive Program Verification in Polynomial Time | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-13 ESP: Path-Sensitive Program Verification in Polynomial Time | description:2002  466 citation ratings:1 author:Manuvir Das, Sorin Lerner, Mark Seigle
pldi-bp-14 | Adoption and Focus: Practical Linear Types for Imperative Programming | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-14 Adoption and Focus: Practical Linear Types for Imperative Programming | description:2002  239 citation ratings:2 author:Manuel Fähndrich, Robert DeLine
pldi-bp-15 | Automatically Proving the Correctness of Compiler Optimizations | http://doi.acm.org/10.1145/781131.781156 | description:2002  141 citation ratings:3 author:Sorin Lerner, Todd Millstein, Craig Chambers
pldi-bp-16 | A static analyzer for large safety-critical software | http://doi.acm.org/10.1145/781131.781153 | description:2003  422 citation ratings:1 author:Bruno Blanchet, Patrick Cousot, Radhia Cousot, Jérome Feret, Laurent Mauborgne, Antoine Miné, David Monniaux, Xavier Rival
pldi-bp-17 | CSSV: towards a realistic tool for statically detecting all buffer overflows in C | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-17 CSSV: towards a realistic tool for statically detecting all buffer overflows in C | description:2003  245 citation ratings:2 author:Nurit Dor, Michael Rodeh, Shmuel Sagiv
pldi-bp-18 | Automatically Proving the Correctness of Compiler Optimizations | http://doi.acm.org/10.1145/781131.781156 | description:2002 best paper 141 citation ratings:3 author:Sorin Lerner, Todd Millstein, Craig Chambers
pldi-bp-19 | Dynamo: a transparent dynamic optimization system | http://doi.acm.org/10.1145/349299.349303 | description:2000 best paper 912 citation ratings:1 author:Vasanth Bala, Evelyn Duesterwald, Sanjeev Banerjia
pldi-bp-20 | ABCD: eliminating array bounds checks on demand | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-20 ABCD: eliminating array bounds checks on demand | description:2000  219 citation ratings:2 author:Rastislav Bodík, Rajiv Gupta, Vivek Sarkar
pldi-bp-21 | Practicing JUDO: Java under dynamic optimizations | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-21 Practicing JUDO: Java under dynamic optimizations | description:2000  180 citation ratings:3 author:Michal Cierniak, Guei-Yuan Lueh, James M. Stichnoth
pldi-bp-22 | Ultra-fast Aliasing Analysis using CLA: A Million Lines of C Code in a Second | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-22 Ultra-fast Aliasing Analysis using CLA: A Million Lines of C Code in a Second | description:2001  204 citation ratings:1 author:Nevin Heintze, Olivier Tardieu
pldi-bp-23 | SPL: A Language and Compiler for DSP Algorithms | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-23 SPL: A Language and Compiler for DSP Algorithms | description:2001  154 citation ratings:2 author:Jianxin Xiong, Jeremy Johnson, Robert W. Johnson, David A. Padua
pldi-bp-24 | Java without the Coffee Breaks: A Nonintrusive Multiprocessor Garbage Collector | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-24 Java without the Coffee Breaks: A Nonintrusive Multiprocessor Garbage Collector | description:2001  119 citation ratings:3 author:David F. Bacon, C. Richard Attanasio, Han Bok Lee, V. T. Rajan, Stephen E. Smith
pldi-bp-25 | Termination proofs for systems code | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-25 Termination proofs for systems code | description:2006  280 citation ratings:1 author:Byron Cook, Andreas Podelski, Andrey Rybalchenko
pldi-bp-26 | Compiler and runtime support for efficient software transactional memory | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-26 Compiler and runtime support for efficient software transactional memory | description:2006  256 citation ratings:2 author:Ali-reza Adl-tabatabai, Brian T. Lewis, Vijay Menon, Brian R. Murphy, Bratin Saha, Tatiana Shpeisman
pldi-bp-27 | Effective static race detection for Java | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-27 Effective static race detection for Java | description:2006  230 citation ratings:3 author:Mayur Naik, Alex Aiken, John Whaley
pldi-bp-28 | Valgrind: a framework for heavyweight dynamic binary instrumentation | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-28 Valgrind: a framework for heavyweight dynamic binary instrumentation | description:2007  603 citation ratings:1 author:Nicholas Nethercote, Julian Seward
pldi-bp-29 | Iterative context bounding for systematic testing of multithreaded programs | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-29 Iterative context bounding for systematic testing of multithreaded programs | description:2007  220 citation ratings:2 author:Madanlal Musuvathi, Shaz Qadeer
pldi-bp-30 | Optimistic parallelism requires abstractions | http://doi.acm.org/10.1145/1250734.1250759 | description:2007  203 citation ratings:3 author:Milind Kulkarni, Keshav Pingali, Bruce Walter, Ganesh Ramanarayanan, Kavita Bala, L. Paul Chew
pldi-bp-31 | The ant and the grasshopper: fast and accurate pointer analysis for millions of lines of code | http://doi.acm.org/10.1145/1250734.1250767 | description:2007 best paper 80 citation ratings:13 author:Ben Hardekopf, Calvin Lin
pldi-bp-32 | Fault-tolerant typed assembly language | http://doi.acm.org/10.1145/1250734.1250741 | description:2007 best paper 21 citation ratings:31 author:Frances Perry, Lester Mackey, George A. Reis, Jay Ligatti, David I. August, David Walker
pldi-bp-33 | Cloning-based context-sensitive pointer alias analysis using binary decision diagrams | http://doi.acm.org/10.1145/996841.996859 | description:2004 best paper 382 citation ratings:1 author:John Whaley, Monica S. Lam
pldi-bp-34 | KISS: keep it simple and sequential | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-34 KISS: keep it simple and sequential | description:2004  143 citation ratings:2 author:Shaz Qadeer, Dinghao Wu
pldi-bp-35 | Jedd: a BDD-based relational extension of Java | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-35 Jedd: a BDD-based relational extension of Java | description:2004  71 citation ratings:3 author:Ondrej Lhoták, Laurie J. Hendren
pldi-bp-36 | Pin: building customized program analysis tools with dynamic instrumentation | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-36 Pin: building customized program analysis tools with dynamic instrumentation | description:2005  1417 citation ratings:1 author:Chi-Keung Luk, Robert S. Cohn, Robert Muth, Harish Patil, Artur Klauser, P. Geoffrey Lowney, Steven Wallace, Vijay Janapa Reddi, Kim M. Hazelwood
pldi-bp-37 | Jungloid mining: helping to navigate the API jungle | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-37 Jungloid mining: helping to navigate the API jungle | description:2005  203 citation ratings:2 author:David Mandelin, Lin Xu, Rastislav Bodík, Doug Kimelman
pldi-bp-38 | Mitosis compiler: an infrastructure for speculative threading based on pre-computation slices | http://doi.acm.org/10.1145/1065010.1065043 | description:2005  114 citation ratings:3 author:C. G. Qui?nones
pldi-bp-39 | Automatic pool allocation: improving performance by controlling data structure layout in the heap | http://doi.acm.org/10.1145/1065010.1065027 | description:2005 best paper 100 citation ratings:7 author:Chris Lattner, Vikram Adve
pldi-bp-40 | Programming by sketching for bit-streaming programs | http://doi.acm.org/10.1145/1065010.1065045 | description:2005 best paper 76 citation ratings:9 author:Armando Solar-Lezama, Rodric Rabbah, Rastislav Bodík, Kemal Ebcioğlu
pldi-bp-41 | ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '14, Edinburgh, United Kingdom - June 09 - 11, 2014 | http://dl.acm.org/citation.cfm?id=2594291 | description:2014   ratings:1 author:
pldi-bp-42 | Foundations of the C++ concurrency memory model | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-42 Foundations of the C++ concurrency memory model | description:2008  169 citation ratings:1 author:Hans-juergen Boehm, Sarita V. Adve
pldi-bp-43 | A practical automatic polyhedral parallelizer and locality optimizer | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-43 A practical automatic polyhedral parallelizer and locality optimizer | description:2008  167 citation ratings:2 author:Uday Bondhugula, Albert Hartono, J. Ramanujam, P. Sadayappan
pldi-bp-44 | Grammar-based whitebox fuzzing | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-44 Grammar-based whitebox fuzzing | description:2008  130 citation ratings:3 author:Patrice Godefroid, Adam Kiezun, Michael Y. Levin
pldi-bp-45 | Trace-based just-in-time type specialization for dynamic languages | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-45 Trace-based just-in-time type specialization for dynamic languages | description:2009  142 citation ratings:1 author:Andreas Gal, Brendan Eich, Mike Shaver, David Anderson, David Mandelin, Mohammad R. Haghighat, Blake Kaplan, Graydon Hoare, Boris Zbarsky, Jason Orendorff, Jesse Ruderman, Edwin W. Smith, Rick Reitmaier, Michael Bebenita, Mason Chang, Michael Franz
pldi-bp-46 | PetaBricks: a language and compiler for algorithmic choice | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-46 PetaBricks: a language and compiler for algorithmic choice | description:2009  110 citation ratings:2 author:Jason Ansel, Cy Chan, Yee Lok Wong, Marek Olszewski, Qin Zhao, Alan Edelman, Saman P. Amarasinghe
pldi-bp-47 | Stretching transactional memory | http://doi.acm.org/10.1145/1542476.1542494 | description:2009  108 citation ratings:3 author:Aleksandar Dragojevic, Rachid Guerraoui, Michal Kapalka
pldi-bp-48 | Binary analysis for measurement and attribution of program performance | http://doi.acm.org/10.1145/1542476.1542526 | description:2009 best paper 24 citation ratings:24 author:Nathan R. Tallent, John M. Mellor-Crummey, Michael W. Fagan
pldi-bp-49 | Data representation synthesis | http://doi.acm.org/10.1145/1993498.1993504 | description:2011 best paper 12 citation ratings:1 author:Peter Hawkins, Alex Aiken, Kathleen Fisher, Martin Rinard, Mooly Sagiv
pldi-bp-50 | Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2011, San Jose, CA, USA, June 4-8, 2011 | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-50 Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2011, San Jose, CA, USA, June 4-8, 2011 | description:2011   ratings:2 author:
pldi-bp-51 | An analysis of the dynamic behavior of JavaScript programs | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-51 An analysis of the dynamic behavior of JavaScript programs | description:2010  98 citation ratings:1 author:Gregor Richards, Sylvain Lebresne, Brian Burg, Jan Vitek
pldi-bp-52 | A GPGPU compiler for memory optimization and parallelism management | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-52 A GPGPU compiler for memory optimization and parallelism management | description:2010  85 citation ratings:2 author:Yi Yang, Ping Xiang, Jingfei Kong, Huiyang Zhou
pldi-bp-53 | FlumeJava: easy, efficient data-parallel pipelines | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=pldi-bp-53 FlumeJava: easy, efficient data-parallel pipelines | description:2010  68 citation ratings:3 author:Craig Chambers, Ashish Raniwala, Frances Perry, Stephen Adams, Robert R. Henry, Robert Bradshaw, Nathan Weizenbaum
pldi-bp-54 | Safe to the last instruction: automated verification of a type-safe operating system | http://doi.acm.org/10.1145/2043174.2043197 | description:2010 best paper 23 citation ratings:13 author:Jean Yang, Chris Hawblitzel
pldi-bp-55 | ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '13, Seattle, WA, USA, June 16-19, 2013 | http://dl.acm.org/citation.cfm?id=2491956 | description:2013   ratings:1 author:
pldi-bp-56 | Concurrent data representation synthesis | http://doi.acm.org/10.1145/2254064.2254114 | description:2012 best paper 5 citation ratings:1 author:Peter Hawkins, Alex Aiken, Kathleen Fisher, Martin Rinard, Mooly Sagiv
pldi-bp-57 | ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '12, Beijing, China - June 11 - 16, 2012 | http://dl.acm.org/citation.cfm?id=2254064 | description:2012   ratings:2 author:
