CS15050 | Study Abroad | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15050&SEMESTER=S16 | instructors:Cortina, Thomas description:Students who are interested in studying abroad should first contact the Office of International Education. More information on Study Abroad is available on OIE's Study Abroad page and at the CS Undergraduate Office.
CS15075 | Computer Science Co-Op | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15075&SEMESTER=S16 | instructors:Cortina, Thomas description:This course is meant for CS undergraduate students with a full-time internship that encompasses a summer and a contiguous semester, either Spring-Summer or Summer-Fall who wish to have this recorded on their academic transcript. Units posted for this course do not count toward any requirement for the CS undergraduate degree including free elective units. This course is not available to international students; consult with the Office for International Education for more information.
CS15090 | Computer Science Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15090&SEMESTER=S16 | instructors:Cortina, Thomas description:This course is for Computer Science students who wish to have an internship experience as part of their curriculum. Students are required to write a one-page summary statement prior to registration that explains how their internship connects with their CS curriculum, specifically on how it uses material they have learned as well as prepares them for future courses. Near the end of the internship, students will be required to submit a reflection paper that describes the work they did in more detail, including lessons learned about the work experience and how they utilized their CS education to work effectively. International students should consult with the Office of International Education for appropriate paperwork and additional requirements before registration. Units earned count toward the total required units necessary for degree completion; students should speak with an academic advisor for details. This course may be taken at most 3 times for a total of 9 units maximum. Students normally register for this course for use during the summer semester.
CS15104 | Introduction to Computing for Creative Practice | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15104&SEMESTER=F15 | instructors:Dannenberg, Roger description:[IDeATe portal course] An introduction to fundamental computing principles and programming techniques for creative cultural practices, with special consideration to applications in music, design and the visual arts. Intended for students with little to no prior programming experience, the course develops skills and understanding of text-based programming in a procedural style, including idioms of sequencing, selection, iteration, and recursion. Topics include data organization (arrays, files, trees), interfaces and abstraction (modular software design, using sensor data and software libraries), basic algorithms (searching and sorting), and computational principles (randomness, concurrency, complexity). Intended for students following an IDEATE concentration or minor who have not taken 15-112.
CS15110 | Principles of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15110&SEMESTER=S16 | instructors:Kaynar, Zeliha Dilsun Reid-Miller, Margaret description:A course in fundamental computing principles for students with minimal or no  computing background. Programming constructs: sequencing, selection,  iteration, and recursion. Data organization: arrays and lists. Use of  abstraction in computing: data representation, computer organization,  computer networks, functional decomposition, and application programming  interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems  based on complexity, non-computable functions, and using heuristics to  find reasonable solutions to complex problems. Social, ethical and legal  issues associated with the development of new computational artifacts will  also be discussed.
CS15112 | Fundamentals of Programming and Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15112&SEMESTER=S16 | instructors:Bouamor, Houda description:A technical introduction to the fundamentals of programming with an emphasis  on producing clear, robust, and reasonably efficient code using top-down  design, informal analysis, and effective testing and debugging. Starting  from first principles, we will cover a large subset of the Python  programming language, including its standard libraries and programming  paradigms.  We will also target numerous deployment scenarios, including  standalone programs, shell scripts, and web-based applications.  This course assumes no prior programming experience. Even so, it is a  fast-paced and rigorous preparation for 15-122.  Students seeking a more  gentle introduction to computer science should consider first taking 15-110.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.
CS15121 | Introduction to Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15121&SEMESTER=S16 | instructors:Carrasquel, Jacobo prereq:15112 description:A continuation of the process of program design and analysis for  students with some prior programming experience (functions, loops, and  arrays, not necessarily in Java). The course reinforces object-oriented  programming techniques in Java and covers data aggregates, data  structures (e.g., linked lists, stacks, queues, trees, and graphs), and  an introduction to the analysis of algorithms that operate on those data  structures.  Pre-req: 15-112 or placement
CS15122 | Principles of Imperative Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15122&SEMESTER=S16 | instructors:Razak, Saquib prereq:15112 description:For students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs.  Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms.  Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210.  NOTE: students must achieve a C or better in order to use  this course to satisfy the pre-requisite for any subsequent Computer  Science course.
CS15128 | Freshman Immigration Course | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15128&SEMESTER=F15 | instructors:Carrasquel, Jacobo description:The Freshman Immigration Course is taken by first-semester Computer Science majors on the Pittsburgh campus. The course is designed to acquaint incoming majors with computer science at CMU. Talks range from historical perspectives in the field to descriptions of the cutting edge research being conducted in the School of Computer Science. Enrollment is limited to SCS Freshmen ONLY.
CS15129 | Freshman Immigration Course II | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15129&SEMESTER=F15 | instructors:Harras, Khaled description:This course is ONLY offered at Carnegie Mellon in Qatar.    Students and instructors will solve different problems each week by searching the Web and other likely places for answers. The problems will be submitted by other faculty who will grade the quality of the answers. Students will learn strategies and techniques for finding information on the Web more efficiently; learn when to start with a search engine, a subject-oriented directory, or other tools; explore and practice using advanced search syntax for major search engines; experience specialized search engines for images, sound, multimedia, newsgroups, and discussion lists as well as subject-specific search engines; discover valuable resources to help keep you up-to-date in this fast-changing environment.
CS15131 | Great Practical Ideas for Computer Scientists | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15131&SEMESTER=F15 | instructors:Carrasquel, Jacobo description:THIS COURSE IS OPEN TO CS FRESHMAN ONLY. Throughout your education as a Computer Scientist at Carnegie Mellon, you will take courses on programming, theoretical ideas, logic, systems, etc. As you progress, you will be expected to pick up the so-called "tools of the trade." This course is intended to help you learn what you need to know in a friendly, low-stress, high-support way. We will discuss UNIX, LaTeX, debugging and many other essential tools. Laptop required. (Laptops will be available for those without their own laptops.)
CS15150 | Principles of Functional Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15150&SEMESTER=S16 | instructors:Erdmann, Michael prereq:(21127 or 15151) and (15112) description:An introduction to programming based on a "functional" model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.
CS15199 | Special Topics: Discovering Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15199&SEMESTER=F15 | instructors:Cervesato, Iliano description:This course is ONLY offered at Carnegie Mellon in Qatar.  This course has the purpose of introducing first-year Computer Science students to elements of formal logic as well as to the historical context in which this discipline developed. As all subsequent courses in the CS curriculum rely on students having mastered basic logical notions and skills, it will test and enhance your preparation, thereby putting you in a better position to succeed in the program. It will also help you understand and appreciate how CS came about since Computer Science grew out of logic. The specific knowledge and skills you will learn in is course include: an enhanced ability to research topics, give presentations and write technical prose, some elementary logic, some historical depth into Computer Science, mathematics and logic itself. This course is open to Computer Science freshmen only.
CS15210 | Parallel and Sequential Data Structures and Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15210&SEMESTER=S16 | instructors:Oflazer, Kemal prereq:15122 and 15150 description:Teaches students about how to design, analyze, and program algorithms and data structures.  The course emphasizes parallel algorithms and analysis, and how sequential algorithms can be considered a special case.  The course goes into more theoretical content on algorithm analysis than 15-122 and 15-150 while still including a significant programming component and covering a variety of practical applications such as problems in data analysis, graphics, text processing, and the computational sciences.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer  Science course.
CS15213 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15213&SEMESTER=S16 | instructors:Goldstein, Seth Franchetti, Franz prereq:15122 description:15-213/18-213This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE FOR GRADUATE STUDENTS: This course is not open to graduate students beginning Spring 2015. Graduate students must register for 15-513 instead.
CS15214 | Principles of Software Construction: Objects, Design, and Concurrency | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15214&SEMESTER=S16 | instructors:Garrod, Charles Bloch, Joshua prereq:(15121 or 15122) and (21127 or 15151) description:Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, program structures, and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object oriented programming, (3) static and dynamic analysis for programs, and (4) concurrent and distributed software. Student assignments involve engagement with complex software such as distributed massively multi-player game systems and frameworks for graphical user interaction.
CS15221 | Technical Communication for Computer Scientists | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15221&SEMESTER=S16 | instructors:Hodges, Adam Sans, Thierry prereq:76101 description:The course is designed for sophomore computer science majors to improve their  abilities in practical, professional communications (both written and oral).  It aims to help students compose clear, concise technical writings and oral  presentations for multi-level audiences.  Assignments include technical  definitions, descriptions, instructions, process explanations, abstracts,  memos, and research reports.  Assignments may incorporate recent computer  science research at Carnegie Mellon, projects in related technical courses,  and professional case studies.  Sophomores will likely find the course more useful if they have either had an internship or faculty-supervised research, including SURG projects prior to enrollment.
CS15251 | Great Theoretical Ideas in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15251&SEMESTER=S16 | instructors:Kapoutsis, Christos prereq:(15112) and (21127 or 15151) description:This course is about how to use theoretical ideas to formulate and solve problems in computer science. It integrates mathematical material with general problem solving techniques and computer science applications. Examples are drawn from algorithms, complexity theory, game theory, probability theory, graph theory, automata theory, algebra, cryptography, and combinatorics. Assignments involve both mathematical proofs and programming.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.
CS15291 | Special Topic: Applied Computational Intelligence Lab | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15291&SEMESTER=F15 | instructors:Black, Alan Gershman, Anatole prereq:21127 and 15122 description:What would an "intelligent" picture on the wall do? What if it could see and hear you? What should it say if it could talk? What if your pantry, wardrobe or medicine cabinet could sense, think and act? What should they do and say? What should your cell phone be saying to you? These are not whimsical or theoretical questions...they inevitably arise as ordinary everyday objects around us acquire the ability to sense changes in their environment, think about their implications, and act in pursuit of their goals. These objects are connected to the web and become conduits for services, erasing the distinction between products and services. The ability to invent and build smart products/services is becoming a key skill in the new technology-driven services economy.    The focus of the course will be on building "ordinary" objects that can sense, think and act in the real world and on exploring the implications of these capabilities. Students will select their own project and by the end of the semester will create a working prototype that will be exhibited in a public place. Prizes will be offered for the most creative projects. In the course of their projects, students will learn how to use state-of-the-art tools for:    Object detection using video cameras, microphones and other sensors  Movement and gesture detection  Speech recognition and generation    Reasoning and planning:  While the course organizers have many ideas for specific projects, students will be encouraged to design their own projects. Students are expected to work in small groups on their own time and receive faculty advice as needed. There will be weekly meetings of the whole class.
CS15292 | Special Topic: History of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15292&SEMESTER=S16 | instructors:Cortina, Thomas prereq:(76101) and (15110 or 15112 or 15122 or 15150) description:This course traces the history of computational devices, pioneers and principles from the early ages through the present. Topics include early computational devices, mechanical computation in the 19th century, events that led to electronic computing advances in the 20th century, the advent of personal computing and the Internet, and the social, legal and ethical impact of modern computational artifacts. This course also includes a history of programming languages, operating systems, processors and computing platforms. Students should have an introductory exposure to programming prior to taking this course.
CS15294 | Special Topic: Rapid Prototyping Technologies | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15294&SEMESTER=S16 | instructors:Touretzky, David prereq:15104 or 15112 description:This mini-course introduces students to rapid prototyping technologies with a focus on laser cutting and 3D printing.  The course has three components: 1) A survey of rapid prototyping and additive manufacturing technologies, the maker and open source movements, and societal impacts of these technologies; 2) An introduction to the computer science behind these technologies: CAD tools, file formats, slicing algorithms; 3) Hands-on experience with SolidWorks, laser cutting, and 3D printing, culminating in student projects (e.g. artistic creations, functional objects, replicas of famous calculating machines, etc.). Please note that there will be a usage/materials fee for this course.
CS15295 | Competition Programming and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15295&SEMESTER=S16 | instructors:Sleator, Daniel prereq:15122 description:Each year, Carnegie Mellon fields two teams for participation in the ACM-ICPC Regional Programming Contest. During many recent years, one of those teams has earned the right to represent Carnegie Mellon at the ACM-ICPC World Finals.  This course is a vehicle for those who consistently and rigorously train in preparation for the contests to earn course credit for their effort and achievement.  Preparation involves the study of algorithms, the practice of programming and debugging, the development of test sets, and the growth of team, communication, and problem solving skills.  Neither the course grade nor the number of units earned are dependent on ranking in any contest.  Students are not required to earn course credit to participate in practices or to compete in ACM-ICPC events.
CS15296 | Special Topic: Images of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15296&SEMESTER=S16 | instructors:Frieze, Carol prereq:76101 description:In this research and action based course we will explore computing from a cultural perspective. We will reflect on some issues often taken for granted e.g. are our attitudes to computing generalizable or culturally specific? How are computing and its workforce perceived and represented in US culture and in cultures from around the world? In particular we will be examining how images of the field might affect public attitudes, access to resources and understanding of computer science. Representations of the field take on particular significance in light of recent US government projections: between now and 2018, among all occupations in all fields of science and engineering, computer science occupations will account for nearly 60% of all job growth [Computing Community Consortium, 2010].   This course is aimed primarily at students who are interested in exploring some of the broad issues of computer science and its cultural context. Students will gain experience in teamwork, teaching and presenting. We will use academic papers, web sites, group discussion/debate and popular media. Findings from our investigations will inspire the action component in which student teams develop and implement a public/outreach presentation aimed at re-presenting the exciting field of computer science with broad appeal in mind.
CS15300 | Research and Innovation in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15300&SEMESTER=F15 | instructors:Mowry, Todd prereq:76101 and 15210 and 15213 and 15251 description:This Fall course is the first part of a two-course sequence that is designed to help prepare students to invent the future state-of-the-art in the field of computer science. Course topics will include the following: an overview of important things to know about how research and innovation works in the field of computer science; a survey of the current cutting- edge of computer science research, both here at Carnegie Mellon and elsewhere; critical thinking skills when reading research publications that disagree with each other; strategies for coping with open-ended problems; and technical communication skills for computer scientists. Students will also match up with a faculty mentor for a potential Technology Innovation Project (to be performed in the Spring), put together a detailed plan of attack for that project, and start to get up to speed (including background reading, etc.). This course can be used to satisfy the Technical Communications requirement for the CS major.
CS15302 | Special Topic: Innovating for Underserved Communities: Field Research Basics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15302&SEMESTER=S16 | instructors:Dias, Mary prereq:76101 description:The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by an underserved community. This year, the final assignment projects will be chosen in partnership with the students in the class.
CS15303 | Special Topic: Seminar on Innovating for Underserved Communities | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15303&SEMESTER=S16 | instructors:Dias, Mary prereq:76101 description:The ultimate goal of this course is to familiarize students with ongoing work in the area of technology innovations for underserved communites. This seminar course will review several key publications and presentations on this topic and teach students the necessary skills to analyze and critique this work in useful ways.   Class sessions will be dedicated to discussing reading/viewing assignments and each class discussion will be led by students.  Assignments will involve analyzing, writing, and presenting critiques of specific projects.
CS15312 | Foundations of Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15312&SEMESTER=S16 | instructors:Harper, Robert prereq:(15210 and 15251) or (15212) description:This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.
CS15313 | Foundations of Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15313&SEMESTER=F15 | instructors:Legoues, Claire Kastner, Christian prereq:15214 description:Students gain exposure to the fundamentals of modern software  engineering.  This includes both core CS technical knowledge and  the means by which this knowledge can be applied in the practical  engineering of complex software.  Topics related to software  artifacts include design models, patterns, coding, static and  dynamic analysis, testing and inspection, measurement, and  software architecture and frameworks.  Topics related to software  process include modeling, requirements engineering, process models  and evaluation, team development, and supply chain issues  including outsourcing and open source.  This course has a strong  technical focus, and will include both written and programming  assignments.  Students will get experience with modern software  engineering tools.
CS15317 | Constructive Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15317&SEMESTER=F15 | instructors:Cervesato, Iliano prereq:15150 description:This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes.
CS15319 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15319&SEMESTER=S16 | instructors:Sakr, Majd prereq:15213 description:This course gives students an overview of Cloud Computing, which is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. Students will study its enabling technologies, building blocks, and gain hands-on experience through projects utilizing public cloud infrastructures. Cloud computing services are widely adopted by many organizations across domains. The course will introduce the cloud and cover the topics of data centers, software stack, virtualization, software defined networks and storage, cloud storage, and programming models. We will start by discussing the cloud?s motivating factors, benefits, challenges, service models, SLAs and security. We will describe several concepts behind data center design and management, which enable the economic and technological benefits of the cloud paradigm. Next, we will study how CPU, memory and I/O resources, network (SDN) and storage (SDS) are virtualized, and the key role of virtualization to enable the cloud. Subsequently, students will study cloud storage concepts like data distribution, durability, consistency and redundancy. We will discuss distributed file systems, NoSQL databases and object storage using HDFS, CephFS, HBASE, MongoDB, Cassandra, DynamoDB, S3, and Swift as case studies. Finally, students will study the MapReduce, Spark and GraphLab programming models. Students will work with Amazon Web Services and Microsoft Azure, to rent and provision compute resources and then program and deploy applications using these resources. Students will develop and evaluate scaling and load balancing solutions, work with cloud storage systems, and develop applications in several programming paradigms. 15619 students must complete an extra team project which entails designing and implementing a cost- and performance-sensitive web-service for querying big data.
CS15322 | Introduction to Computer Music | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15322&SEMESTER=S16 | instructors:Stiles, Jesse prereq:15112 description:Computers are used to synthesize sound, process signals, and  compose music. Personal computers have replaced studios full of sound  recording and processing equipment, completing a revolution that began with  recording and electronics. In this course, students will learn the  fundamentals of digital audio, basic sound synthesis algorithms, and  techniques for digital audio effects and processing. Students will apply  their knowledge in programming assignments using a very high-level  programming language for sound synthesis and composition. In a final  project, students will demonstrate their mastery of tools and techniques  through music composition or by the implementation of a significant  sound-processing technique.
CS15323 | Computer Music Systems and Information Processing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15323&SEMESTER=S16 | instructors:Dannenberg, Roger prereq:15122 description:This course presents concepts and techniques for representing and manipulating discrete music information, both in real time and off line. Representations of music as explicitly timed event sequences will be introduced, and students will learn how to build efficient run-time systems for event scheduling, tempo control, and interactive processing. The MIDI protocol is used to capture real-time performance information and to generate sound. The course will also cover non-real-time processing of music data, including Markov models, style recognition, computer accompaniment, query-by-humming, and algorithmic composition. This course is independent of, and complementary to 15-322, Introduction to Computer Music, which focuses on sound synthesis and signal processing.
CS15348 | Embedded Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15348&SEMESTER=S16 | instructors:Razak, Saquib prereq:15122 description:This course is offered only at Carnegie Mellon's campus in Qatar.  This course covers the broad range of foundational skills that apply across all embedded computer system application areas, from thermostats to self-driving vehicles. The emphasis is at the layer where hardware meets software. Topics include microcontroller hardware, assembly language, embedded C programming, analog I/O, timers, code optimization, interrupts, and concurrency. Real world engineering practices, constraints, and example applications are integrated throughout the course. Weekly hands-on hardware and software experiences with an industry-strength automotive embedded controller are coordinated with the lecture content to reinforce core skills.
CS15351 | Algorithms and Advanced Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15351&SEMESTER=S16 | instructors:Adamchik, Victor prereq:15121 or 15122 description:The objective of this course is to study algorithms for general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course may have a few programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead.THIS COURSE IS NOT OPEN TO COMPUTER SCIENCE MAJORS OR MINORS.
CS15354 | Computational Discrete Mathematics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15354&SEMESTER=F15 | instructors:Sutner, Klaus prereq:15251 or 21228 description:This course is about the computational aspects of some of the standard  concepts of discrete mathematics (relations, functions, logic, graphs,  algebra, automata), with emphasis on efficient algorithms.  We begin  with a brief introduction to computability and computational complexity. Other topics include: iteration, orbits and fixed points, order and equivalence relations, propositional logic and satisfiability testing, finite fields and shift register sequences, finite state machines, and cellular automata.    Computational support for some of the material is available in the form of a Mathematica package.
CS15355 | Modern Computer Algebra | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15355&SEMESTER=S16 | instructors:Adamchik, Victor prereq:15251 or 21228 description:The goal of this course is to investigate the relationship between algebra  and computation. The course is designed to expose students to algorithms  used for symbolic computation, as well as to the concepts from modern  algebra which are applied to the development of these algorithms. This  course provides a hands-on introduction to many of the most important ideas  used in symbolic mathematical computation, which involves solving system of  polynomial equations (via Groebner bases), analytic integration, and solving  linear difference equations. Throughout the course the computer algebra system Mathematica will be used for computation.
CS15381 | Artificial Intelligence: Representation and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15381&SEMESTER=F15 | instructors:Veloso, Maria Manuela Kolter, Jeremy prereq:15122 or 15211 description:This course is about the theory and practice of Artificial Intelligence. We will study modern techniques for computers to represent task-relevant information and make intelligent (i.e. satisficing or optimal) decisions towards the achievement of goals. The search and problem solving methods are applicable throughout a large range of industrial, civil, medical, financial, robotic, and information systems.  We will investigate questions about AI systems such as: how to represent knowledge, how to effectively generate appropriate sequences of actions and how to search among alternatives to find optimal or near-optimal solutions.  We will also explore how to deal with uncertainty in the world, how to learn from experience, and how to learn decision rules from data.  We expect that by the end of the course students will have a thorough understanding of the algorithmic foundations of AI, how probability and AI are closely interrelated, and how automated agents learn.  We also expect students to acquire a strong appreciation of the big-picture aspects of developing fully autonomous intelligent agents.  Other lectures will introduce additional aspects of AI, including natural language processing, web-based search engines, industrial applications, autonomous robotics, and economic/game-theoretic decision making.
CS15387 | Computational Perception | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15387&SEMESTER=F15 | instructors:Lee, Tai-Sing prereq:21122 and 21241 and 15112 description:In this course, we will first cover the biological and psychological foundational knowledge of biological perceptual systems, and then apply computational thinking to investigate the principles and mechanisms underlying natural perception. The course will focus on vision this year, but will also touch upon other sensory modalities. You will learn how to reason scientifically and computationally about problems and issues in perception, how to extract the essential computational properties of those abstract ideas, and finally how to convert these into explicit mathematical models and computational algorithms. Topics include perceptual representation and inference, perceptual organization, perceptual constancy, object recognition, learning and scene analysis. Prerequisites: First year college calculus, some basic knowledge of linear algebra and probability and some programming experience are desirable.
CS15390 | Entrepreneurship for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15390&SEMESTER=F15 | instructors:Kaigler, William Courtright, William prereq:15221 or 76270 description:This course is designed to develop skills related to entrepreneurship and innovation for non-business undergraduate and graduate students in the School of Computer Science.  The course assumes no background courses in business and is appropriate for those who are interested in bringing innovations to market either through new companies or existing companies.   The course provides an overview of entrepreneurship and innovation, develops an entrepreneurial frame of mind, and provides a framework for learning the rudiments of how to generate ideas.  Students come up with or are presented with potential ideas and learn how to develop these ideas into opportunities, and to explore their potential for becoming viable businesses.  They learn how to do market research, to develop go-to-market strategies, value propositions and to differentiate their products or services from potential competitors.  The focus is on understanding and developing strategies for approaching the key elements of the entrepreneurial process...opportunity, resources and team. The course consists of a balance of lectures, case studies and encounters with entrepreneurs, investors and business professionals.  The students are exposed to financial and intellectual property issues, and encounter a real world perspective on entrepreneurship, innovation and leadership.  The output of the course is a mini-business plan or venture opportunity screening document that can be developed into a business plan in a subsequent course entitled New Venture Creation or through independent study.
CS15400 | Research Practicum in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15400&SEMESTER=S16 | instructors:Mowry, Todd Aldrich, Jonathan prereq:15300 description:This Spring course is the second part of a two-course sequence that is designed to help prepare students to invent the future state-of-the-art in the field of computer science.  Building directly upon 15-300 (the prerequisite for this course), students will conduct a semester-long independent research project, under the guidance of both the course staff and a faculty project mentor.  The course does not meet for lecture or recitations.  Instead, the students will spend their time working on their research projects, and will also meet with course staff on a bi-weekly basis to discuss their progress.  Students will prepare a written report and a poster presentation at the end of the semester to describe what they have accomplished.
CS15410 | Operating System Design and Implementation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15410&SEMESTER=S16 | instructors:Eckhardt, David Mowry, Todd prereq:15213 description:Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems. The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and "team programming" skills (source control, modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.  Students, especially graduate students, who have not satisfied the prerequisite at Carnegie Mellon are strongly cautioned - to enter the class you must be able to write a storage allocator in C, use a debugger, understand 2's-complement arithmetic, and translate between C and x86 assembly language.  The instructor may require you to complete a skills assessment exercise before the first week of the semester in order to remain registered in the class.  Auditing:  this course is usually full, and we generally receive many more requests to audit than we can accept.  If you wish to audit, please have your advisor contact us before the semester begins to discuss your educational goals.
CS15411 | Compiler Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15411&SEMESTER=F15 | instructors:Simmons, Robert prereq:15213 description:This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.
CS15412 | Operating System Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15412&SEMESTER=F15 | instructors:Eckhardt, David prereq:15410 description:The goal of this class is for students to acquire hands-on experience with operating-system code as it is developed and deployed in the real world.  Groups of two to four students will select, build, install, and become familiar with an open-source operating system project; propose a significant extension or upgrade to that project; and develop a production-quality implementation meeting the coding standards of that project.  Unless infeasible, the results will be submitted to the project for inclusion in the code base.  Variations on this theme are possible at the discretion of the instructor.  For example, it may be possible to work within the context of a non-operating-system software infrastructure project (window system, web server, or embedded network device kernel) or to extend a 15-410 student kernel.  In some situations students may work alone.  Group membership and unit count (9 units versus 12) will be decided by the third week of the semester.  Contributing to a real-world project will involve engaging in some mixture of messy, potentially open-ended activities such as: learning a revision control system, writing a short design document, creating and updating a simple project plan, participating in an informal code review, synthesizing scattered information about hardware and software, classifying and/or reading large amounts of code written by various people over a long period of time, etc.
CS15413 | Software Engineering Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15413&SEMESTER=S16 | instructors:Garrod, Charles Rosso-Llopart, Manuel description:15-413, the Software Engineering Practicum, gives you an opportunityto learn and apply software engineering skills to real-world softwareprojects. This semester 15-413 will be part of the Facebook OpenAcademy program, providing students an opportunity to work with eachother and students from other universities to make substantialcontributions to external open source projects.Enrollment in this course is extremely limited and is possible onlywith explicit permission from the course instructors.  See the courseweb site for details.After completing this course, students will:  * Have substantial experience contributing to real, open sourcesoftware projects.  * Know and be able to use the software development processes used byopen source software projects, with a deep understanding of theprocesses and techniques you will encounter in a software engineeringworkplace.  * Be able to evaluate and discuss aspects of software managementincluding project planning, requirements analysis, architecture,detailed design, quality assurance, and risk management.  * Have substantial first-hand understanding of the softwareengineering realities that drive software engineering practices, withconcrete experience and active reflection on your course experiences.
CS15415 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15415&SEMESTER=S16 | instructors:Hammoud, Mohammad prereq:(15210) or (15211 and 15213) description:This course covers the fundamental topics for Database Management  Systems: Database System Architectural Principles (ACID properties; data abstraction; external, conceptual, and internal schemata; data  independence; data definition and data manipulation languages), Data  models (entity-relationship and relational data models; data  structures, integrity constraints, and operations for each data  model; relational query languages: SQL, algebra, calculus), Theory of  database design (functional dependencies; normal forms; dependency  preservation; information loss), Query Optimization (equivalence of  expressions, algebraic manipulation; optimization of selections and  joins), Storage Strategies (indices, B-trees, hashing), Query Processing (execution of sort, join, and aggregation operators), and Transaction Processing (recovery and concurrency control).
CS15417 | HOT Compilation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15417&SEMESTER=F15 | instructors:Crary, Karl prereq:15312 or 15317 description:The course covers the implementation of compilers for higher-order, typed languages such as ML and Haskell, and gives an introduction to type-preserving compilation.  Topics covered include type inference, elaboration, CPS conversion, closure conversion, garbage collection, phase splitting, and typed assembly language.
CS15418 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15418&SEMESTER=S16 | instructors:Fatahalian, Kayvon Bryant, Randal prereq:15213 description:The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.
CS15421 | Information Security and Privacy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15421&SEMESTER=F15 | instructors:Sadeh, Norman Bauer, Ljudevit Jia, Limin prereq:15112 and 76101 description:The objective of this course is to introduce students to the technologies of Web Commerce, Security and Privacy as well as to related business, policy and usability issues. Content: Over the past 15 years, the Web has become an integral part of our daily life, whether at home or at work. This course provides students with an overview of the technologies and practices associated with Web Security, Privacy and Commerce. In the process, students will learn what it takes to design and develop successful web applications and services, reconciling security, privacy, usability and business considerations. The course is organized around two parts: Part I - Web Security & Privacy Technologies The big picture, gentle introduction to cryptography, digital signatures, key management, authentication, Internet security protocols, certificates & PKI, decentralized trust management, privacy enhancing technologies, electronic payments. Part II - Web Commerce The big picture, Internet marketing & personalization, search engines, B2B and electronic markets, P2P, Web 2.0, Mobile Commerce, social networking. Format: Lectures (including guest lectures), discussions, student presentations, and class projects.  Prerequisites: 15122 or 15211
CS15424 | Foundations of Cyber-Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15424&SEMESTER=S16 | instructors:Platzer, Andre prereq:(15122) and (21122) and (15251 or 21241 or 18202) description:Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.  Students in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.
CS15437 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15437&SEMESTER=S16 | instructors:Eppinger, Jeff prereq:15214 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
CS15440 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15440&SEMESTER=S16 | instructors:Satyanarayanan, Mahadev Pillai, Padmanabhan prereq:15213 description:The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.
CS15441 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15441&SEMESTER=S16 | instructors:Harras, Khaled prereq:15213 description:The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.
CS15451 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15451&SEMESTER=S16 | instructors:Sleator, Daniel Gupta, Anupam prereq:15251 and 15210 and 21241 description:This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.
CS15453 | Formal Languages, Automata, and Computability | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15453&SEMESTER=S16 | instructors:Sutner, Klaus prereq:21228 or 15251 description:An introduction to the fundamental ideas and models underlying computing: finite automata, regular sets, pushdown automata, context-free grammars, Turing machines, undecidability, and complexity theory.
CS15455 | Undergraduate Complexity Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15455&SEMESTER=F15 | instructors:Blum, Manuel Blum, Lenore prereq:15251 description:Complexity theory is the study of how much of a resource (such as time, space, parallelism, or randomness) is required to perform some of the computations that interest us the most. In a standard algorithms course, one concentrates on giving resource efficient methods to solve interesting problems. In this course, we concentrate on techniques that prove or suggest that there are no efficient methods to solve many important problems.  We will develop the theory of various complexity classes, such as P, NP, co-NP, PH, #P, PSPACE, NC, AC, L, NL, UP, RP, BPP, IP, and PCP. We will study techniques to classify problems according to our available taxonomy. By developing a subtle pattern of reductions between classes we will suggest an (as yet unproven!) picture of how by using limited amounts of various resources, we limit our computational power.
CS15456 | Computational Geometry | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15456&SEMESTER=F15 | instructors:Miller, Gary prereq:15451 description:How do you sort points in space?  What does it even mean?  This course takes the ideas of a traditional algorithms course, sorting, searching, selecting, graphs, and optimization, and extends them to problems on geometric inputs.  We will cover many classical geometric constructions and novel algorithmic methods.  Some of the topics to be covered are convex hulls, Delaunay triangulations, graph drawing, point location, geometric medians, polytopes, configuration spaces, linear programming, and others.  This course is a natural extension to 15-451, for those who want to learn about algorithmic problems in higher dimensions.
CS15457 | Special Topics in Theory: Advanced AlgorithmsThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15457&SEMESTER=F15 | prereq:15451 description:Selected advanced topics in algorithms and computational theory. Topics vary from semester to semester.
CS15462 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15462&SEMESTER=S16 | instructors:Pollard, Nancy prereq:(15213 and 21240 and 21259) or (15213 and 21259 and 21241) or (18202 and 18213) description:This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.
CS15463 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15463&SEMESTER=F15 | instructors:Kitani, Kris prereq:(15213) and (21241 or 18202) description:Computational Photography is an emerging new field created by the  convergence of computer graphics, computer vision and  photography. Its role is to overcome the limitations of the  traditional camera by using computational techniques to produce a  richer, more vivid, perhaps more perceptually meaningful  representation of our visual world.    The aim of this advanced undergraduate course is to study ways in  which samples from the real world (images and video) can be used to  generate compelling computer graphics imagery. We will learn how to  acquire, represent, and render scenes from digitized photographs.  Several popular image-based algorithms will be presented, with an  emphasis on using these techniques to build practical systems. This  hands-on emphasis will be reflected in the programming assignments, in  which students will have the opportunity to acquire their own images  of indoor and outdoor scenes and develop the image analysis and  synthesis tools needed to render and view the scenes on the computer.
CS15465 | Animation Art and Technology | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15465&SEMESTER=S16 | instructors:Hodgins, Jessica Duesing, James prereq:15213 or 18213 description:Animation Art and Technology is an interdisciplinary course cross-listed between Art and Computer Science. Faculty and teaching assistants from computer science and art teach the class as a team. It is a project-based course in which four to five interdisciplinary teams of students produce animations. Most of the animations have a substantive technical component and the students are challenged to consider innovation with content to be equal with the technical. The class includes basic tutorials for work in Maya leading toward more advanced applications and extensions of the software such as motion capture and algorithms for animating cloth, hair, particles, and grouping behaviors. The first class will meet in CFA room 303.
CS15466 | Computer Game Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15466&SEMESTER=F15 | instructors:Likhachev, Maxim prereq:15462 description:The goal of the course is two-fold. The first goal is to teach students some of the higher-level techniques that are necessary to implement interesting computer games. In particular, a large emphasis will be on game AI. The class will also cover such topics as game networking, scheduling of tasks in computationally intensive games, and game design. The class will also briefly cover few selected topics such as collision detection and physically-based animation that are good to know even if one is developing games using a game engine. The second goal of the class is to get students familiar with programming games on various platforms using state-of-the-art game engines. To this end, the course will have a heavy programming focus. It will have a number of projects requiring students to apply the learned material to develop games using Unity 3D game engine. The students will develop games that run on a standalone PC, games that run on an Android platform and games that work in a multi-user mode.  In addition to learning the material and learning how to use game engines, the projects will provide students with portfolios of games they have developed. Such a portfolio is important in getting a job in game industry.    Prerequisite is 15-462 or contact the instructor for permission.
CS15467 | Special Topic: Simulation Methods for Animation and Fabrication | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15467&SEMESTER=S16 | instructors:Coros, Stelian prereq:15462 description:Physically-based simulation is a core topic in computer graphics, where it is used to create the natural motions necessary for realistic training simulations, movies, video games, and other interactive applications. With the advent of affordable and accessible 3D Printing technologies, physics-based methods are also being adopted to enable the design and fabrication of physical objects. This course will cover a broad range of techniques -- from particle systems to rigid bodies to finite elements -- and applications to animation and digital fabrication. A hands-on approach will be taken, with an emphasis on developing fun, interactive computer programs.
CS15483 | Special Topic: Truth, Justice, and Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15483&SEMESTER=S16 | instructors:Procaccia, Ariel prereq:15451 description:Truth, Justice, and Algorithms is an interdisciplinary course that covers selected theoretical topics at the interface of computer science and economics, focusing on the algorithmic side of incentives and fairness. The course's topics include: computational social choice, e.g., voting rules as maximum likelihood estimators, the axiomatic approach to ranking systems and crowdsourcing, manipulation of elections and ways to circumvent it; cooperative games, focusing on solution concepts such as the core and the Shapley value, and their computation; fair division algorithms for allocating divisible and indivisible goods, and approximate notions of fairness; online matching algorithms (competitive analysis, not dating) and kidney exchange; noncooperative games, including Nash equilibrium and correlated equilibrium, their computation, connections to learning theory, Stackelberg security games, and the price of anarchy in congestion and routing games; and topics in social networks such as the diffusion of technologies and influence maximization.NOTE: This course is cross-listed with 15-896. Undergraduates may enroll into 15-896 but be aware of work load difference. The two courses are identical in terms of lectures, content, and homework assignments. The only difference is in the final project requirement. In 483, students will prepare a summary of several papers -- this will require 10-20 hours of work. In 896, students will carry out a research project with the goal of obtaining novel results, and present their results in class -- a good project will require 50-60 hours of work. Also note that 483 is 9 units, and 896 is 12 units.
CS15487 | Introduction to Computer &amp; Network Security &amp; Applied Cryptography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15487&SEMESTER=F15 | instructors:Brumley, David Sekar, Vyas prereq:15213 description:This course will introduce students to the fundamentals of computer security and applied cryptography. Topics include software security, networking and wireless security, and applied cryptography. Students will also learn the fundamental methodology for how to design and analyze security critical systems.
CS15491 | Special Topic: CMRoboBits: AI and Robots for Daily-Life Problems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15491&SEMESTER=S16 | instructors:Veloso, Maria Manuela prereq:15122 description:This course will be a project-based course in which we will look at AI androbotics artifacts and techniques to automate solutions to real-worldproblems, in particular related to life in cities. The course will startby collecting and brainstorming about real problems biased to ones thatinvolve the physical space in addition to the cyber information space,such as traffic rush hour, noise in cities, 3D building inspection,service and data gathering. We will then formalize the chosen problems andanalyze existing real data. The course will proceed by possibly enablingthe students to prototype their projects beyond simulation, and using theCORAL lab robots, e.g., the CoBot or NAO robots or drones. The course workwill be a single large project, performed by groups of up to 3 students.The projects will be divided in three phases, due at the end of February,March, and the end of the course. Students are expected to haveprogramming experience in C++ or python.
CS15494 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15494&SEMESTER=S16 | instructors:Touretzky, David prereq:15213 description:Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.
CS15503 | Special Topic: Introduction to Theoretical Cryptography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15503&SEMESTER=S16 | instructors:Guruswami, Venkatesan Blum, Manuel prereq:15251 or 21228 description:This course is aimed as an introduction to theoretical cryptography for graduate and advanced undergraduate students. We will cover formal definitions of security, as well as constructions of some of the most useful and popular primitives in cryptography; pseudorandom generators, encryption, signatures, zero-knowledge, multi-party computation, etc. In addition , we will cover the necessary number-theoretic background.
CS15513 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15513&SEMESTER=S16 | description:This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation.
CS15539 | Independent Study in Computer Science PedagogyThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15539&SEMESTER=S16 | instructors:Kosbie, David description:Missing Course Description - please contact the teaching department.
CS15591 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15591&SEMESTER=S16 | instructors:Cortina, Thomas description:The School of Computer Science offers Independent Study courses, which allow motivated students to work on projects under the supervision of a faculty advisor while receiving academic credit. Independent studies are usually one semester in duration and require prior approval from the faculty member and the School of Computer Science.
CS15592 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15592&SEMESTER=S16 | instructors:Cortina, Thomas description:to be determined
CS15593 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15593&SEMESTER=S16 | instructors:Cortina, Thomas description:To be determined
CS15594 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15594&SEMESTER=S16 | instructors:Cortina, Thomas description:to be determined
CS15599 | SCS Honors Undergraduate Research Thesis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15599&SEMESTER=S16 | instructors:Sutner, Klaus Cortina, Thomas description:Available only to students registered in the CS Senior Research Thesis Program.
CS15602 | Special Topic :Innovating for Underserved Communities: Field Research Basics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15602&SEMESTER=S16 | instructors:Dias, Mary description:The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by an underserved community. This year, the final assignment projects will be chosen in partnership with the students in the class.
CS15603 | Special Topics: Seminar on Innovating for Underserved Communities | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15603&SEMESTER=S16 | instructors:Dias, Mary description:The ultimate goal of this course is to familiarize students with ongoing work in the area of technology innovations for underserved communities. This seminar course will review several key publications and presentations on this topic and teach students the necessary skills to analyze and critique this work in useful ways. Class sessions will be dedicated to discussing reading/viewing assignments and each class discussion will be led by students. Assignments will involve analyzing, writing, and presenting critiques of specific projects.
CS15604 | Immigration Course | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15604&SEMESTER=F15 | instructors:Crary, Karl description:This is a discussion course with enrollment limited to MS in CS  students during their first semester in the program. Students explore  the scope of graduate education in computer science, the tools and  techniques for success, and the resources available to MS in CS  students. Students also explore life after graduation, including  careers in academia, industry, and other organizations, and plan an  academic program that supports their individual goals.
CS15605 | Operating System Design and Implementaion | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15605&SEMESTER=S16 | instructors:Eckhardt, David Mowry, Todd description:Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.  The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware  simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and "team programming" skills (source control,  modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.    Students, especially graduate students, who have not satisfied the prerequisite at  Carnegie Mellon are strongly cautioned - to enter the class you must be able  to write a storage allocator in C, use a debugger, understand 2's-complement  arithmetic, and translate between C and x86 assembly language.  The  instructor may require you to complete a skills assessment exercise before  the first week of the semester in order to remain registered in the class.    Auditing:  this course is usually full, and we generally receive  many more requests to audit than we can accept.  If you wish to  audit, please have your advisor contact us before the semester  begins to discuss your educational goals.
CS15611 | Compiler Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15611&SEMESTER=F15 | instructors:Simmons, Robert description:This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.      Prerequisites:  15213 or 15312
CS15612 | Operating System Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15612&SEMESTER=F15 | instructors:Eckhardt, David prereq:15410 or 15412 or 18347 description:The goal of this class is for students to acquire hands-on experience  with operating-system code as it is developed and deployed in the  real world.  Groups of two to four students will select, build,  install, and become familiar with an open-source operating system  project; propose a significant extension or upgrade to that project;  and develop a production-quality implementation meeting the coding  standards of that project.  Unless infeasible, the results will be  submitted to the project for inclusion in the code base.    Variations on this theme are possible at the discretion of the  instructor.  For example, it may be possible to work within the  context of a non-operating-system software infrastructure project  (window system, web server, or embedded network device kernel) or  to extend a 15-410 student kernel.  In some situations students  may work alone.  Group membership and unit count (9 units versus  12) will be decided by the third week of the semester.    Contributing to a real-world project will involve engaging  in some mixture of messy, potentially open-ended activities  such as: learning a revision control system, writing a  short design document, creating and updating a simple project  plan, participating in an informal code review, synthesizing  scattered information about hardware and software, classifying  and/or reading large amounts of code written by various people  over a long period of time, etc.
CS15615 | Database ApplicationsThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15615&SEMESTER=S16 | instructors:Faloutsos, Christos Pavlo, Andy description:This course covers the fundamental topics for Database Management   Systems: Database System Architectural Principles (ACID properties; data  abstraction; external, conceptual, and internal schemata; data   independence; data definition and data manipulation languages), Data   models (entity-relationship and relational data models; data   structures, integrity constraints, and operations for each data   model; relational query languages: SQL, algebra, calculus), Theory of   database design (functional dependencies; normal forms; dependency   preservation; information loss), Query Optimization (equivalence of   expressions, algebraic manipulation; optimization of selections and   joins), Storage Strategies (indices, B-trees, hashing), Query Processing  (execution of sort, join, and aggregation operators), and  Transaction Processing (recovery and concurrency control).
CS15617 | HOT Compilation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15617&SEMESTER=F15 | instructors:Crary, Karl description:The course covers the implementation of compilers for higher-order, typed languages such as ML and Haskell, and gives an introduction to type-preserving compilation.  Topics covered include type inference, elaboration, CPS conversion, closure conversion, garbage collection, phase splitting, and typed assembly language.
CS15618 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15618&SEMESTER=S16 | instructors:Fatahalian, Kayvon Bryant, Randal description:The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.
CS15619 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15619&SEMESTER=S16 | instructors:Sakr, Majd description:This course gives students an overview of Cloud Computing, which is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. Students will study its enabling technologies, building blocks, and gain hands-on experience through projects utilizing public cloud infrastructures. Cloud computing services are widely adopted by many organizations across domains. The course will introduce the cloud and cover the topics of data centers, software stack, virtualization, software defined networks and storage, cloud storage, and programming models. We will start by discussing the cloud?s motivating factors, benefits, challenges, service models, SLAs and security. We will describe several concepts behind data center design and management, which enable the economic and technological benefits of the cloud paradigm. Next, we will study how CPU, memory and I/O resources, network (SDN) and storage (SDS) are virtualized, and the key role of virtualization to enable the cloud. Subsequently, students will study cloud storage concepts like data distribution, durability, consistency and redundancy. We will discuss distributed file systems, NoSQL databases and object storage using HDFS, CephFS, HBASE, MongoDB, Cassandra, DynamoDB, S3, and Swift as case studies. Finally, students will study the MapReduce, Spark and GraphLab programming models. Students will work with Amazon Web Services and Microsoft Azure, to rent and provision compute resources and then program and deploy applications using these resources. Students will develop and evaluate scaling and load balancing solutions, work with cloud storage systems, and develop applications in several programming paradigms. 15619 students must complete an extra team project which entails designing and implementing a cost- and performance-sensitive web-service for querying big data.
CS15622 | Introduction to Computer Music | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15622&SEMESTER=S16 | instructors:Stiles, Jesse description:Computers are used to synthesize sound, process signals, and  compose music. Personal computers have replaced studios full of sound  recording and processing equipment, completing a revolution that began with  recording and electronics. In this course, students will learn the  fundamentals of digital audio, basic sound synthesis algorithms, and  techniques for digital audio effects and processing. Students will apply  their knowledge in programming assignments using a very high-level  programming language for sound synthesis and composition. In a final  project, students will demonstrate their mastery of tools and techniques  through music composition or by the implementation of a significant  sound-processing technique.
CS15623 | Computer Music Systems and Information Processing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15623&SEMESTER=S16 | instructors:Dannenberg, Roger description:This course presents concepts and techniques for representing and manipulating discrete music information, both in real time and off line. Representations of music as explicitly timed event sequences will be introduced, and students will learn how to build efficient run-time systems for event scheduling, tempo control, and interactive processing. The MIDI protocol is used to capture real-time performance information and to generate sound. The course will also cover non-real-time processing of music data, including Markov models, style recognition, computer accompaniment, query-by-humming, and algorithmic composition. This course is independent of, and complementary to 15-322, Introduction to Computer Music, which focuses on sound synthesis and signal processing.
CS15624 | ST: Foundations of Cyber-Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15624&SEMESTER=S16 | instructors:Platzer, Andre description:Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.  Students in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.
CS15637 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15637&SEMESTER=S16 | instructors:Eppinger, Jeff prereq:15214 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
CS15640 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15640&SEMESTER=S16 | instructors:Satyanarayanan, Mahadev Pillai, Padmanabhan description:The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.
CS15641 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15641&SEMESTER=F15 | instructors:Steenkiste, Peter description:The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.
CS15649 | Seminar Data SystemsThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15649&SEMESTER=S16 | instructors:Gibson, Garth Sakr, Majd description:This course series is designed for and exclusively used by the Systems track of the Masters in Computational Data Science.  Most students in this program will take section A, Seminar 1, in their first semester, section B, Seminar 2,  in their second semester and section C, Capstone, in their third and final semester.  As a series this is equivalent to a 48 unit capstone, spread out over the entire masters program.  The sequence will emphasize learning from state of the art technical talks at the beginning, evolving into recently written paper reading and multi-paper survey reporting, and end with a large project and project report.  The theme of all sections is large scale systems for big data processing, highly available distributed systems, data mining and machine learning, and broadly, data science.
CS15650 | Algorithms and Advanced Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15650&SEMESTER=S16 | instructors:Adamchik, Victor description:The objective of this course is to study general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course will have several programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead.
CS15651 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15651&SEMESTER=S16 | instructors:Sleator, Daniel Gupta, Anupam description:This course is intended for SCS graduate students.  All other graduate students should register for 15-650."   This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.
CS15652 | Foundation Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15652&SEMESTER=S16 | instructors:Harper, Robert description:This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.
CS15657 | Constructive Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15657&SEMESTER=F15 | instructors:Platzer, Andre description:This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes. This course counts as a Fundamentals course in the Computer Science major.
CS15661 | Interaction and Expression using the Pausch Bridge Lighting | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15661&SEMESTER=S16 | instructors:Limauro, Cynthia Shimizu, Evan description:Working in cross-disciplinary teams, students will explore light as art, interactive design and programming using a Pharos lighting control system. Students will explore the use of light and interaction using the actual controls within the Randy Pausch Memorial Bridge. Student teams will develop final projects that will be exhibited on the actual Randy Pausch Memorial Bridge.
CS15662 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15662&SEMESTER=S16 | instructors:Pollard, Nancy description:This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.
CS15663 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15663&SEMESTER=F15 | instructors:Kitani, Kris description:Computational Photography is an emerging new field created by the  convergence of computer graphics, computer vision and  photography. Its role is to overcome the limitations of the  traditional camera by using computational techniques to produce a  richer, more vivid, perhaps more perceptually meaningful  representation of our visual world.    The aim of this advanced undergraduate course is to study ways in  which samples from the real world (images and video) can be used to  generate compelling computer graphics imagery. We will learn how to  acquire, represent, and render scenes from digitized photographs.  Several popular image-based algorithms will be presented, with an  emphasis on using these techniques to build practical systems. This  hands-on emphasis will be reflected in the programming assignments, in  which students will have the opportunity to acquire their own images  of indoor and outdoor scenes and develop the image analysis and  synthesis tools needed to render and view the scenes on the computer.
CS15666 | Computer Game Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15666&SEMESTER=F15 | instructors:Likhachev, Maxim description:The goal of the course is two-fold. The first goal is to teach students   some of the higher-level techniques that are necessary to implement   interesting computer games. In particular, a large emphasis will be on   game AI. The class will also cover such topics as game networking,   scheduling of tasks in computationally intensive games, and game design.   The class will also briefly cover few selected topics such as collision   detection and physically-based animation that are good to know even if one   is developing games using a game engine. The second goal of the class is   to get students familiar with programming games on various platforms using   state-of-the-art game engines. To this end, the course will have a heavy   programming focus. It will have a number of projects requiring students to   apply the learned material to develop games using Unity 3D game engine.   The students will develop games that run on a standalone PC, games that   run on an Android platform and games that work in a multi-user mode.  In addition to learning the material and learning how to use game engines,   the projects will provide students with portfolios of games they have   developed. Such a portfolio is important in getting a job in game   industry.    PREREQUISITE: 15-462, or contact the instructor for permission
CS15667 | Special Topic: Simulation Methods for Animation and Fabrication | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15667&SEMESTER=S16 | instructors:Coros, Stelian description:Physically-based simulation is a core topic in computer graphics, where it is used to create the natural motions necessary for realistic training simulations, movies, video games, and other interactive applications. With the advent of affordable and accessible 3D Printing technologies, physics-based methods are also being adopted to enable the design and fabrication of physical objects. This course will cover a broad range of techniques -- from particle systems to rigid bodies to finite elements -- and applications to animation and digital fabrication. A hands-on approach will be taken, with an emphasis on developing fun, interactive computer programs.
CS15669 | Masters Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15669&SEMESTER=S16 | instructors:Crary, Karl Eckhardt, David description:Missing Course Description - please contact the teaching department.
CS15689 | Independent Study in the Computer Sciences | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15689&SEMESTER=S16 | instructors:Crary, Karl Eckhardt, David description:This course is for Master's student who plan to do an Independent Study in the Master of Science program within the Computer Science Department - SECTION A or enrolled in the ISR Master of Computational Data Science program SECTION B.  You will placed on the waitlist until your advisor gives you permission to proceed.
CS15694 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15694&SEMESTER=S16 | instructors:Touretzky, David prereq:15214 description:Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.
CS15697 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15697&SEMESTER=S16 | instructors:Farbacher, Tracy description:None
CS15712 | Advanced Operating Systems and Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15712&SEMESTER=F15 | instructors:Gibbons, Phillip description:15-712 is a graduate course in operating systems. The goals are:    To understand the state of the art in operating systems and distributed systems, and how and why we got there.    To understand how to engage in systems research.    To investigate novel ideas in systems through a semester-long research project.    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html this link for the most recent schedule updates.  CLASS WILL BEGIN THE WEEK OF SEPTEMBER 7th.
CS15719 | Advanced Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15719&SEMESTER=S16 | instructors:Gibson, Garth Sakr, Majd prereq:15213 or 18213 or 15513 description:Computing in the cloud has emerged as a leading paradigm for cost-effective, scalable, well-managed computing. A Users pay for services provided in a broadly shared, power efficient datacenter, enabling dynamic computing needs to be met without paying for more than is needed. A Actual machines may be virtualized into machine-like services, or more abstract programming platforms, or application-specific services, with the cloud computing infrastructure managing sharing, scheduling, reliability, availability, elasticity, privacy, provisioning and geographic replication.Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15721 | Database Systems: Advanced Database Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15721&SEMESTER=S16 | instructors:Pavlo, Andy prereq:15415 or 15410 or 15615 description:DESCRIPTION:This course will be a hands-on class on the internals of modern database management systems. It will cover the core concepts and fundamentals of the components that are used in both high-performance transaction processing systems (OLTP) and large-scale analytical systems (OLAP). The class will stress both efficiency and correctness of the implementation of these ideas. All class projects will be in the context of real database system. The course should be appropriate for graduate students in software systems and for advanced undergraduates with strong systems programming skills.PREREQUISITES:The prerequisites are (1) 15-415/615 or an equivalent undergraduate class in databases and (2) 15-410 or an equivalent undergraduate class in operating systems. Students that are unable to meet these requirements must otherwise receive permission from the instructor. Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15740 | Computer Architecture | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15740&SEMESTER=F15 | instructors:Goldstein, Seth description:CLASS WILL BEGIN THE WEEK OF SEPTEMBER 7th. Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html this link for the most recent schedule updates.
CS15744 | Computer Networks: Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15744&SEMESTER=S16 | instructors:Seshan, Srinivasan prereq:15441 and 15440 and 15410 description:15-744 is a graduate course in computer networks. The goals are:- To understand the state of the art in network protocols, network architecture, and networked systems.- To understand how to engage in networking research.- To investigate novel ideas in networking through a semester-long research project.The past few years have seen a remarkable growth in the global network infrastructure. The Internet has grown from a research curiosity to something we all take for granted. How does this network infrastructure work? What are the design principles upon which it is based, and how are those principles applied in practice? How can we make the Internet work better today? We will examine these issues and more during the course.PREREQUISITES: The prerequisite will be 15-441/440/410 or an equivalent undergraduate class in Systems.Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15745 | Optimizing Compilers for Modern Architectures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15745&SEMESTER=S16 | instructors:Gibbons, Phillip description:15-745 is a graduate course in optimizing compilers for modern architectures. The learning objectives are:    To understand the salient techniques used in building optimizing compilers that effectively exploit modern processor architectures.    To gain hands-on experience in implementing significant optimizations within the framework of a modern research compiler.    To investigate novel ideas in optimizing compilers through a six-week long research project.
CS15746 | Storage Systems: Storage Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15746&SEMESTER=F15 | instructors:Gibson, Garth Ganger, Gregory prereq:15513 and 15213 and 18213 description:Storage systems are among the most fascinating and the most important parts of computer systems. They often dominate the performance of a system, and their components' inner workings require amazing feats of engineering. At the same time, storage systems hold the crown jewels of most organizations: their information (from source code to Microsoft's software to the sales databases of every e-commerce site). Within the field of computer systems and computer engineering, there is no area whose demand for bright people and better solutions is more robust.   This course will cover the design, implementation, and use of storage systems, from the characteristics and operation of individual storage devices to the OS, database, and networking approaches involved in tying them together and making them useful. Along the way, we will examine several case studies of real systems, demands placed on storage systems by important applications, and impacts of trends and emerging technologies on future storage systems.   For those familiar with 18-316 (Intro. to Data Storage Systems Technology) and 18-517 (Data Storage Systems Design Project): one should consider these courses as distinct and complementary, with neither being a pre-requisite to the other. 18-316 and 18-517 focus on the low-level technologies (magnetics, materials, applied physics, etc.) whereas 746 focuses on storage's incorporation and role in computer systems.   Pre-requisite of 15-213, 15-513, or 18-213 - Grade of B- or better.Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15750 | Graduate Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15750&SEMESTER=S16 | instructors:Miller, Gary description:The course will cover a fairly wide range of topics in algorithm design. Some of the topics will be quite a bit older work from the 1960s to more recent work from this century. We hope to present as many different tools and algorithms as time permits. Most topics will be covered in two phases. In the first we will cover an important design technique by presenting a classic possibly simple application. In the second, an application will be presented that hopefully will be one that is new to most of the class. By the end of the class students are expected to be able to recognize which tool or method to apply to a problem and reasonably proficient at using this tool. We also feel that the student should be able to explain their algorithmic design idea to their piers and supervisors both in writing and orally. This is why we require both written and oral presentations of homework. Please check the preliminary schedule for an idea of the possible topics to be covered. The schedule at this point is mostly a list of topics covered some five years ago. The schedule will be updated with several newer topics. Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15780 | Graduate Artificial Intelligence | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15780&SEMESTER=S16 | instructors:Sandholm, Tuomas Kolter, Jeremy description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15801 | CS PhD Alternative Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15801&SEMESTER=S16 | description:None
CS15802 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15802&SEMESTER=S16 | prereq:(15781 or 10601) and (36705 or 36725) description:Please refer to this link for the most recent schedule updates.
CS15803 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15803&SEMESTER=F15 | description:None
CS15804 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15804&SEMESTER=F15 | description:None
CS15811 | Advanced Topics in Computer Security: Formal Foundations of Software Security | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15811&SEMESTER=S16 | instructors:Fredrikson, Matthew Jia, Limin description:Understanding security requirements of software systems and being able to formally demonstrate that a piece of software is secure is key to eliminating vulnerabilities in computer systems. This course will examine formal approaches to analyzing the security properties of software and constructing secure software systems. Topics include language-based techniques, such as verification using dependent types and constructing software using safe subsets of widely used programming languages; and state space exploration-based (model checking) techniques. Students will learn how to analyze large-scale software systems and construct provably secure software. Students will read advanced research papers and work on a course project in groups of two or three.Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15812 | Programming Language Semantics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15812&SEMESTER=S16 | instructors:Brookes, Stephen description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules16.html this link for the most recent schedule updates.
CS15813 | HOT Compilation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15813&SEMESTER=F15 | instructors:Crary, Karl description:Section H:   The course covers the implementation of compilers for higher-order typed languages such as ML. Topics include type checking, type directed compilation, elaboration, phase splitting, CPS conversion, closure conversion, allocation, and garbage collection.   Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.
CS15814 | Types and Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15814&SEMESTER=F15 | instructors:Harper, Robert description:CLASSES WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 7TH    This is an introductory course on the foundations of programming languages. The central organizing principle of language design is the identification of language features with types. The theory of programming languages, therefore, reduces to the theory of types. Type theory is a comprehensive foundational theory of computation. Type theory has its orgins in proof theory (the theory of human reason) and is closely related to category theory (the general theory of mathematical structures). The tripartite relationship between type theory, proof theory, and category theory is fundamental to the study of programming languages. We will place special emphasis on the propositions-as-types correspondence, in which programs of a type are identified with proofs of the corresponding proposition. (Similar correspondences hold between type theory and category theory (types are objects, programs are maps) and between category theory and proof theory (propositions are objects, proofs are maps), but we shall not consider these in this course.)   Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15819 | Advanced Topics in Programming Languages:: Program Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15819&SEMESTER=S16 | instructors:Legoues, Claire description:SECTION O: http://www.cs.cmu.edu/~clegoues/courses/15-819O-16sp/DESCRIPTION: "This course provides an overview of the state of the art in program analysis as well as recent research in the area.  Topics include program representations, abstract interpretation, type-based and constraint-based analysis, approaches to interprocedural analysis, counterexample-guided abstraction refinement, extended static checking, dynamic analyses (including testing and test input generation) and combinations of dynamic and static analysis.  The course will mix theory and practice; students will formalize analyses and prove them correct, but also implement actual analyses for real programs, and complete a capstone course research project."Section U:  http://www.cs.cmu.edu/~janh/courses/ra16DESCRIPTION:Resource usage---the amount of time, memory, and energy a programrequires for its execution---is one of the central subjects ofcomputer science. Nevertheless, resource usage often does not play acentral role in classical programming-language concepts such asoperational semantics, type systems, and program logics. This coursewill revisit these concepts to model and analyze resource usage ofprograms in a formal and compositional way. An emphasis will be onpractical, type-based techniques that automatically inform programmersabout the resource usage of their code.PREREQUISITES:15-814 Types and Programming LanguagesPlease refer to http://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15821 | Mobile and Pervasive Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15821&SEMESTER=F15 | instructors:Siewiorek, Daniel Satyanarayanan, Mahadev description:This is a course exploring research issues in the emerging fields of mobile computing and its close relative, pervasive computing. Many traditional areas of computer science and computer engineering are impacted by the constraints and demands of mobile and pervasive computing. Examples include network protocols, power management, user interfaces, file access, usability and security. This will be an "advanced" course in the truest sense --- most, if not all, the topics discussed will be ones where there is little consensus in the research community on the best approaches. The course will also offer significant "hand-on" experience in this area.   Each student will have to present and lead the discussion on a number of papers. Students will work in groups of three under the guidance of a mentor on a hands-on project. Each student will also be required to write one of two documents based on an idea in mobile and pervasive computing: (a) a research proposal (similar in spirit to an NSF proposal) or (b) a short business plan for a commercial opportunity. Grading will be based on the quality of the presentations, the project, the proposal or business plan, and brief in-class quizzes on the readings.     Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15 .html for the most recent schedule updates.
CS15824 | Foundations of Cyber Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15824&SEMESTER=S16 | instructors:Platzer, Andre description:Cyber-physical systems (CPSs) combine cyber capabilities (computation and/or communication) with physical capabilities (motion or other physical processes). Cars, aircraft, and robots are prime examples, because they move physically in space in a way that is determined by discrete computerized control algorithms. Designing these algorithms to control CPSs is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding. In this course we will strive to answer the fundamental question posed by Jeannette Wing:        "How can we provide people with cyber-physical systems they can bet their lives on?"Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules16.html this link for the most recent schedule updates.
CS15826 | Multimedia Databases and Datamining: Multimedia DataBases and Datamining | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15826&SEMESTER=S16 | instructors:Faloutsos, Christos description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.  DESCRIPTION    The course covers advanced algorithms for learning, analysis, data management and visualization of large datasets. Topics include indexing for text and DNA databases, searching medical and multimedia databases by content, fundamental signal processing methods, compression, fractals in databases, data mining, privacy and security issues, rule discovery, data visualization, graph mining, stream mining.
CS15827 | Security &amp; Cryptography: Formal Foundations of Software SecurityThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15827&SEMESTER=S16 | description:Classes will not begin until after the CSD Immigration Course    Please refer to this link for the most recent schedule updates.
CS15851 | Computation and Deduction | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15851&SEMESTER=S16 | instructors:Crary, Karl description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates. We will explore the theory of programming languages using deductive systems. We will use such systems to specify, implement, and verify properties of functional and logic programming languages. The deductive approach to the specification ofprogramming languages has become standard practice, and one of the goals of this course is to provide a good working knowledge of how to engineer such language descriptions. Throughout the course we will use Twelf as a uniform meta-language in which we can express specification, implementation, and meta-theory of the object languages we are considering. Animplementation of Twelf and examples will be available on-line for experimentation. PREREQUISITES: There are no formal pre-requisites, but an exposure to functional programming and type systems might be helpful. The course is open to enterprising undergraduates by permission of the instructor.
CS15852 | Computational Geometry | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15852&SEMESTER=F15 | instructors:Miller, Gary description:Classes will not begin until after the CSD Immigration Course    Please refer to this link for the most recent schedule updates.
CS15853 | Algorithms in the Real World: Algorithms in the Real World | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15853&SEMESTER=F15 | instructors:Blelloch, Guy Gupta, Anupam description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates. Class will not begin until the week of September 7th.
CS15855 | An Introduction to Computational Complexity Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15855&SEMESTER=F15 | instructors:Guruswami, Venkatesan description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.  Class will not begin until the week of September 7th.
CS15857 | Performance Modeling: Analytical Performance Modeling of Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15857&SEMESTER=F15 | instructors:Harchol-Balter, Mor description:Classes will not begin until the week of September 7th. Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.  In designing computer systems one is usually constrained by certain performance requirements and limitations. For example, one might need to guarantee a response time SLA or certain throughput requirement, while at the same time staying within a power budget or cost budget. On the other hand, one often has many choices: One fast disk, or two slow ones? More memory, or a faster processor? A fair scheduler or one that minimizes mean response time? For multi-server systems, one can choose from a wide array of load balancing policies, a wide array of migration policies, capacity provisioning schemes, power management policies ... The possibilities are endless. The best choices are often counter-intuitive. Ideally, one would like to have answers to these questions before investing the time and money to build a system. This class will introduce students to analytic stochastic modeling with the aim of answering the above questions.    Students should have a strong background in probability before embarking on this class.   If you are worried about your probability background, please work through all the examples and exercises in Chpt 3 of the class textbook.
CS15859 | Special Topics in Theory:: Graduate Cryptotheory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15859&SEMESTER=S16 | instructors:Guruswami, Venkatesan Blum, Manuel description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15862 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15862&SEMESTER=F15 | instructors:Kitani, Kris description:Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15869 | Special Topics in Graphics:: Physically Based Character AnimationThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15869&SEMESTER=S16 | instructors:Pollard, Nancy description:Section B:DESCRIPTION:This course will explore research topics in physically based character animation, where the goal is to obtain a character performance that appears both natural and physically plausible. In particular, we will investigate how the physical properties of a character such as range of motion, weight distribution, and level of coordination constrain and suggest plausible motions for that character. We will explore theory and advances in motion controllers, strengths and limitations of motion optimization algorithms, opportunities for fast physics algorithms for interactive applications, the nature of natural motion and aspects of motion style. In addition to computer graphics literature, we will search biomechanics, human motor control, and evolutionary biology literature for insights obtained from these fields. The course should be appropriate for graduate students with some computer graphics and / or robotics experience and for advanced undergraduates who have taken 15-462 or equivalent.  Section J: DESCRIPTION: The world around us is comprised of three-dimensional geometry: from the cars we drive and the clothes we wear, to the food we eat and the organs in our bodies.  To a large extent, our ability to make sense of the world is therefore limited by our capacity to design, process, and analyze geometric data.  The field of discrete differential geometry (DDG) applies ideas from smooth differential geometry to computational algorithms for analyzing and manipulating real-world geometric data.  This course serves as a first course on differential geometry that treats both smooth and discrete objects from a single unified point of view.  Emphasis will be on both rigorous analysis and real-world implementation of numerical algorithms.Prerequisites: linear algebra, vector calculus.Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15874 | Special Topics: Computational Neuroscience: Machine Learning from Neural Cortical Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15874&SEMESTER=S16 | instructors:Lee, Tai-Sing description:DESCRIPTION: In the last few years, deep learning methods based on convolutional neural networks have produced state-of-the-art performance in object and speech recognition. These neural networks have also been found to provide a reasonable approximation for the neural representations in the primate visual systems. Yet, real biological neural networks are far more intricate and complex than the current neural networks. For example, only 5% of the synapses of a neuron in the real network in the visual cortex listen to bottom-up input signals yet current neural networks are primarily concerned with feed-forward computation. What are the functions of the other 95% of the synapses of a neuron? What could be the computational roles of the recurrent connections in the real biological circuits? What other learning rules are known or implementable in the real circuits? Can we develop new computational vision models and machine learning techniques from our knowledge of the cortical neural circuits? We will study current relevant machine learning, computer vision and biological papers to explore the answers to these questions. Students of all levels, from undergraduates to Ph.D. students are welcome, though priority will be given to more senior students. The course will involve paper presentation and discussion, research term projects by students, and lecture presentation by professors. Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15883 | Computational Models of Neural Systems: Computational Models of Neural Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15883&SEMESTER=F15 | instructors:Touretzky, David description:This course is an in-depth study of information processing in real neural systems from a computer science perspective. We will examine several brain areas, such as the hippocampus and cerebellum, where processing is sufficiently well understood that it can be discussed in terms of specific representations and algorithms. We will focus primarily on computer models of these systems, after establishing the necessary anatomical, physiological, and psychophysical context. There will be some neuroscience tutorial lectures for those with no prior background in this area.     Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15889 | Advanced Topics in Artificial Intelligence: Real Life Reinforcement Learning | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15889&SEMESTER=F15 | instructors:Brunskill, Emma description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef15.html for the most recent schedule updates.
CS15891 | V-Unit in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15891&SEMESTER=S16 | instructors:Dias, Mary Veloso, Maria Manuela description:Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15892 | Foundations of Electronic Marketplaces: Foundations of Electornic Marketplaces | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15892&SEMESTER=F15 | instructors:Sandholm, Tuomas description:Classes will not begin until after the CSD Immigration Course    CS 15-892: Foundations of Electronic Marketplaces    M-W 10:30-11:50 am in GHC 4101.  First lecture is on September th.    Summary: The course covers classic and state-of-the-art results on computational and game-theoretic questions related to electronic marketplaces.    Abstract: This PhD-level course covers classic and state-of-the-art results on computational and game-theoretic questions related to electronic marketplaces.  We will start with classic and recent results in mechanism design.  We will then cover integer programming algorithms for scalable market clearing.  Further topics include expressiveness in mechanisms, preference elicitation from multiple parties, multi-stage mechanisms, communication complexity, automated mechanism design, mechanism design for computationally limited agents, online (i.e., dynamic) mechanisms, and revenue maximization techniques. Applications discussed vary from year to year, and may include combinatorial auctions, sponsored search, display advertising markets, kidney exchange, prediction markets, and automated market making. Instructor: Professor Tuomas Sandholm    For a detailed description of the previous offering of the course, see   http://www.cs.cmu.edu/~sandholm/cs15-892F13/cs15-892.htm    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html for the most recent schedule updates.
CS15896 | Truth, Justice, and Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15896&SEMESTER=S16 | instructors:Procaccia, Ariel description:Truth, Justice, and Algorithms is an interdisciplinary course that covers selected theoretical topics at the interface of computer science and economics.The course's topics include: computational social choice, e.g., voting rules as maximum likelihood estimators, the axiomatic approach to ranking systems and crowdsourcing, manipulation of elections and ways to circumvent it; cooperative games, focusing on solution concepts such as the core and the Shapley value, and their computation; fair division algorithms for allocating divisible and indivisible goods, and approximate notions of fairness; online matching algorithms (competitive analysis, not dating) and kidney exchange; noncooperative games, including Nash equilibrium and correlated equilibrium, their computation, connections to learning theory, Stackelberg security games, and the price of anarchy in congestion and routing games; and topics in social networks such as the diffusion of technologies and influence maximization. Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html this link for the most recent schedule updates.
CS15897 | Advanced Topics in Parallel Computing: | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15897&SEMESTER=S16 | instructors:Acar, Umut description:Section A: In this special topics course on parallel computing, the students will  learn about the foundations of parallel computing and complete a  research project.  The course will cover both theory and  practice. The topics covered will include basic parallel algorithms  for sequences (e.g., mapping, reductions), trees (e.g., tree  contraction), and graphs (graph search, connectivity, graph  contraction) as well as scheduling algorithms (e.g., work stealing)  for mapping parallel computation to hardware for optimal efficiency  and performance.  There will be one midterm, several assignments  (involving programming), and one project; the project will account for  50% of the grade.    ** Project Ideas **    The project can be theoretical or practical.  The ideal project would  be one that adds parallelism to the students' current research. For  example, if the student does research in a field such as  algorithms/graphics/robotics and he or she can  design/analyze/implement a parallel algorithm (possibly for an open  problem); if the student does research on a field such as programming  languages or databases, she or he can design/implement language/query  support for parallelism; if the student does research on machine  learning, he or she can develop a framework for performing approximate  inference in parallel.  Projects can be done individually or in groups  and will lead to a small paper. We envision the students in the class  to review other project papers (as in a program committee) and provide  feedback to the authors.Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules16.html for the most recent schedule updates.
CS15990 | Computer Science Colloquium | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15990&SEMESTER=S16 | description:None
CS15996 | Immigration Course in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15996&SEMESTER=F15 | instructors:Mowry, Todd description:None
CS15997 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15997&SEMESTER=S16 | description:None
CS15998 | Practicum in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15998&SEMESTER=S16 | description:None
