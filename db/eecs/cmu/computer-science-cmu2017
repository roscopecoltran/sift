CS15050 | Study Abroad | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15050&SEMESTER=S17 | instructors:Cortina, Thomas description:Students who are interested in studying abroad should first contact the Office of International Education. More information on Study Abroad is available on OIEs Study Abroad page and at the CS Undergraduate Office.
CS15051 | Discrete Math Primer | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15051&SEMESTER=F16 | instructors:Sutner, Klaus description:DMP is an online course that introduces students to three foundational topics in mathematics: logic, sets and functions.  The course differs from traditional counterparts in its strong and consistent emphasis on computational aspects.  This approach is particularly suitable for students who are interested in the computational universe, and not just in classical mathematics.  Each of the three modules in DMP ends in a checkpoint, an assessment that helps students evaluate their understanding of the material.  Incoming undergraduate computer science majors are encouraged to take this online course prior to arrival on campus. Additionally, high school students contemplating a computer science or mathematics major may find this course useful.    The course uses Carnegie Mellons OLI system as a delivery platform.
CS15075 | Computer Science Co-Op | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15075&SEMESTER=S17 | instructors:Cortina, Thomas description:This course is meant for CS undergraduate students with a full-time internship that encompasses a summer and a contiguous semester, either Spring-Summer or Summer-Fall who wish to have this recorded on their academic transcript. Units posted for this course do not count toward any requirement for the CS undergraduate degree including free elective units. This course is not available to international students; consult with the Office for International Education for more information.
CS15090 | Computer Science Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15090&SEMESTER=S17 | instructors:Cortina, Thomas description:This course is for Computer Science students who wish to have an  internship experience as part of their curriculum. Students are required  to write a one-page summary statement prior to registration that  explains how their internship connects with their CS curriculum,  specifically on how it uses material they have learned as well as  prepares them for future courses. Near the end of the internship,  students will be required to submit a reflection paper that describes  the work they did in more detail, including lessons learned about the  work experience and how they utilized their CS education to work  effectively. International students should consult with the Office of  International Education for appropriate paperwork and additional  requirements before registration. Units earned count toward the total  required units necessary for degree completion; students should speak  with an academic advisor for details. This course may be taken at most 3  times for a total of 9 units maximum. Students normally register for  this course for use during the summer semester.
CS15104 | Introduction to Computing for Creative Practice | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15104&SEMESTER=F16 | instructors:Dannenberg, Roger description:[IDeATe portal course] An introduction to fundamental computing principles and programming techniques for creative cultural practices, with special consideration to applications in music, design and the visual arts. Intended for students with little to no prior programming experience, the course develops skills and understanding of text-based programming in a procedural style, including idioms of sequencing, selection, iteration, and recursion. Topics include data organization (arrays, files, trees), interfaces and abstraction (modular software design, using sensor data and software libraries), basic algorithms (searching and sorting), and computational principles (randomness, concurrency, complexity). Intended for students following an IDEATE concentration or minor who have not taken 15-112.
CS15110 | Principles of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15110&SEMESTER=S17 | instructors:Reid-Miller, Margaret Stehlik, Mark description:A course in fundamental computing principles for students with minimal or no  computing background. Programming constructs: sequencing, selection,  iteration, and recursion. Data organization: arrays and lists. Use of  abstraction in computing: data representation, computer organization,  computer networks, functional decomposition, and application programming  interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems  based on complexity, non-computable functions, and using heuristics to  find reasonable solutions to complex problems. Social, ethical and legal  issues associated with the development of new computational artifacts will  also be discussed.
CS15112 | Fundamentals of Programming and Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15112&SEMESTER=S17 | instructors:Bouamor, Houda description:A technical introduction to the fundamentals of programming with an emphasis  on producing clear, robust, and reasonably efficient code using top-down  design, informal analysis, and effective testing and debugging. Starting  from first principles, we will cover a large subset of the Python  programming language, including its standard libraries and programming  paradigms.  We will also target numerous deployment scenarios, including  standalone programs, shell scripts, and web-based applications.  This course assumes no prior programming experience. Even so, it is a  fast-paced and rigorous preparation for 15-122.  Students seeking a more  gentle introduction to computer science should consider first taking 15-110.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.
CS15121 | Introduction to Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15121&SEMESTER=F16 | instructors:Mccarthy, Michael prereq:15112 description:A continuation of the process of program design and analysis for  students with some prior programming experience (functions, loops, and  arrays, not necessarily in Java). The course reinforces object-oriented  programming techniques in Java and covers data aggregates, data  structures (e.g., linked lists, stacks, queues, trees, and graphs), and  an introduction to the analysis of algorithms that operate on those data  structures.  Pre-req: 15-112 or placement
CS15122 | Principles of Imperative Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15122&SEMESTER=S17 | instructors:Cervesato, Iliano Wright, Hyrum prereq:15112 description:For students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs.  Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms.  Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210.  NOTE: students must achieve a C or better in order to use  this course to satisfy the pre-requisite for any subsequent Computer Science course.
CS15128 | Freshman Immigration Course | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15128&SEMESTER=F16 | instructors:Carrasquel, Jacobo description:The Freshman Immigration Course is taken by first-semester Computer Science majors on the Pittsburgh campus. The course is designed to acquaint incoming majors with computer science at CMU. Talks range from historical perspectives in the field to descriptions of the cutting edge research being conducted in the School of Computer Science. Enrollment is limited to SCS Freshmen ONLY.
CS15129 | Freshman Immigration II | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15129&SEMESTER=F16 | instructors:Harras, Khaled description:This course is ONLY offered at Carnegie Mellon in Qatar.    Students and instructors will solve different problems each week by searching the Web and other likely places for answers. The problems will be submitted by other faculty who will grade the quality of the answers. Students will learn strategies and techniques for finding information on the Web more efficiently; learn when to start with a search engine, a subject-oriented directory, or other tools; explore and practice using advanced search syntax for major search engines; experience specialized search engines for images, sound, multimedia, newsgroups, and discussion lists as well as subject-specific search engines; discover valuable resources to help keep you up-to-date in this fast-changing environment.
CS15131 | Great Practical Ideas for Computer Scientists | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15131&SEMESTER=F16 | instructors:Carrasquel, Jacobo description:THIS COURSE IS OPEN TO CS FRESHMAN ONLY. Throughout your education as a Computer Scientist at Carnegie Mellon, you will take courses on programming, theoretical ideas, logic, systems, etc. As you progress, you will be expected to pick up the so-called tools of the trade. This course is intended to help you learn what you need to know in a friendly, low-stress, high-support way. We will discuss UNIX, LaTeX, debugging and many other essential tools. Laptop required. (Laptops will be available for those without their own laptops.)
CS15150 | Principles of Functional Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15150&SEMESTER=S17 | instructors:Erdmann, Michael Kaynar, Zeliha Dilsun prereq:(21127 or 15151) and (15112) description:An introduction to programming based on a functional model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.
CS15151 | Mathematical Foundations for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15151&SEMESTER=F16 | instructors:Mackey, John description:This course is offered to incoming Computer Science freshmen and focuses on the fundamental concepts in Mathematics that are of particular interest to Computer Science such as logic, sets,induction, functions, and combinatorics. These topics are used as a context in which students learn to formalize arguments using the methods of mathematical proof.  This course uses experimentation and collaboration as ways to gain better understanding of the material.  Open to CS freshmen only. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.
CS15190 | Topics in Intermediate Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15190&SEMESTER=S17 | instructors:Kosbie, David Andersen, David description:This three-credit extension of 15-110 is open to current 15-110 students by  invitation of their instructor only. The seminar meetings examine  interesting and challenging topics in programming and computer science that  are accessible to students after half a semester of 15-110.
CS15210 | Parallel and Sequential Data Structures and Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15210&SEMESTER=S17 | instructors:Oflazer, Kemal prereq:15122 and 15150 description:Teaches students about how to design, analyze, and program algorithms and data structures.  The course emphasizes parallel algorithms and analysis, and how sequential algorithms can be considered a special case.  The course goes into more theoretical content on algorithm analysis than 15-122 and 15-150 while still including a significant programming component and covering a variety of practical applications such as problems in data analysis, graphics, text processing, and the computational sciences.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer  Science course.
CS15213 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15213&SEMESTER=S17 | instructors:Goldstein, Seth Franchetti, Franz prereq:15122 description:This course provides a programmers view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE FOR GRADUATE STUDENTS: This course is not open to graduate students beginning Spring 2015. Graduate students must register for 15-513 instead.
CS15214 | Principles of Software Construction: Objects, Design, and Concurrency | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15214&SEMESTER=S17 | instructors:Kastner, Christian Vasilescu, Bogdan prereq:(15121 or 15122) and (21127 or 15151) description:Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, program structures, and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object oriented programming, (3) static and dynamic analysis for programs, and (4) concurrent and distributed software. Student assignments involve engagement with complex software such as distributed massively multi-player game systems and frameworks for graphical user interaction.
CS15251 | Great Theoretical Ideas in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15251&SEMESTER=S17 | instructors:Ada, Anil Haeupler, Bernhard prereq:(15122 or 15150) and (21127 or 15151) description:This course is about how to use theoretical ideas to formulate and solve problems in computer science. It integrates mathematical material with general problem solving techniques and computer science applications. Examples are drawn from algorithms, complexity theory, game theory, probability theory, graph theory, automata theory, algebra, cryptography, and combinatorics. Assignments involve both mathematical proofs and programming.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.
CS15252 | More Great Ideas in Theoretical Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15252&SEMESTER=S17 | instructors:Ada, Anil O'Donnell, Ryan Haeupler, Bernhard prereq:21127 or 15151 or 21128 description:This course is intended for students who are taking 15-251 and would like more intensive exposure to theoretical computer science. The goal is to bring interested students closer to the research frontier. The class meets once a week for a lecture and the students are expected to solve a number of homework problems during the course of the semester. The work done in 15-252 does not replace any of the requirements of 15-251. Having achieved a grade of A in 15-151/21-127 is recommended.
CS15291 | Special Topic: Applied Computational Intelligence Lab | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15291&SEMESTER=F16 | instructors:Black, Alan Gershman, Anatole prereq:21127 and 15122 description:What would an intelligent picture on the wall do? What if it could see and hear you? What should it say if it could talk? What if your pantry, wardrobe or medicine cabinet could sense, think and act? What should they do and say? What should your cell phone be saying to you? These are not whimsical or theoretical questions...they inevitably arise as ordinary everyday objects around us acquire the ability to sense changes in their environment, think about their implications, and act in pursuit of their goals. These objects are connected to the web and become conduits for services, erasing the distinction between products and services. The ability to invent and build smart products/services is becoming a key skill in the new technology-driven services economy.    The focus of the course will be on building ordinary objects that can sense, think and act in the real world and on exploring the implications of these capabilities. Students will select their own project and by the end of the semester will create a working prototype that will be exhibited in a public place. Prizes will be offered for the most creative projects. In the course of their projects, students will learn how to use state-of-the-art tools for:    Object detection using video cameras, microphones and other sensors  Movement and gesture detection  Speech recognition and generation    Reasoning and planning:  While the course organizers have many ideas for specific projects, students will be encouraged to design their own projects. Students are expected to work in small groups on their own time and receive faculty advice as needed. There will be weekly meetings of the whole class.
CS15292 | Special Topic: History of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15292&SEMESTER=S17 | instructors:Cortina, Thomas prereq:(76101) and (15110 or 15112 or 15122 or 15150) description:This course traces the history of computational devices, pioneers and principles from the early ages through the present. Topics include early computational devices, mechanical computation in the 19th century, events that led to electronic computing advances in the 20th century, the advent of personal computing and the Internet, and the social, legal and ethical impact of modern computational artifacts. This course also includes a history of programming languages, operating systems, processors and computing platforms. Students should have an introductory exposure to programming prior to taking this course.
CS15294 | Special Topic: Rapid Prototyping Technologies | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15294&SEMESTER=F16 | instructors:Touretzky, David prereq:15104 or 15112 description:This mini-course introduces students to rapid prototyping technologies with a focus on laser cutting and 3D printing.  The course has three components: 1) A survey of rapid prototyping and additive manufacturing technologies, the maker and open source movements, and societal impacts of these technologies; 2) An introduction to the computer science behind these technologies: CAD tools, file formats, slicing algorithms; 3) Hands-on experience with SolidWorks, laser cutting, and 3D printing, culminating in student projects (e.g. artistic creations, functional objects, replicas of famous calculating machines, etc.). Please note that there will be a usage/materials fee for this course.
CS15295 | Competition Programming and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15295&SEMESTER=S17 | instructors:Sleator, Daniel prereq:15122 description:Each year, Carnegie Mellon fields two teams for participation in the ACM-ICPC Regional Programming Contest. During many recent years, one of those teams has earned the right to represent Carnegie Mellon at the ACM-ICPC World Finals.  This course is a vehicle for those who consistently and rigorously train in preparation for the contests to earn course credit for their effort and achievement.  Preparation involves the study of algorithms, the practice of programming and debugging, the development of test sets, and the growth of team, communication, and problem solving skills.  Neither the course grade nor the number of units earned are dependent on ranking in any contest.  Students are not required to earn course credit to participate in practices or to compete in ACM-ICPC events.
CS15296 | Special Topic: Images of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15296&SEMESTER=S17 | instructors:Frieze, Carol prereq:76101 description:In this research and action based course we will explore computing from a cultural perspective. We will reflect on some issues often taken for granted e.g. are our attitudes to computing generalizable or culturally specific? How are computing and its workforce perceived and represented in US culture and in cultures from around the world? In particular we will be examining how images of the field might affect public attitudes, access to resources and understanding of computer science. Representations of the field take on particular significance in light of US government projections: Employment of computer and information technology occupations is projected to grow 12 percent from 2014 to 2024, faster than the average for all occupations [U.S. Bureau of Labor Statistics, 2015].  This course is aimed primarily at students who are interested in exploring some of the broad issues of computer science and its cultural context. Students will gain experience in teamwork, teaching and presenting. We will use academic papers, web sites, group discussion/debate and popular media. Findings from our investigations will inspire the action component in which student teams develop and implement an outreach presentation aimed at re-presenting the exciting field of computer science with broad appeal in mind.
CS15300 | Research and Innovation in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15300&SEMESTER=F16 | instructors:Mowry, Todd Aldrich, Jonathan prereq:15251 and 76101 and 15210 and 15213 description:This Fall course is the first part of a two-course sequence that is designed to help prepare students to invent the future state-of-the-art in the field of computer science. Course topics will include the following: an overview of important things to know about how research and innovation works in the field of computer science; a survey of the current cutting- edge of computer science research, both here at Carnegie Mellon and elsewhere; critical thinking skills when reading research publications that disagree with each other; strategies for coping with open-ended problems; and technical communication skills for computer scientists. Students will also match up with a faculty mentor for a potential Technology Innovation Project (to be performed in the Spring), put together a detailed plan of attack for that project, and start to get up to speed (including background reading, etc.). This course can be used to satisfy the Technical Communications requirement for the CS major.
CS15312 | Foundations of Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15312&SEMESTER=S17 | instructors:Harper, Robert Hoffmann, Jan prereq:15210 and 15251 description:This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.
CS15313 | Foundations of Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15313&SEMESTER=F16 | instructors:Le Goues, Claire Kastner, Christian prereq:15214 description:Students gain exposure to the fundamentals of modern software  engineering.  This includes both core CS technical knowledge and  the means by which this knowledge can be applied in the practical  engineering of complex software.  Topics related to software  artifacts include design models, patterns, coding, static and  dynamic analysis, testing and inspection, measurement, and  software architecture and frameworks.  Topics related to software  process include modeling, requirements engineering, process models  and evaluation, team development, and supply chain issues  including outsourcing and open source.  This course has a strong  technical focus, and will include both written and programming  assignments.  Students will get experience with modern software  engineering tools.
CS15316 | Software Foundations of Security and Privacy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15316&SEMESTER=S17 | instructors:Yang, Jean Fredrikson, Matthew prereq:15213 description:Security and privacy issues in computer systems continue to be a pervasive issue in technology and society. Understanding the security and privacy needs of software, and being able to rigorously demonstrate that those needs are met, is key to eliminating vulnerabilities that cause these issues. Students who take this course will learn the principles needed to make these assurances about software, and some of the key strategies used to make sure that they are correctly implemented in practice. Topics include: policy models and mechanisms for confidentiality, integrity, and availability, language-based techniques for detecting and preventing security threats, mechanisms for enforcing privacy guarantees, and the interaction between software and underlying systems that can give rise to practical security threats. Students will also gain experience applying many of these techniques to write code that is secure by construction.
CS15317 | Constructive Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15317&SEMESTER=S17 | instructors:Reis, Giselle prereq:15150 description:This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes.
CS15319 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15319&SEMESTER=S17 | instructors:Sakr, Majd prereq:15213 description:This course gives students an overview of Cloud Computing, which is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. Students will study its enabling technologies, building blocks, and gain hands-on experience through projects utilizing public cloud infrastructures.  Cloud computing services are widely adopted by many organizations across domains.  The course will introduce the cloud and cover the topics of data centers, software stack, virtualization, software defined networks and storage, cloud storage, and programming models. We will start by discussing the clouds motivating factors, benefits, challenges, service models, SLAs and security. We will describe several concepts behind data center design and management, which enable the economic and technological benefits of the cloud paradigm. Next, we will study how CPU, memory and I/O resources, network (SDN) and storage (SDS) are virtualized, and the key role of virtualization to enable the cloud. Subsequently, students will study cloud storage concepts like data distribution, durability, consistency and redundancy. We will discuss distributed file systems, NoSQL databases and object storage using HDFS, CephFS, HBASE, MongoDB, Cassandra, DynamoDB, S3, and Swift as case studies. Finally, students will study the MapReduce, Spark and GraphLab programming models. Students will work with Amazon Web Services and Microsoft Azure, to rent and provision compute resources and then program and deploy applications using these resources. Students will develop and evaluate scaling and load balancing solutions, work with cloud storage systems, and develop applications in several programming paradigms. 15619 students must complete an extra team project which entails designing and implementing a cost- and performance-sensitive web-service for querying big data.
CS15322 | Introduction to Computer Music | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15322&SEMESTER=F16 | instructors:Stiles, Jesse prereq:15112 description:Computers are used to synthesize sound, process signals, and  compose music. Personal computers have replaced studios full of sound  recording and processing equipment, completing a revolution that began with  recording and electronics. In this course, students will learn the  fundamentals of digital audio, basic sound synthesis algorithms, and  techniques for digital audio effects and processing. Students will apply  their knowledge in programming assignments using a very high-level  programming language for sound synthesis and composition. In a final  project, students will demonstrate their mastery of tools and techniques  through music composition or by the implementation of a significant  sound-processing technique.
CS15323 | Computer Music Systems and Information Processing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15323&SEMESTER=S17 | instructors:Dannenberg, Roger prereq:15122 description:This course presents concepts and techniques for representing and manipulating discrete music information, both in real time and off line. Representations of music as explicitly timed event sequences will be introduced, and students will learn how to build efficient run-time systems for event scheduling, tempo control, and interactive processing. The MIDI protocol is used to capture real-time performance information and to generate sound. The course will also cover non-real-time processing of music data, including Markov models, style recognition, computer accompaniment, query-by-humming, and algorithmic composition. This course is independent of, and complementary to 15-322, Introduction to Computer Music, which focuses on sound synthesis and signal processing.
CS15348 | Embedded Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15348&SEMESTER=S17 | instructors:Razak, Saquib prereq:15122 description:This course is offered only at Carnegie Mellons campus in Qatar.  This course covers the broad range of foundational skills that apply across all embedded computer system application areas, from thermostats to self-driving vehicles. The emphasis is at the layer where hardware meets software. Topics include microcontroller hardware, assembly language, embedded C programming, analog I/O, timers, code optimization, interrupts, and concurrency. Real world engineering practices, constraints, and example applications are integrated throughout the course. Weekly hands-on hardware and software experiences with an industry-strength automotive embedded controller are coordinated with the lecture content to reinforce core skills.
CS15349 | Introduction to Computer and Network SecurityThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15349&SEMESTER=F16 | instructors:Harras, Khaled prereq:15122 description:This course is ONLY offered at Carnegie Mellon in Qatar.    This course is meant to offer Computer Science undergraduate students in  their junior or senior year a broad overview of the field of computer  security. Students will learn the basic concepts in computer security  including software vulnerability analysis and defense, networking and  wireless security, applied cryptography, as well as ethical, legal,  social and economic facets of security. Students will also learn the  fundamental methodology for how to design and analyze security critical  systems.
CS15351 | Algorithms and Advanced Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15351&SEMESTER=S17 | instructors:Marcais, Guillaume prereq:15121 or 15122 description:The objective of this course is to study algorithms for general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course may have a few programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead. THIS COURSE IS NOT OPEN TO COMPUTER SCIENCE MAJORS OR MINORS.
CS15359 | Probability and Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15359&SEMESTER=F16 | instructors:Harchol-Balter, Mor prereq:15251 and 21259 and 21241 description:Probability theory has become indispensable in computer science.  In  areas such as artificial intelligence and computer science theory,  probabilistic methods and ideas based on randomization are central.  In other areas such as networks and systems, probability is becoming  an increasingly useful framework for handling uncertainty and modeling  the patterns of data that occur in complex systems.  This course gives  an introduction to probability as it is used in computer science  theory and practice, drawing on applications and current research  developments as motivation and context. Topics include combinatorial  probability and random graphs, heavy tail distributions, concentration  inequalities, various randomized algorithms, sampling random variables  and computer simulation, and Markov chains and their many  applications, from Web search engines to models of network protocols.  The course will assume familiarity with 3-D calculus and linear  algebra.
CS15365 | Experimental Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15365&SEMESTER=S17 | instructors:Hodgins, Jessica Duesing, James prereq:15213 description:[IDeATe course] This class will explore animation from the students perspective with a sense of investigation toward both form and content. Topics in the class will include non-linear narrative, visual music, puppet and non-traditional materials, manipulation of motion and performance capture data, immersive environments.
CS15381 | Artificial Intelligence: Representation and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15381&SEMESTER=S17 | instructors:Waibel, Alexander prereq:15122 description:This course is about the theory and practice of Artificial Intelligence. We will study modern techniques for computers to represent task-relevant information and make intelligent (i.e. satisficing or optimal) decisions towards the achievement of goals. The search and problem solving methods are applicable throughout a large range of industrial, civil, medical, financial, robotic, and information systems.  We will investigate questions about AI systems such as: how to represent knowledge, how to effectively generate appropriate sequences of actions and how to search among alternatives to find optimal or near-optimal solutions.  We will also explore how to deal with uncertainty in the world, how to learn from experience, and how to learn decision rules from data.  We expect that by the end of the course students will have a thorough understanding of the algorithmic foundations of AI, how probability and AI are closely interrelated, and how automated agents learn.  We also expect students to acquire a strong appreciation of the big-picture aspects of developing fully autonomous intelligent agents.  Other lectures will introduce additional aspects of AI, including natural language processing, deep learning, web-based search engines, industrial applications, autonomous robotics, and economic/game-theoretic decision making.
CS15386 | Neural Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15386&SEMESTER=S17 | instructors:Lee, Tai-Sing prereq:21122 and 15112 description:Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.
CS15387 | Computational Perception | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15387&SEMESTER=F16 | instructors:Lee, Tai-Sing prereq:21122 and 21241 and 15112 description:In this course, we will first cover the biological and psychological foundational knowledge of biological perceptual systems, and then apply computational thinking to investigate the principles and mechanisms underlying natural perception. The course will focus on vision this year, but will also touch upon other sensory modalities. You will learn how to reason scientifically and computationally about problems and issues in perception, how to extract the essential computational properties of those abstract ideas, and finally how to convert these into explicit mathematical models and computational algorithms. Topics include perceptual representation and inference, perceptual organization, perceptual constancy, object recognition, learning and scene analysis. Prerequisites: First year college calculus, some basic knowledge of linear algebra and probability and some programming experience are desirable.
CS15388 | Practical Data Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15388&SEMESTER=F16 | instructors:Kolter, Jeremy prereq:15112 description:Data science is the study and practice of how we can extract insight and knowledge from large amounts of data. This course provides a practical introduction to the full stack of data science analysis, including data collection and processing, data visualization and presentation, statistical model building using machine learning, and big data techniques for scaling these methods. Topics covered include: collecting and processing data using relational methods, time series approaches, graph and network models, free text analysis, and spatial geographic methods; analyzing the data using a variety of statistical and machine learning methods include linear and non-linear regression and classification, unsupervised learning and anomaly detection, plus advanced machine learning methods like kernel approaches, boosting, or deep learning; visualizing and presenting data, particularly focusing the case of high-dimensional data; and applying these methods to big data settings, where multiple machines and distributed computation are needed to fully leverage the data.Students will complete weekly programming homework that emphasize practical understanding of the methods described in the course. In addition, students will develop a tutorial on an advanced topic, and will complete a group project that applies these data science techniques to a practical application chosen by the team; these two longer assignments will be done in lieu of a midterm or final.
CS15390 | Entrepreneurship for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15390&SEMESTER=F16 | instructors:Kaigler, William description:This course is designed to develop skills related to entrepreneurship and innovation for non-business undergraduate and graduate students in the School of Computer Science.  The course assumes no background courses in business and is appropriate for those who are interested in bringing innovations to market either through new companies or existing companies.   The course provides an overview of entrepreneurship and innovation, develops an entrepreneurial frame of mind, and provides a framework for learning the rudiments of how to generate ideas.  Students come up with or are presented with potential ideas and learn how to develop these ideas into opportunities, and to explore their potential for becoming viable businesses.  They learn how to do market research, to develop go-to-market strategies, value propositions and to differentiate their products or services from potential competitors.  The focus is on understanding and developing strategies for approaching the key elements of the entrepreneurial process...opportunity, resources and team. The course consists of a balance of lectures, case studies and encounters with entrepreneurs, investors and business professionals.  The students are exposed to financial and intellectual property issues, and encounter a real world perspective on entrepreneurship, innovation and leadership.  The output of the course is a mini-business plan or venture opportunity screening document that can be developed into a business plan in a subsequent course entitled New Venture Creation or through independent study.
CS15394 | Intermediate Rapid Prototyping | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15394&SEMESTER=S17 | instructors:Touretzky, David prereq:15104 or 15112 description:This course covers additional topics in rapid prototyping beyond the content of 15-294.  Example topics include mechanism design, procedural shape generation using Grasshopper, 3D scanning and mesh manipulation, and advanced SolidWorks concepts. The only prerequisite is basic familiarity with SolidWorks, which can be obtained via 15-294, from other CMU courses, or from online tutorials.
CS15400 | Research Practicum in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15400&SEMESTER=S17 | instructors:Mowry, Todd Aldrich, Jonathan prereq:15300 description:This Spring course is the second part of a two-course sequence that is designed to help prepare students to invent the future state-of-the-art in the field of computer science.  Building directly upon 15-300 (the prerequisite for this course), students will conduct a semester-long independent research project, under the guidance of both the course staff and a faculty project mentor.  The course does not meet for lecture or recitations.  Instead, the students will spend their time working on their research projects, and will also meet with course staff on a bi-weekly basis to discuss their progress.  Students will prepare a written report and a poster presentation at the end of the semester to describe what they have accomplished.
CS15410 | Operating System Design and Implementation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15410&SEMESTER=S17 | instructors:Eckhardt, David prereq:15213 description:Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems. The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and team programming skills (source control, modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.  Students, especially graduate students, who have not satisfied the prerequisite at Carnegie Mellon are strongly cautioned - to enter the class you must be able to write a storage allocator in C, use a debugger, understand 2s-complement arithmetic, and translate between C and x86 assembly language.  The instructor may require you to complete a skills assessment exercise before the first week of the semester in order to remain registered in the class.  Auditing:  this course is usually full, and we generally receive many more requests to audit than we can accept.  If you wish to audit, please have your advisor contact us before the semester begins to discuss your educational goals.
CS15411 | Compiler Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15411&SEMESTER=F16 | instructors:Hoffmann, Jan prereq:15213 description:This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.
CS15412 | Operating System PracticumThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15412&SEMESTER=F16 | instructors:Eckhardt, David prereq:15410 description:The goal of this class is for students to acquire hands-on experience with operating-system code as it is developed and deployed in the real world.  Groups of two to four students will select, build, install, and become familiar with an open-source operating system project; propose a significant extension or upgrade to that project; and develop a production-quality implementation meeting the coding standards of that project.  Unless infeasible, the results will be submitted to the project for inclusion in the code base.  Variations on this theme are possible at the discretion of the instructor.  For example, it may be possible to work within the context of a non-operating-system software infrastructure project (window system, web server, or embedded network device kernel) or to extend a 15-410 student kernel.  In some situations students may work alone.  Group membership and unit count (9 units versus 12) will be decided by the third week of the semester.  Contributing to a real-world project will involve engaging in some mixture of messy, potentially open-ended activities such as: learning a revision control system, writing a short design document, creating and updating a simple project plan, participating in an informal code review, synthesizing scattered information about hardware and software, classifying and/or reading large amounts of code written by various people over a long period of time, etc.
CS15413 | Software Engineering Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15413&SEMESTER=S17 | instructors:Rosso-Llopart, Manuel description:This course is a project-based course in which students conduct a semester-long project for a real client in small teams. The project defines real world needs for the client in their company. This is not a lecture-based course; after the first few weeks the course consists primarily of weekly team meetings with the course instructors, with teams making regular presentations on their software development process. Teams will give presentations and deliver documents on topics such as:          risk management          project planning          requirements          architecture          detailed design          quality assurance          final product presentations          reflections on the experience  Evaluation will be based on the in-class presentations, process and project documentation, how well the teams follow software engineering (SE) practices, and the clients satisfaction with the product. Individual grades will be influenced by peer reviews, individual reflection documents, mentor impressions, and presentation performance. Students will leave the course with a firsthand understanding of the software engineering realities that drive SE practices, will have concrete experience with these practices, and will have engaged in active reflection on this experience. They will have teamwork, process, and product skills to support immediate competency in a software engineering organization, along with a deeper understanding that prepares them to evaluate the new processes and techniques they will encounter in the workplace.
CS15414 | Bug Catching: Automated Program Verification and Testing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15414&SEMESTER=F16 | instructors:Fredrikson, Matthew prereq:(15122) and (15251) description:Many CS and ECE students will be developing software and hardware that must be ultra reliable at some point in their careers. Logical errors in such designs can be costly, even life threatening. There have already been a number of well publicized errors like the Intel Pentium floating point error and the Arian 5 crash. In this course we will study tools for finding and preventing logical errors. Three types of tools will be studied: automated theorem proving, state exploration techniques like model checking and tools based on static program analysis. Although students will learn the theoretical basis for such tools, the emphasis will be on actually using them on real examples.  This course can be used to satisfy the Logic  Languages requirement for the Computer Science major.
CS15415 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15415&SEMESTER=F16 | instructors:Faloutsos, Christos Pavlo, Andrew prereq:15210 and 15213 description:This course covers the fundamental topics for Database Management  Systems: Database System Architectural Principles (ACID properties; data abstraction; external, conceptual, and internal schemata; data  independence; data definition and data manipulation languages), Data  models (entity-relationship and relational data models; data  structures, integrity constraints, and operations for each data  model; relational query languages: SQL, algebra, calculus), Theory of  database design (functional dependencies; normal forms; dependency  preservation; information loss), Query Optimization (equivalence of  expressions, algebraic manipulation; optimization of selections and  joins), Storage Strategies (indices, B-trees, hashing), Query Processing (execution of sort, join, and aggregation operators), and Transaction Processing (recovery and concurrency control).
CS15417 | HOT Compilation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15417&SEMESTER=S17 | instructors:Crary, Karl prereq:15312 or 15317 description:The course covers the implementation of compilers for higher-order, typed languages such as ML and Haskell, and gives an introduction to type-preserving compilation.  Topics covered include type inference, elaboration, CPS conversion, closure conversion, garbage collection, phase splitting, and typed assembly language.
CS15418 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15418&SEMESTER=S17 | instructors:Fatahalian, Kayvon Bryant, Randal prereq:15213 description:The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.
CS15421 | Information Security and Privacy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15421&SEMESTER=F16 | instructors:Sadeh, Norman prereq:15112 and 76101 description:The objective of this course is to introduce students to the technologies of Web Commerce, Security and Privacy as well as to related business, policy and usability issues. Content: Over the past 15 years, the Web has become an integral part of our daily life, whether at home or at work. This course provides students with an overview of the technologies and practices associated with Web Security, Privacy and Commerce. In the process, students will learn what it takes to design and develop successful web applications and services, reconciling security, privacy, usability and business considerations. The course is organized around two parts: Part I - Web Security  Privacy Technologies The big picture, gentle introduction to cryptography, digital signatures, key management, authentication, Internet security protocols, certificates  PKI, decentralized trust management, privacy enhancing technologies, electronic payments. Part II - Web Commerce The big picture, Internet marketing  personalization, search engines, B2B and electronic markets, P2P, Web 2.0, Mobile Commerce, social networking. Format: Lectures (including guest lectures), discussions, student presentations, and class projects.  Prerequisites: 15122 or 15211
CS15424 | Foundations of Cyber-Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15424&SEMESTER=S17 | instructors:Platzer, Andre prereq:(15122) and (21122) and (15251 or 21241 or 18202) description:Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.  Students in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.
CS15437 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15437&SEMESTER=S17 | instructors:Eppinger, Jeffrey prereq:15214 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
CS15440 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15440&SEMESTER=S17 | instructors:Satyanarayanan, Mahadev Pillai, Padmanabhan prereq:15213 description:The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.
CS15441 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15441&SEMESTER=S17 | instructors:Harras, Khaled prereq:15213 description:The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.
CS15451 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15451&SEMESTER=S17 | instructors:Sleator, Daniel Gupta, Anupam prereq:15251 and 15210 and 21241 description:This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.
CS15453 | Formal Languages, Automata, and Computability | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15453&SEMESTER=F16 | instructors:Sutner, Klaus prereq:21228 or 15251 description:An introduction to the fundamental ideas and models underlying computing: finite automata, regular sets, pushdown automata, context-free grammars, Turing machines, undecidability, and complexity theory.
CS15455 | Undergraduate Complexity Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15455&SEMESTER=S17 | instructors:O'Donnell, Ryan prereq:15251 description:Complexity theory is the study of how much of a resource (such as time, space, parallelism, or randomness) is required to perform some of the computations that interest us the most. In a standard algorithms course, one concentrates on giving resource efficient methods to solve interesting problems. In this course, we concentrate on techniques that prove or suggest that there are no efficient methods to solve many important problems.  We will develop the theory of various complexity classes, such as P, NP, co-NP, PH, P, PSPACE, NC, AC, L, NL, UP, RP, BPP, IP, and PCP. We will study techniques to classify problems according to our available taxonomy. By developing a subtle pattern of reductions between classes we will suggest an (as yet unproven) picture of how by using limited amounts of various resources, we limit our computational power.
CS15462 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15462&SEMESTER=S17 | instructors:Pollard, Nancy prereq:(15213 and 21240 and 21259) or (15213 and 21259 and 21241) or (18202 and 18213) description:This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.
CS15463 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15463&SEMESTER=F16 | instructors:Kitani, Kris prereq:(15213) and (21241 or 18202) description:Computational Photography is an emerging new field created by the  convergence of computer graphics, computer vision and  photography. Its role is to overcome the limitations of the  traditional camera by using computational techniques to produce a  richer, more vivid, perhaps more perceptually meaningful  representation of our visual world.    The aim of this advanced undergraduate course is to study ways in  which samples from the real world (images and video) can be used to  generate compelling computer graphics imagery. We will learn how to  acquire, represent, and render scenes from digitized photographs.  Several popular image-based algorithms will be presented, with an  emphasis on using these techniques to build practical systems. This  hands-on emphasis will be reflected in the programming assignments, in  which students will have the opportunity to acquire their own images  of indoor and outdoor scenes and develop the image analysis and  synthesis tools needed to render and view the scenes on the computer.
CS15464 | Technical Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15464&SEMESTER=S17 | instructors:Pollard, Nancy prereq:15462 description:This course introduces techniques for computer animation such as keyframing, procedural methods, motion capture, and simulation. The course also includes a brief overview of story-boarding, scene composition, lighting and sound track generation. The second half of the course will explore current research topics in computer animation such as dynamic simulation of flexible and rigid objects,automatically generated control systems, and evolution of behaviors. The course should be appropriate for graduate students in all areas and for advanced undergraduates.
CS15487 | Introduction to Computer &amp; Network Security &amp; Applied Cryptography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15487&SEMESTER=F16 | instructors:Sekar, Vyas prereq:15213 description:This course will introduce students to the fundamentals of computer security and applied cryptography. Topics include software security, networking and wireless security, and applied cryptography. Students will also learn the fundamental methodology for how to design and analyze security critical systems.
CS15489 | Research in Practical Data Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15489&SEMESTER=S17 | instructors:Kolter, Jeremy prereq:15388 description:This course is a research follow-on to 15-388/688 Practical Data Science.  In this course, students will: 1) select an applied topic that can be approached using techniques in data science; 2) collect and build a data set for the topic (ideally one which can be released publicly); 3) apply a variety of analysis methods and algorithms to understand and/or make predictions based upon their data; and 4) develop a short report in the form of a paper with publicly available code.  Students must have previously taken 15-388/688 for credit and received a passing grade.
CS15494 | Cognitive Robotics: The Future of Robot Toys | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15494&SEMESTER=S17 | instructors:Touretzky, David prereq:15122 description:This course will explore the future of robot toys by analyzing and programming Anki Cozmo, a new robot with built-in artificial intelligence algorithms. Como is distinguished from earlier consumer robots by its reliance on vision as the primary sensing mode and its sophisticated use of A.I. Its capabilities include face and object recognition, map building, path planning, and object pushing and stacking. Although marketed as a pre-programmed childrens toy, Cozmos open source Python SDK allows anyone to develop new software for it, which means it can also be used for robotics education and research. The course will cover robot software architecture, human-robot interaction, perception, and planning algorithms for navigation and manipulation. Prior robotics experience is not required, just strong programming skills.
CS15498 | Computational Forensics and Investigative Intelligence: Computational  Forensics and Investigative Intelligence | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15498&SEMESTER=S17 | instructors:Singh, Rita prereq:15122 and 21241 and 36217 description:This course covers the use of computational methods in crime investigation (forensics) and prevention (intelligence). In almost all areas of forensics and intelligence, computational methods continue to aid, and sometimes entirely replace, human expertise in tracking crime. This is desirable since automation can address the problems associated with scale and global crime linkage through diverse data computational tools can potentially overcome and surpass human capabilities for crime investigation. This course is of a cross-disciplinary nature. It amalgamates knowledge from criminology, forensic sciences, computer science, statistics, signal processing, machine learning, AI, psychology, medicine and many other fields.
CS15503 | Special Topic: Introduction to Theoretical Cryptography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15503&SEMESTER=S17 | instructors:Blum, Manuel prereq:15251 or 21228 description:This course is aimed as an introduction to theoretical cryptography for graduate and advanced undergraduate students. We will cover formal definitions of security, as well as constructions of some of the most useful and popular primitives in cryptography; pseudorandom generators, encryption, signatures, zero-knowledge, multi-party computation, etc. In addition , we will cover the necessary number-theoretic background.
CS15513 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15513&SEMESTER=S17 | instructors:Franchetti, Franz Goldstein, Seth description:This course provides a programmers view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation.  You can sign up for 15-513 for either 6 or 12 credits.  The reason there are two options is that you might be taking 15-513 in order to review the material and qualify to take other courses in your program. If this is the case, we expect that the work load for 15-513 will be more like a 6 unit class.  If, on the other hand, you are seeing the material for the first time, then it will be like a 12-unit course for you.  So, you need to decide, possibly in conjunction with your advisor which situation you are in and then sign up for the proper number of units.
CS15591 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15591&SEMESTER=S17 | instructors:Cortina, Thomas description:The School of Computer Science offers Independent Study courses, which allow motivated students to work on projects under the supervision of a faculty advisor while receiving academic credit. Independent studies are usually one semester in duration and require prior approval from the faculty member and the School of Computer Science.
CS15592 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15592&SEMESTER=S17 | instructors:Cortina, Thomas description:to be determined
CS15593 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15593&SEMESTER=S17 | instructors:Cortina, Thomas description:To be determined
CS15594 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15594&SEMESTER=S17 | instructors:Cortina, Thomas description:to be determined
CS15599 | SCS Honors Undergraduate Research Thesis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15599&SEMESTER=S17 | instructors:Blelloch, Guy Cortina, Thomas description:Available only to students registered in the CS Senior Research Thesis Program.
CS15604 | Immigration Course | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15604&SEMESTER=F16 | instructors:Eckhardt, David Crary, Karl description:This is a discussion course with enrollment limited to MS in CS  students during their first semester in the program. Students explore  the scope of graduate education in computer science, the tools and  techniques for success, and the resources available to MS in CS  students. Students also explore life after graduation, including  careers in academia, industry, and other organizations, and plan an  academic program that supports their individual goals.
CS15605 | Operating System Design and Implementaion | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15605&SEMESTER=S17 | instructors:Eckhardt, David description:Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.  The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware  simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and team programming skills (source control,  modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.    Students, especially graduate students, who have not satisfied the prerequisite at  Carnegie Mellon are strongly cautioned - to enter the class you must be able  to write a storage allocator in C, use a debugger, understand 2s-complement  arithmetic, and translate between C and x86 assembly language.  The  instructor may require you to complete a skills assessment exercise before  the first week of the semester in order to remain registered in the class.    Auditing:  this course is usually full, and we generally receive  many more requests to audit than we can accept.  If you wish to  audit, please have your advisor contact us before the semester  begins to discuss your educational goals.
CS15611 | Compiler Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15611&SEMESTER=F16 | instructors:Hoffmann, Jan description:This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.      Prerequisites:  15213 or 15312
CS15612 | Operating System PracticumThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15612&SEMESTER=F16 | instructors:Eckhardt, David prereq:15410 or 15412 or 18347 description:The goal of this class is for students to acquire hands-on experience  with operating-system code as it is developed and deployed in the  real world.  Groups of two to four students will select, build,  install, and become familiar with an open-source operating system  project; propose a significant extension or upgrade to that project;  and develop a production-quality implementation meeting the coding  standards of that project.  Unless infeasible, the results will be  submitted to the project for inclusion in the code base.    Variations on this theme are possible at the discretion of the  instructor.  For example, it may be possible to work within the  context of a non-operating-system software infrastructure project  (window system, web server, or embedded network device kernel) or  to extend a 15-410 student kernel.  In some situations students  may work alone.  Group membership and unit count (9 units versus  12) will be decided by the third week of the semester.    Contributing to a real-world project will involve engaging  in some mixture of messy, potentially open-ended activities  such as: learning a revision control system, writing a  short design document, creating and updating a simple project  plan, participating in an informal code review, synthesizing  scattered information about hardware and software, classifying  and/or reading large amounts of code written by various people  over a long period of time, etc.
CS15614 | Bug Catching: Automated Program Verification and Testing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15614&SEMESTER=F16 | instructors:Fredrikson, Matthew description:Many CS and ECE students will be developing software and hardware that must be ultra reliable at some point in their careers. Logical errors in such designs can be costly, even life threatening. There have already been a number of well publicized errors like the Intel Pentium floating point error and the Arian 5 crash. In this course we will study tools for finding and preventing logical errors. Three types of tools will be studied: automated theorem proving, state exploration techniques like model checking and tools based on static program analysis. Although students will learn the theoretical basis for such tools, the emphasis will be on actually using them on real examples.  This course can be used to satisfy the Logic  Languages requirement for the Computer Science major.
CS15615 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15615&SEMESTER=F16 | instructors:Faloutsos, Christos Pavlo, Andrew description:This course covers the fundamental topics for Database Management   Systems: Database System Architectural Principles (ACID properties; data  abstraction; external, conceptual, and internal schemata; data   independence; data definition and data manipulation languages), Data   models (entity-relationship and relational data models; data   structures, integrity constraints, and operations for each data   model; relational query languages: SQL, algebra, calculus), Theory of   database design (functional dependencies; normal forms; dependency   preservation; information loss), Query Optimization (equivalence of   expressions, algebraic manipulation; optimization of selections and   joins), Storage Strategies (indices, B-trees, hashing), Query Processing  (execution of sort, join, and aggregation operators), and  Transaction Processing (recovery and concurrency control).
CS15617 | HOT Compilation: HOT Compilation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15617&SEMESTER=S17 | instructors:Crary, Karl description:The course covers the implementation of compilers for higher-order, typed languages such as ML and Haskell, and gives an introduction to type-preserving compilation.  Topics covered include type inference, elaboration, CPS conversion, closure conversion, garbage collection, phase splitting, and typed assembly language.
CS15618 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15618&SEMESTER=S17 | instructors:Fatahalian, Kayvon Bryant, Randal description:The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.
CS15619 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15619&SEMESTER=S17 | instructors:Sakr, Majd description:This course gives students an overview of Cloud Computing, which is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. Students will study its enabling technologies, building blocks, and gain hands-on experience through projects utilizing public cloud infrastructures.  Cloud computing services are widely adopted by many organizations across domains.  The course will introduce the cloud and cover the topics of data centers, software stack, virtualization, software defined networks and storage, cloud storage, and programming models. We will start by discussing the clouds motivating factors, benefits, challenges, service models, SLAs and security. We will describe several concepts behind data center design and management, which enable the economic and technological benefits of the cloud paradigm. Next, we will study how CPU, memory and I/O resources, network (SDN) and storage (SDS) are virtualized, and the key role of virtualization to enable the cloud. Subsequently, students will study cloud storage concepts like data distribution, durability, consistency and redundancy. We will discuss distributed file systems, NoSQL databases and object storage using HDFS, CephFS, HBASE, MongoDB, Cassandra, DynamoDB, S3, and Swift as case studies. Finally, students will study the MapReduce, Spark and GraphLab programming models.  Students will work with Amazon Web Services and Microsoft Azure, to rent and provision compute resources and then program and deploy applications using these resources. Students will develop and evaluate scaling and load balancing solutions, work with cloud storage systems, and develop applications in several programming paradigms. 15619 students must complete an extra team project which entails designing and implementing a cost- and performance-sensitive web-service for querying big data.
CS15622 | Introduction to Computer Music | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15622&SEMESTER=F16 | instructors:Stiles, Jesse description:Computers are used to synthesize sound, process signals, and  compose music. Personal computers have replaced studios full of sound  recording and processing equipment, completing a revolution that began with  recording and electronics. In this course, students will learn the  fundamentals of digital audio, basic sound synthesis algorithms, and  techniques for digital audio effects and processing. Students will apply  their knowledge in programming assignments using a very high-level  programming language for sound synthesis and composition. In a final  project, students will demonstrate their mastery of tools and techniques  through music composition or by the implementation of a significant  sound-processing technique.
CS15623 | Computer Music Systems and Information Processing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15623&SEMESTER=S17 | instructors:Dannenberg, Roger description:This course presents concepts and techniques for representing and manipulating discrete music information, both in real time and off line. Representations of music as explicitly timed event sequences will be introduced, and students will learn how to build efficient run-time systems for event scheduling, tempo control, and interactive processing. The MIDI protocol is used to capture real-time performance information and to generate sound. The course will also cover non-real-time processing of music data, including Markov models, style recognition, computer accompaniment, query-by-humming, and algorithmic composition. This course is independent of, and complementary to 15-322, Introduction to Computer Music, which focuses on sound synthesis and signal processing.
CS15624 | ST: Foundations of Cyber-Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15624&SEMESTER=S17 | instructors:Platzer, Andre description:Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.  Students in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.
CS15637 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15637&SEMESTER=S17 | instructors:Eppinger, Jeffrey prereq:15214 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
CS15640 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15640&SEMESTER=S17 | instructors:Satyanarayanan, Mahadev Pillai, Padmanabhan prereq:15213 or 15513 description:The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.
CS15641 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15641&SEMESTER=F16 | instructors:Steenkiste, Peter description:The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.
CS15649 | Seminar Data Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15649&SEMESTER=S17 | instructors:Gibson, Garth Sakr, Majd description:This course series is designed for and exclusively used by the Systems track of the Masters in Computational Data Science.  Most students in this program will take section A, Seminar 1, in their first semester, section B, Seminar 2,  in their second semester and section C, Capstone, in their third and final semester.  As a series this is equivalent to a 48 unit capstone, spread out over the entire masters program.  The sequence will emphasize learning from state of the art technical talks at the beginning, evolving into recently written paper reading and multi-paper survey reporting, and end with a large project and project report.  The theme of all sections is large scale systems for big data processing, highly available distributed systems, data mining and machine learning, and broadly, data science.
CS15650 | Algorithms and Advanced Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15650&SEMESTER=S17 | instructors:Marcais, Guillaume description:The objective of this course is to study general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course will have several programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead.
CS15651 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15651&SEMESTER=S17 | instructors:Sleator, Daniel Gupta, Anupam description:This course is intended for SCS graduate students.  This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.
CS15652 | Foundation Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15652&SEMESTER=S17 | instructors:Harper, Robert Hoffmann, Jan description:This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.
CS15657 | Constructive Logic | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15657&SEMESTER=F16 | instructors:Platzer, Andre description:This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes. This course counts as a Fundamentals course in the Computer Science major.
CS15659 | Probability and Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15659&SEMESTER=F16 | instructors:Harchol-Balter, Mor description:Probability theory has become indispensable in computer science.  In areas such as artificial intelligence and computer science theory, probabilistic methods and ideas based on randomization are central. In other areas such as networks and systems, probability is becoming an increasingly useful framework for handling uncertainty and modeling the patterns of data that occur in complex systems.  This course gives an introduction to probability as it is used in computer science theory and practice, drawing on applications and current research developments as motivation and context. Topics include combinatorial probability and random graphs, heavy tail distributions, concentration inequalities, various randomized algorithms, sampling random variables and computer simulation, and Markov chains and their many applications, from Web search engines to models of network protocols. The course will assume familiarity with 3-D calculus and linear algebra.
CS15661 | Interaction and Expression using the Pausch Bridge Lighting | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15661&SEMESTER=S17 | instructors:Limauro, Cynthia Shimizu, Evan description:Working in cross-disciplinary teams, students will explore light as art, interactive design and programming using a Pharos lighting control system. Students will explore the use of light and interaction using the actual controls within the Randy Pausch Memorial Bridge. Student teams will develop final projects that will be exhibited on the actual Randy Pausch Memorial Bridge.
CS15662 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15662&SEMESTER=S17 | instructors:Pollard, Nancy description:This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.
CS15663 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15663&SEMESTER=F16 | instructors:Kitani, Kris description:Computational Photography is an emerging new field created by the  convergence of computer graphics, computer vision and  photography. Its role is to overcome the limitations of the  traditional camera by using computational techniques to produce a  richer, more vivid, perhaps more perceptually meaningful  representation of our visual world.    The aim of this advanced undergraduate course is to study ways in  which samples from the real world (images and video) can be used to  generate compelling computer graphics imagery. We will learn how to  acquire, represent, and render scenes from digitized photographs.  Several popular image-based algorithms will be presented, with an  emphasis on using these techniques to build practical systems. This  hands-on emphasis will be reflected in the programming assignments, in  which students will have the opportunity to acquire their own images  of indoor and outdoor scenes and develop the image analysis and  synthesis tools needed to render and view the scenes on the computer.
CS15664 | Technical Animation: Technical Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15664&SEMESTER=S17 | instructors:Pollard, Nancy description:This course introduces techniques for computer animation such as keyframing, procedural methods, motion capture, and simulation. The course also includes a brief overview of story-boarding, scene composition, lighting and sound track generation. The second half of the course will explore current research topics in computer animation such as dynamic simulation of flexible and rigid objects,automatically generated control systems, and evolution of behaviors. The course should be appropriate for graduate students in all areas and for advanced undergraduates.
CS15686 | Neural Computation: Neural Computations | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15686&SEMESTER=S17 | instructors:Lee, Tai-Sing prereq:15112 and 21122 description:Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.
CS15687 | Research in Practical Data Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15687&SEMESTER=S17 | instructors:Kolter, Jeremy prereq:15688 description:This course is a research follow-on to 15-388/688 Practical Data Science.  In this course, students will: 1) select an applied topic that can be approached using techniques in data science; 2) collect and build a data set for the topic (ideally one which can be released publicly); 3) apply a variety of analysis methods and algorithms to understand and/or make predictions based upon their data; and 4) develop a short report in the form of a paper with publicly available code.  Students must have previously taken 15-388/688 for credit and received a passing grade.
CS15688 | Practical Data Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15688&SEMESTER=F16 | instructors:Kolter, Jeremy description:Data science is the study and practice of how we can extract insight and knowledge from large amounts of data. This course provides a practical introduction to the full stack of data science analysis, including data collection and processing, data visualization and presentation, statistical model building using machine learning, and big data techniques for scaling these methods. Topics covered include: collecting and processing data using relational methods, time series approaches, graph and network models, free text analysis, and spatial geographic methods; analyzing the data using a variety of statistical and machine learning methods include linear and non-linear regression and classification, unsupervised learning and anomaly detection, plus advanced machine learning methods like kernel approaches, boosting, or deep learning; visualizing and presenting data, particularly focusing the case of high-dimensional data; and applying these methods to big data settings, where multiple machines and distributed computation are needed to fully leverage the data.Students will complete weekly programming homework that emphasize practical understanding of the methods described in the course. In addition, students will develop a tutorial on an advanced topic, and will complete a group project that applies these data science techniques to a practical application chosen by the team; these two longer assignments will be done in lieu of a midterm or final.
CS15689 | Independent Study in the Computer Sciences | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15689&SEMESTER=S17 | instructors:Crary, Karl Eckhardt, David description:This course is for Masters student who plan to do an Independent Study in the Master of Science program within the Computer Science Department - SECTION A or enrolled in the ISR Master of Computational Data Science program SECTION B.  You will placed on the waitlist until your advisor gives you permission to proceed.
CS15694 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15694&SEMESTER=S17 | instructors:Touretzky, David prereq:15214 description:Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.  Good Programming Skills Required
CS15697 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15697&SEMESTER=S17 | instructors:Farbacher, Tracy description:None
CS15712 | Advanced Operating Systems and Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15712&SEMESTER=F16 | instructors:Andersen, David description:15-712 is a graduate course in operating systems. The goals are: To understand the state of the art in operating systems and distributed systems, and how and why we got there.    To understand how to engage in systems research.    To investigate novel ideas in systems through a semester-long research project.    Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.  CLASS WILL BEGIN THE WEEK OF SEPTEMBER 5th.
CS15719 | Advanced Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15719&SEMESTER=S17 | instructors:Gibson, Garth Sakr, Majd prereq:15213 or 18213 or 15513 description:Computing in the cloud has emerged as a leading paradigm for cost-effective, scalable, well-managed computing.  Users pay for services provided in a broadly shared, power efficient datacenter, enabling dynamic computing needs to be met without paying for more than is needed.  Actual machines may be virtualized into machine-like services, or more abstract programming platforms, or application-specific services, with the cloud computing infrastructure managing sharing, scheduling, reliability, availability, elasticity, privacy, provisioning and geographic replication.  Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15721 | Database Systems: Advanced Database Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15721&SEMESTER=S17 | instructors:Pavlo, Andrew prereq:15415 or 15410 or 15615 description:DESCRIPTION: This course will be a hands-on class on the internals of modern database management systems. It will cover the core concepts and fundamentals of the components that are used in both high-performance transaction processing systems (OLTP) and large-scale analytical systems (OLAP). The class will stress both efficiency and correctness of the implementation of these ideas. All class projects will be in the context of real database system. The course should be appropriate for graduate students in software systems and for advanced undergraduates with strong systems programming skills.  PREREQUISITES: The prerequisites are (1) 15-415/615 or an equivalent undergraduate class in databases and (2) 15-410 or an equivalent undergraduate class in operating systems. Students that are unable to meet these requirements must otherwise receive permission from the instructor.  Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15740 | Computer Architecture: Computer Architecture | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15740&SEMESTER=S17 | instructors:Beckmann, Nathan description:Please refer to http://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15744 | Computer Networks: Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15744&SEMESTER=S17 | instructors:Seshan, Srinivasan prereq:15440 or 15441 or 15410 description:15-744 is a graduate course in computer networks. The goals are:  - To understand the state of the art in network protocols, network architecture, and networked systems. - To understand how to engage in networking research. - To investigate novel ideas in networking through a semester-long research project.  The past few years have seen a remarkable growth in the global network infrastructure. The Internet has grown from a research curiosity to something we all take for granted. How does this network infrastructure work? What are the design principles upon which it is based, and how are those principles applied in practice? How can we make the Internet work better today? We will examine these issues and more during the course.  PREREQUISITES:  The prerequisite will be 15-441/440/410 or an equivalent undergraduate class in Systems.  Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15745 | Optimizing Compilers for Modern Architectures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15745&SEMESTER=S17 | instructors:Gibbons, Phillip description:15-745 is a graduate course in optimizing compilers for modern architectures. The learning objectives are:      To understand the salient techniques used in building optimizing compilers that effectively exploit modern processor architectures.     To gain hands-on experience in implementing significant optimizations within the framework of a modern research compiler.     To investigate novel ideas in optimizing compilers through a six-week long research project. Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15746 | Storage Systems: Storage Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15746&SEMESTER=F16 | instructors:Ganger, Gregory prereq:15513 and 15213 and 18213 description:Storage systems are among the most fascinating and the most important parts of computer systems. They often dominate the performance of a system, and their components inner workings require amazing feats of engineering. At the same time, storage systems hold the crown jewels of most organizations: their information (from source code to Microsofts software to the sales databases of every e-commerce site). Within the field of computer systems and computer engineering, there is no area whose demand for bright people and better solutions is more robust.   This course will cover the design, implementation, and use of storage systems, from the characteristics and operation of individual storage devices to the OS, database, and networking approaches involved in tying them together and making them useful. Along the way, we will examine several case studies of real systems, demands placed on storage systems by important applications, and impacts of trends and emerging technologies on future storage systems.   For those familiar with 18-316 (Intro. to Data Storage Systems Technology) and 18-517 (Data Storage Systems Design Project): one should consider these courses as distinct and complementary, with neither being a pre-requisite to the other. 18-316 and 18-517 focus on the low-level technologies (magnetics, materials, applied physics, etc.) whereas 746 focuses on storages incorporation and role in computer systems.     Pre-requisite of 15-213, 15-513, or 18-213 - Grade of B- or better.  Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.
CS15750 | Graduate Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15750&SEMESTER=S17 | instructors:Miller, Gary Witmer, David description:The course will cover a fairly wide range of topics in algorithm design. Some of the topics will be quite a bit older work from the 1960s to more recent work from this century. We hope to present as many different tools and algorithms as time permits. Most topics will be covered in two phases. In the first we will cover an important design technique by presenting a classic possibly simple application. In the second, an application will be presented that hopefully will be one that is new to most of the class. By the end of the class students are expected to be able to recognize which tool or method to apply to a problem and reasonably proficient at using this tool. We also feel that the student should be able to explain their algorithmic design idea to their peers and supervisors both in writing and orally. This is why we require both written and oral presentations of homework. Please check the preliminary schedule for an idea of the possible topics to be covered. The schedule at this point is mostly a list of topics covered some five years ago. The schedule will be updated with several newer topics.   Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15751 | A Theorist's Toolkit: A Theorist's Toolkit | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15751&SEMESTER=F16 | instructors:O'Donnell, Ryan Guruswami, Venkatesan description:Course description: This course will take a random walk through various mathematical topics that come in handy for theoretical computer science. It is intended mainly for students earlier in their graduate studies (or very strong undergraduates) who want to do theory research. The idea for the course comes from other courses by Arora (2002, 2007), Hstad (2004/05), Kelner (2007, 2009), and Tulsiani (2013).  Prerequisites Students should have a solid undergraduate background in math (e.g., elementary combinatorics, graph theory, discrete probability, basic algebra/calculus) and theoretical computer science (running time analysis, big-O/Omega/Theta, P and NP, basic fundamental algorithms). Mathematical maturity is a must. Prerequisites Students should have a solid undergraduate background in math (e.g., elementary combinatorics, graph theory, discrete probability, basic algebra/calculus) and theoretical computer science (running time analysis, big-O/Omega/Theta, P and NP, basic fundamental algorithms). Mathematical maturity is a must.  https://www.cs.cmu.edu/csd-grad/courseschedulef16.html  CLASSES WILL BEGIN WEEK OF SEPTEMBER 5th.
CS15769 | Visual Computing Systems: Visual Computing Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15769&SEMESTER=F16 | instructors:Fatahalian, Kayvon description:DESCRIPTION: Visual computing tasks such as 2D/3D graphics, image processing, and image understanding are important responsibilities of modern computer systems ranging from sensor-rich smart phones to large data-centers. These workloads demand exceptional system efficiency and this course examines the key ideas, techniques, and challenges associated with the design of parallel (and heterogeneous) systems that serve to accelerate visual computing applications. This course is intended for graduate and advanced undergraduate-level students interested in architecting efficient future graphics, image processing, and computer vision platforms and for students seeking to develop scalable algorithms for these platforms.  Topics covered include the implementation of the camera RAW pipeline, optimizing compilers for image processing, image processing hardware, design of frameworks for DNN evaluation and training, hardware architectures for DNN acceleration, large-scale 3D reconstruction techniques, the design and implementation of real-time 3D graphics pipelines, hardware accelerated ray tracing, and the design of domain-specific languages and compilers for visual computing.  Prerequisites:  There are no prerequisites for SCS Ph.D. students. Undergraduate and masters students must have special permission from the instructor. Permission is typically granted to students that have completed 15-418/618, or can demonstrate command of the fundamentals of parallel programming or computer architecture.   https://www.cs.cmu.edu/csd-grad/courseschedulef16.html  CLASS WILL BEGIN THE WEEK OF SEPTEMBER 5th.
CS15780 | Graduate Artificial Intelligence | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15780&SEMESTER=S17 | instructors:Procaccia, Ariel Kolter, Jeremy description:Please refer to http://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15781 | Artificial Intelligence: Representation and Problem Solving: REPRES&amp;PROB SOLV | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15781&SEMESTER=F16 | instructors:Brunskill, Emma Procaccia, Ariel description:This course is about the theory and practice of Artificial Intelligence. We will study modern techniques for computers to represent task-relevant information and make intelligent (i.e. satisficing or optimal) decisions towards the achievement of goals. The search and problem solving methods are applicable throughout a large range of industrial, civil, medical, financial, robotic, and information systems. We will investigate questions about AI systems such as: how to represent knowledge, how to effectively generate appropriate sequences of actions and how to search among alternatives to find optimal or near-optimal solutions. We will also explore how to deal with uncertainty in the world, how to learn from experience, and how to learn decision rules from data. We expect that by the end of the course students will have a thorough understanding of the algorithmic foundations of AI, how probability and AI are closely interrelated, and how automated agents learn. We also expect students to acquire a strong appreciation of the big-picture aspects of developing fully autonomous intelligent agents. Other lectures will introduce additional aspects of AI, including natural language processing, web-based search engines, industrial applications, autonomous robotics, and economic/game-theoretic decision making.  Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16.html this link for the most recent schedule updates.
CS15801 | CS PhD Alternative Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15801&SEMESTER=S17 | description:None
CS15802 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15802&SEMESTER=S17 | prereq:(15781 or 10601) and (36705 or 36725) description:Please refer to this link for the most recent schedule updates.
CS15803 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15803&SEMESTER=F16 | description:None
CS15804 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15804&SEMESTER=F16 | description:None
CS15811 | Verifying Complex Systems: Verifying Complex Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15811&SEMESTER=S17 | instructors:Parno, Bryan description:As the world increasingly depends on software to control our finances, drive our cars, and manage our medical devices, how can we tell whether that software will be correct, secure, or reliable?  Recent research suggests formal software verification is an increasingly plausible tool for definitively proving properties of real, complex systems code.  In this course, students will learn how to use a variety of tools to verify the correctness, security, and reliability of systems software, how to assess the tradeoffs between such tools, and how to reason about the algorithms underlying them. Students will present, critique, and actively discuss state-of-the-art research papers, complete a small set of assignments, and develop a research project that innovates in the area of systems verification.   This course is open to enterprising Masters and undergraduate students.    Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15812 | Programming Language Semantics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15812&SEMESTER=S17 | instructors:Brookes, Stephen description:Please refer to http://www.cs.cmu.edu/csd-grad/courseschedules17.html this link for the most recent schedule updates.
CS15813 | HOT Compilation: Hot Compilation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15813&SEMESTER=S17 | instructors:Crary, Karl description:Section H:    The course covers the implementation of compilers for higher-order typed languages such as ML. Topics include type checking, type directed compilation, elaboration, phase splitting, CPS conversion, closure conversion, allocation, and garbage collection. The course is disjoint from the standard compilers course (15-411); thus, topics such as parsing and code generation are not covered. Students will implement an ML compiler and runtime system as a term project.  Please refer to http://www.cs.cmu.edu/csd-grad/courseschedules17.html this link for the most recent schedule updates.
CS15814 | Types and Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15814&SEMESTER=F16 | instructors:Crary, Karl description:CLASSES WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 5TH.    The course studies the theory of type systems, with a focus on applications of type systems to practical programming languages. The emphasis is on the mathematical foundations underlying type systems and operational semantics. The course includes a broad survey of the components that make up existing type systems, and also teaches the methodology behind the design of new type systems.   Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.  CLASS WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 5TH.
CS15816 | Advanced Topics in Logic: Substructural Logics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15816&SEMESTER=F16 | instructors:Pfenning, Frank description:This graduate course provides an introduction to substructural logics, such as linear, ordered, affine, bunched, or separation logic, with an emphasis on their applications in computer science. This includes the design and theory of programming constructs for concurrent message-passing computation and techniques for specifying and reasoning about programming languages in the form of substructural operational semantics.  Prerequisites: This is an introductory graduate course with no formal prerequisites, but an exposure to functional programming and type systems may be helpful. Enterprising undergraduates are welcome to attend this course.   Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.  CLASSES WILL BEGIN THE WEEK OF SEPTEMBER 5TH.
CS15819 | Advanced Topics in Programming Languages: Domain-Specific Languages: Research Seminar in Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15819&SEMESTER=F16 | instructors:Yang, Jean description:These days, making your own programming language is all the rage. If Facebook and Apple have them, then we should all have them too. But what does it mean to make a programming language? What does it mean to make a research language? What is a programming language? This seminar aims to answer these questions by providing an overview of the state-of-the-art in domain-specific languages. We begin with a survey of domain-specific languages, from those well-specified in research to those popular in practice, as well as tools and techniques for specifying and implementing domain-specific languages. We then go into more depth for languages for systems programming, security, and biological modelling.  Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.
CS15821 | Mobile and Pervasive Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15821&SEMESTER=F16 | instructors:Siewiorek, Daniel Satyanarayanan, Mahadev description:This is a course exploring research issues in the emerging fields of mobile computing and its close relative, pervasive computing. Many traditional areas of computer science and computer engineering are impacted by the constraints and demands of mobile and pervasive computing. Examples include network protocols, power management, user interfaces, file access, usability and security. This will be an advanced course in the truest sense --- most, if not all, the topics discussed will be ones where there is little consensus in the research community on the best approaches. The course will also offer significant hand-on experience in this area.   Each student will have to present and lead the discussion on a number of papers. Students will work in groups of three under the guidance of a mentor on a hands-on project. Each student will also be required to write one of two documents based on an idea in mobile and pervasive computing: (a) a research proposal (similar in spirit to an NSF proposal) or (b) a short business plan for a commercial opportunity. Grading will be based on the quality of the presentations, the project, the proposal or business plan, and brief in-class quizzes on the readings.       Please refer to http://www.cs.cmu.edu/csd-grad/courseschedulef16 .html for the most recent schedule updates.
CS15824 | Foundations of Cyber Physical Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15824&SEMESTER=S17 | instructors:Platzer, Andre description:Cyber-physical systems (CPSs) combine cyber capabilities (computation and/or communication) with physical capabilities (motion or other physical processes). Cars, aircraft, and robots are prime examples, because they move physically in space in a way that is determined by discrete computerized control algorithms. Designing these algorithms to control CPSs is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding. In this course we will strive to answer the fundamental question posed by Jeannette Wing:          How can we provide people with cyber-physical systems they can bet their lives on?  Please refer to http://www.cs.cmu.edu/csd-grad/courseschedules17.html this link for the most recent schedule updates.
CS15826 | Multimedia Databases and Datamining: Multimedia DataBases and Datamining | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15826&SEMESTER=S17 | instructors:Faloutsos, Christos description:Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.  DESCRIPTION    The course covers advanced algorithms for learning, analysis, data management and visualization of large datasets. Topics include indexing for text and DNA databases, searching medical and multimedia databases by content, fundamental signal processing methods, compression, fractals in databases, data mining, privacy and security issues, rule discovery, data visualization, graph mining, stream mining.
CS15829 | Special Topics in Software SystemsThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15829&SEMESTER=F16 | description:Please refer to href=http://www.cs.cmu.edu/csd-grad/courseschedulef13.html this link for the most recent schedule updates.
CS15850 | Advanced Algorithms: Advanced Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15850&SEMESTER=S17 | instructors:Gupta, Anupam description:Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15859 | Special Topics in Theory: | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15859&SEMESTER=S17 | instructors:Rudich, Steven Blum, Manuel description:Section AA: This course is aimed as an introduction to theoretical cryptography for graduate and advanced undergraduate students. We will cover formal definitions of security, as well as constructions of some of the most useful and popular primitives in cryptography; pseudorandom generators, encryption, signatures, zero-knowledge, multi-party computation, etc. In addition , we will cover the necessary number-theoretic background. Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15862 | Computational Photography | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15862&SEMESTER=F16 | instructors:Kitani, Kris description:COURSE OVERVIEW: Computational Photography is an emerging new field created by the convergence of computer graphics, computer vision and photography. Its role is to overcome the limitations of the traditional camera by using computational techniques to produce a richer, more vivid, perhaps more perceptually meaningful representation of our visual world.  The aim of this advanced undergraduate course is to study ways in which samples from the real world (images and video) can be used to generate compelling computer graphics imagery. We will learn how to acquire, represent, and render scenes from digitized photographs. Several popular image-based algorithms will be presented, with an emphasis on using these techniques to build practical systems. This hands-on emphasis will be reflected in the programming assignments, in which students will have the opportunity to acquire their own images of indoor and outdoor scenes and develop the image analysis and synthesis tools needed to render and view the scenes on the computer.  Please refer to https://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.
CS15887 | Planning, Execution, and Learning: Planning, Execution, and Learning | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15887&SEMESTER=F16 | instructors:Veloso, Maria Manuela Likhachev, Maxim description:Please refer to https://www.cs.cmu.edu/csd-grad/courseschedulef16.html for the most recent schedule updates.  Summary: Planning is ubiquitous in everyday life -- from planning how to make dinner to planning how to graduate from University with the least amount of work. Researchers in AI have studied planning problems for many years, and many techniques exist for automating planning processes.  This course will explore both classical and modern approaches to planning. Issues to be discussed include: how to represent actions and world state, how to search for plans efficiently, how to deal with uncertainty in actions and the world state, how to find good or optimal plans,how to represent time, and how to dynamically combine planning and execution.  Specific planning techniques to be covered include: means-ends analysis, linear and non-linear planning, partial-order planning, graph-based planning, heuristic planning, BBD-based planning, hierarchical planning, temporal planning, conditional and conformant planning, probabilistic planning and learning using Markov models (MDPs and POMDPs), integration of planning, perception and execution, execution monitoring and replanning, path planning, multi-agent planning, and scheduling.  There are no explicit prerequisites, but a basic knowledge of AI is assumed.
CS15891 | V-Unit in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15891&SEMESTER=S17 | instructors:Veloso, Maria Manuela description:Please refer to http://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15897 | Advanced Topics in Parallel Computing:This Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15897&SEMESTER=S17 | instructors:Acar, Umut description:Section A: In this special topics course on parallel computing, the students will   learn about the foundations of parallel computing and complete a  research project.   The course will cover both theory and  practice. The topics covered will include  basic parallel algorithms  for sequences (e.g., mapping, reductions), trees  (e.g., tree  contraction), and graphs (graph search, connectivity, graph  contraction)  as well as scheduling algorithms (e.g., work stealing)   for mapping parallel computation to hardware for optimal efficiency  and performance.   There will be one midterm, several assignments  (involving programming),  and one project; the project will account for  50 of the grade.      ** Project Ideas **     The project can be theoretical or practical.  The ideal project would  be one that  adds parallelism to the students current research. For  example, if the student  does research in a field such as  algorithms/graphics/robotics and he or she can   design/analyze/implement a parallel algorithm (possibly for an open  problem);  if the student does research on a field such as programming  languages or databases,  she or he can design/implement language/query  support for parallelism; if the  student does research on machine  learning, he or she can develop a framework  for performing approximate  inference in parallel.   Projects can be done individually or in groups   and will lead to a small paper. We envision the students in the class   to review other project papers (as in a program committee) and provide   feedback to the authors. Please refer to https://www.cs.cmu.edu/csd-grad/courseschedules17.html for the most recent schedule updates.
CS15990 | Computer Science Colloquium | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15990&SEMESTER=S17 | description:None
CS15996 | Immigration Course in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15996&SEMESTER=F16 | instructors:Mowry, Todd description:None
CS15997 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15997&SEMESTER=S17 | instructors:Mowry, Todd description:None
CS15998 | Practicum in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15998&SEMESTER=S17 | instructors:Mowry, Todd description:None
