syntax = "proto3";

package zz;

message OrchestratorRequest {
	string cidr = 1;
	int32 port = 2;
}

message PortScannerRequest {
	string cidr = 1;
	int32 port = 2;
	int32 batch_size = 3;
	string request_id = 4;
}

message AppScannerRequest {
	repeated string hosts = 1;
	int32 port = 2;
	string request_id = 3;
}

message RPCResponse {
	string request_id = 1;
}



// Orchestrator splits a cidr and sends requests to Smap
service Orchestrator {
	rpc In (OrchestratorRequest) returns (RPCResponse) {}
}

// PortScanner scans a cidr, and sends hosts with open port to AppScanner
service PortScanner {
	rpc In (PortScannerRequest) returns (RPCResponse) {}
}

// AppScanner tries to identify service running on port
service AppScanner {
	rpc In (AppScannerRequest) returns (RPCResponse) {}
}
